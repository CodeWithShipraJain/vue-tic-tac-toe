/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./src/App.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'App'\n});\n\n//# sourceURL=webpack:///./src/App.vue?./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/css/tictactoe.scss":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/css/tictactoe.scss ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.i, \"@import url(https://fonts.googleapis.com/css?family=Yesteryear);\"]);\nexports.push([module.i, \"@import url(https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css);\"]);\n// Module\nexports.push([module.i, \"@-webkit-keyframes winAnim {\\n  0% {\\n    background-color: cyan; }\\n  100% {\\n    background-color: #508ABB; } }\\n\\n@-moz-keyframes winAnim {\\n  0% {\\n    background-color: cyan; }\\n  100% {\\n    background-color: #508ABB; } }\\n\\n@-o-keyframes winAnim {\\n  0% {\\n    background-color: cyan; }\\n  100% {\\n    background-color: #508ABB; } }\\n\\n@keyframes winAnim {\\n  0% {\\n    background-color: cyan; }\\n  100% {\\n    background-color: #508ABB; } }\\n\\n@keyframes winAnim {\\n  0% {\\n    background-color: cyan; }\\n  100% {\\n    background-color: #508ABB; } }\\n\\n* {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  outline-style: none;\\n  /*IE*/ }\\n\\n.center-box, .app, .play-box .symbol {\\n  margin: auto;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0; }\\n\\nhtml, body {\\n  background-color: #d2dbdc;\\n  height: 100%;\\n  width: 100%; }\\n\\n.app {\\n  width: 80%;\\n  height: 70%;\\n  max-width: 550px;\\n  background-color: #508ABB;\\n  box-shadow: 0 5px 30px -5px rgba(0, 0, 0, 0.85);\\n  border-radius: 10px; }\\n  .app .app-container,\\n  .app .app-row {\\n    height: 100%; }\\n\\n.play-box, .symbol-option {\\n  font-family: 'Yesteryear', cursive; }\\n\\n.play-box {\\n  border-bottom: 2px solid #fff;\\n  border-right: 2px solid #fff;\\n  height: 33.33333%;\\n  cursor: pointer;\\n  position: relative; }\\n  .play-box.last-right {\\n    border-right: none; }\\n  .play-box.last-bottom {\\n    border-bottom: none; }\\n  .play-box.win {\\n    -webkit-animation: winAnim .2s ease-out infinite;\\n    -moz-animation: winAnim .2s ease-out infinite;\\n    -o-animation: winAnim .2s ease-out infinite;\\n    animation: winAnim .2s ease-out infinite;\\n    animation: winAnim .5s infinite; }\\n  .play-box .symbol {\\n    width: 50%;\\n    height: 50px;\\n    text-align: center;\\n    line-height: 50px;\\n    font-size: 35px;\\n    color: white; }\\n\\n.modal-content .content {\\n  padding: 15px;\\n  text-align: center;\\n  margin: 0; }\\n  .modal-content .content.body {\\n    line-height: 2; }\\n\\n.modal-content .symbol-options {\\n  width: 200px;\\n  margin-top: 10px; }\\n  .modal-content .symbol-options .symbol-option:first-child {\\n    margin-right: 10px; }\\n  .modal-content .symbol-options .symbol-option:last-child {\\n    margin-left: 10px; }\\n\\n.modal-content .warning-hr {\\n  margin: 0; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack:///./src/css/tictactoe.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/App.vue?vue&type=style&index=0&lang=css&":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=style&index=0&lang=css& ***!
  \*******************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \"\\nbody {\\r\\n  margin: 0px;\\n}\\n#app {\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n  text-align: center;\\r\\n  color: #2c3e50;\\r\\n  margin-left: 5%;\\r\\n  margin-right: 5%;\\n}\\r\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack:///./src/App.vue?./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.6.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-03-02T17:08Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if ( true && typeof module.exports === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var flat = arr.flat ? function (array) {\n    return arr.flat.call(array);\n  } : function (array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n    // Plus for old WebKit, typeof returns \"function\" for HTML collections\n    // (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\" && typeof obj.item !== \"function\";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var document = window.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i,\n        val,\n        script = doc.createElement(\"script\");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don't support the \"nonce\" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = \"3.6.0\",\n      // Define a local copy of jQuery\n  jQuery = function (selector, context) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  };\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function () {\n      return slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function (elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function (callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function (callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function () {\n      return this.pushStack(slice.apply(this, arguments));\n    },\n    first: function () {\n      return this.eq(0);\n    },\n    last: function () {\n      return this.eq(-1);\n    },\n    even: function () {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return (i + 1) % 2;\n      }));\n    },\n    odd: function () {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return i % 2;\n      }));\n    },\n    eq: function (i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function () {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === \"boolean\") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (typeof target !== \"object\" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          copy = options[name]; // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n\n          if (name === \"__proto__\" || target === copy) {\n            continue;\n          } // Recurse if we're merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name]; // Ensure proper type for the source value\n\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n\n            copyIsArray = false; // Never move original objects, clone them\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function (msg) {\n      throw new Error(msg);\n    },\n    noop: function () {},\n    isPlainObject: function (obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function (obj) {\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function (code, options, doc) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      }, doc);\n    },\n    each: function (obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // results is for internal usage only\n    makeArray: function (arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function (elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function (first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function (elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function (elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return flat(ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (_i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.6\n   * https://sizzlejs.com/\n   *\n   * Copyright JS Foundation and other contributors\n   * Released under the MIT license\n   * https://js.foundation/\n   *\n   * Date: 2021-02-16\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = \"sizzle\" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        nonnativeSelectorCache = createCache(),\n        sortOrder = function (a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        pushNative = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it's faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function (list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" + \"ismap|loop|multiple|open|readonly|required|scoped\",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n        // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n    identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + // Operator (capture 2)\n    \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5]\n    // or strings [capture 3 or capture 4]\"\n    \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n        pseudos = \":(\" + identifier + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n    \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n    \".*\" + \")\\\\)|)\",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n        rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n        rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n        rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n        rdescend = new RegExp(whitespace + \"|>\"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n        matchExpr = {\n      \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n      \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n      \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n      \"ATTR\": new RegExp(\"^\" + attributes),\n      \"PSEUDO\": new RegExp(\"^\" + pseudos),\n      \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n      \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    },\n        rhtml = /HTML$/i,\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\"),\n        funescape = function (escape, nonHex) {\n      var high = \"0x\" + escape.slice(1) - 0x10000;\n      return nonHex ? // Strip the backslash prefix from a non-hex escape sequence\n      nonHex : // Replace a hexadecimal escape sequence with the encoded Unicode code point\n      // Support: IE <=11+\n      // For values outside the Basic Multilingual Plane (BMP), manually construct a\n      // surrogate pair\n      high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function (ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === \"\\0\") {\n          return \"\\uFFFD\";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return \"\\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a \"Permission Denied\"\n    // error in IE\n    unloadHandler = function () {\n      setDocument();\n    },\n        inDisabledFieldset = addCombinator(function (elem) {\n      return elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n    }, {\n      dir: \"parentNode\",\n      next: \"legend\"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n      // eslint-disable-next-line no-unused-expressions\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          pushNative.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can't trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        setDocument(context);\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && ( // Support: IE 8 only\n          // Exclude object elements\n          nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\")) {\n            newSelector = selector;\n            newContext = context; // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // The technique has to be used as well when a leading combinator is used\n            // as such selectors are not recognized by querySelectorAll.\n            // Thanks to Andrew Dupont for this technique.\n\n            if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {\n              // Expand context for sibling selectors\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context; // We can use :scope instead of the ID hack if the browser\n              // supports it & if we're not changing the context.\n\n              if (newContext !== context || !support.scope) {\n                // Capture the context ID, setting it first if necessary\n                if (nid = context.getAttribute(\"id\")) {\n                  nid = nid.replace(rcssescape, fcssescape);\n                } else {\n                  context.setAttribute(\"id\", nid = expando);\n                }\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = (nid ? \"#\" + nid : \":scope\") + \" \" + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(\",\");\n            }\n\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute(\"id\");\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + \" \"] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split(\"|\"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      var namespace = elem && elem.namespaceURI,\n          docElem = elem && (elem.ownerDocument || elem).documentElement; // Support: IE <=8\n      // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n      // https://bugs.jquery.com/ticket/4833\n\n      return !rhtml.test(namespace || docElem && docElem.nodeName || \"HTML\");\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9 - 11+, Edge 12 - 18+\n      // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n\n      if (preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener(\"unload\", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent(\"onunload\", unloadHandler);\n        }\n      } // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n      // Safari 4 - 5 only, Opera <=11.6 - 12.x only\n      // IE/Edge & older browsers don't support the :scope pseudo-class.\n      // Support: Safari 6.0 only\n      // Safari 6.0 supports :scope but it's an alias of :root there.\n\n\n      support.scope = assert(function (el) {\n        docElem.appendChild(el).appendChild(document.createElement(\"div\"));\n        return typeof el.querySelectorAll !== \"undefined\" && !el.querySelectorAll(\":scope fieldset div\").length;\n      });\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n      support.attributes = assert(function (el) {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName(\"*\") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(\"\"));\n        return !el.getElementsByTagName(\"*\").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === \"*\") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          var input; // Select is set to empty string on purpose\n          // This is to test IE's treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n\n          docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but \"safe\" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Support: IE8\n          // Boolean attributes and \"value\" are not treated correctly\n\n\n          if (!el.querySelectorAll(\"[selected]\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n            rbuggyQSA.push(\"~=\");\n          } // Support: IE 11+, Edge 15 - 18+\n          // IE 11/Edge don't find elements on a `[name='']` query in some cases.\n          // Adding a temporary attribute to the document before the selection works\n          // around the issue.\n          // Interestingly, IE 10 & older don't seem to have the issue.\n\n\n          input = document.createElement(\"input\");\n          input.setAttribute(\"name\", \"\");\n          el.appendChild(input);\n\n          if (!el.querySelectorAll(\"[name='']\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(\":checked\").length) {\n            rbuggyQSA.push(\":checked\");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n            rbuggyQSA.push(\".#.+[+~]\");\n          } // Support: Firefox <=3.6 - 5 only\n          // Old Firefox doesn't throw on a badly-escaped identifier.\n\n\n          el.querySelectorAll(\"\\\\\\f\");\n          rbuggyQSA.push(\"[\\\\r\\\\n\\\\f]\");\n        });\n        assert(function (el) {\n          el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"hidden\");\n          el.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll(\"[name=d]\").length) {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(\":enabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: IE9-11+\n          // IE's :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(\":disabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: Opera 10 - 11 only\n          // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll(\"*,:x\");\n          rbuggyQSA.push(\",.*:\");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it's possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, \"*\"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, \"[s!='']:x\");\n          rbuggyMatches.push(\"!=\", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n\n\n        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          } // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n\n\n          if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n\n          /* eslint-disable eqeqeq */\n          return a == document ? -1 : b == document ? 1 :\n          /* eslint-enable eqeqeq */\n          aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n\n        /* eslint-disable eqeqeq */\n        ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 :\n        /* eslint-enable eqeqeq */\n        0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      setDocument(elem);\n\n      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((context.ownerDocument || context) != document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((elem.ownerDocument || elem) != document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don't get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + \"\").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = \"\",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === \"string\") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        \"ATTR\": function (match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n\n          return match.slice(0, 4);\n        },\n        \"CHILD\": function (match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        \"PSEUDO\": function (match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr[\"CHILD\"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        \"TAG\": function (nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        \"CLASS\": function (className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        \"ATTR\": function (name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === \"!=\";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += \"\";\n            /* eslint-disable max-len */\n\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n            /* eslint-enable max-len */\n          };\n        },\n        \"CHILD\": function (type, what, _argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n              forward = type.slice(-4) !== \"last\",\n              ofType = what === \"of-type\";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, _context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        \"PSEUDO\": function (pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        \"not\": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, _context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        \"has\": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        \"contains\": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        \"lang\": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            Sizzle.error(\"unsupported lang: \" + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        \"target\": function (elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        \"root\": function (elem) {\n          return elem === docElem;\n        },\n        \"focus\": function (elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        \"enabled\": createDisabledPseudo(false),\n        \"disabled\": createDisabledPseudo(true),\n        \"checked\": function (elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n        },\n        \"selected\": function (elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            // eslint-disable-next-line no-unused-expressions\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        \"empty\": function (elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        \"parent\": function (elem) {\n          return !Expr.pseudos[\"empty\"](elem);\n        },\n        // Element/input types\n        \"header\": function (elem) {\n          return rheader.test(elem.nodeName);\n        },\n        \"input\": function (elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        \"button\": function (elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n        \"text\": function (elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n          // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        \"first\": createPositionalPseudo(function () {\n          return [0];\n        }),\n        \"last\": createPositionalPseudo(function (_matchIndexes, length) {\n          return [length - 1];\n        }),\n        \"eq\": createPositionalPseudo(function (_matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        \"even\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument > length ? length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + \" \"];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = \"\";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === \"parentNode\",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[\" \"],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function (seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          outermostContext = context == document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0; // Support: IE 11+, Edge 17 - 18+\n            // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n            // two documents; shallow comparisons work.\n            // eslint-disable-next-line eqeqeq\n\n            if (!context && elem.ownerDocument != document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n        // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + \" \"];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === \"function\" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren't passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property \"interpolation\"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\") === \"#\";\n    })) {\n      addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute(\"value\")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\");\n      return el.firstChild.getAttribute(\"value\") === \"\";\n    })) {\n      addHandle(\"value\", function (elem, _name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute(\"disabled\") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function (elem, dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var siblings = function (n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function (selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function (selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function (selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function (selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === \"string\") {\n      if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function (target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function (selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== \"string\" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function (elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function (selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function (selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function (elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function (elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function (elem, _i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function (elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function (elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function (elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function (elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function (elem, _i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function (elem, _i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function (elem) {\n      return siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function (elem) {\n      return siblings(elem.firstChild);\n    },\n    contents: function (elem) {\n      if (elem.contentDocument != null && // Support: IE 11+\n      // <object> elements with no `data` attribute has an object\n      // `contentDocument` with a `null` prototype.\n      getProto(elem.contentDocument)) {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n\n\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    fired,\n        // Flag to prevent firing\n    locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function () {\n      // Enforce single-firing\n      locked = locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn't re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we're done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we're done firing for good\n\n      if (locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = \"\";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function () {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== \"string\") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function () {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function (fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function () {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function () {\n        locked = queue = [];\n        list = memory = \"\";\n        return this;\n      },\n      disabled: function () {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function () {\n        locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = \"\";\n        }\n\n        return this;\n      },\n      locked: function () {\n        return !!locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function (context, args) {\n        if (!locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function () {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function () {\n        return !!fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function (func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n          state = \"pending\",\n          promise = {\n        state: function () {\n          return state;\n        },\n        always: function () {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        \"catch\": function (fn) {\n          return promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function\n          /* fnDone, fnFail, fnProgress */\n        () {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (_i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function (onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function () {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError(\"Thenable self-resolution\");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && ( // Support: Promises/A+ section 2.3.4\n                // https://promisesaplus.com/#point-64\n                // Only check objects and functions for thenability\n                typeof returned === \"object\" || typeof returned === \"function\") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it's otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function (obj) {\n          return obj != null ? jQuery.extend(obj, promise) : promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      promise.promise(deferred); // Call given func if any\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function (singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = slice.call(arguments),\n          // the primary Deferred\n      primary = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function (i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n\n          if (! --remaining) {\n            primary.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (primary.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return primary.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), primary.reject);\n      }\n\n      return primary.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function (wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n\n\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener(\"load\", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n\n\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === \"object\") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function (elem, _key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(_all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function (owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function (owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function (owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function (owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function (owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function (owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there's no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function (owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n\n    if (data === \"false\") {\n      return false;\n    }\n\n    if (data === \"null\") {\n      return null;\n    } // Only convert to a number if it doesn't change the string\n\n\n    if (data === +data + \"\") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function (elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function (elem, name, data) {\n      return dataUser.access(elem, name, data);\n    },\n    removeData: function (elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function (elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function (elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function (key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (typeof key === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn't exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function (key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function (elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function (elem, type) {\n      type = type || \"fx\";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function () {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function (elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function (type, data) {\n      var setter = 2;\n\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function (type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function (type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function (type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function () {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || \"fx\";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n  var documentElement = document.documentElement;\n\n  var isAttached = function (elem) {\n    return jQuery.contains(elem.ownerDocument, elem);\n  },\n      composed = {\n    composed: true\n  }; // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n  // Check attachment across shadow DOM boundaries when possible (gh-3504)\n  // Support: iOS 10.0-10.2 only\n  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n  // leading to errors. We need to check for `getRootNode`.\n\n\n  if (documentElement.getRootNode) {\n    isAttached = function (elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n\n  var isHiddenWithinTree = function (elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, \"\");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n\n    if (display === \"none\") {\n      display = \"block\";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\"; // Remember what we're overwriting\n\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function () {\n      return showHide(this, true);\n    },\n    hide: function () {\n      return showHide(this);\n    },\n    toggle: function (state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i;\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement(\"div\")),\n        input = document.createElement(\"input\"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue; // Support: IE <=9 only\n    // IE <=9 replaces <option> tags with their contents when inserted outside of\n    // the select element.\n\n    div.innerHTML = \"<option></option>\";\n    support.option = !!div.lastChild;\n  })(); // We have to close these tags to support XHTML (#13200)\n\n\n  var wrapMap = {\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  };\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td; // Support: IE <=9 only\n\n  if (!support.option) {\n    wrapMap.optgroup = wrapMap.option = [1, \"<select multiple='multiple'>\", \"</select>\"];\n  }\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        attached,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = \"\";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = \"\";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      attached = isAttached(elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n      if (attached) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  var rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 - 11+\n  // focus() and blur() are asynchronous, except when they are no-op.\n  // So expect focus to be synchronous when the element is already active,\n  // and blur to be synchronous when the element is not already active.\n  // (focus and blur are always synchronous in other supported browsers,\n  // this just defines when we can count on it).\n\n\n  function expectSync(elem, type) {\n    return elem === safeActiveElement() === (type === \"focus\");\n  } // Support: IE <=9 only\n  // Accessing document.activeElement can throw unexpectedly\n  // https://bugs.jquery.com/ticket/13393\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (typeof types === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function (event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function (elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Only attach events to objects that accept data\n\n      if (!acceptData(elem)) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element's event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = Object.create(null);\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn); // Init the event handler queue if we're the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element's handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function (elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it's no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function (nativeEvent) {\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          // Make a writable jQuery.Event from the native event object\n      event = jQuery.event.fix(nativeEvent),\n          handlers = (dataPriv.get(this, \"events\") || Object.create(null))[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event's.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function (event, handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (#13208)\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + \" \";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function (name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function (value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function (originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function (data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Claim the first handler\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            // dataPriv.set( el, \"click\", ... )\n            leverageNative(el, \"click\", returnTrue);\n          } // Return false to allow normal processing in the caller\n\n\n          return false;\n        },\n        trigger: function (data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Force setup before triggering a click\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            leverageNative(el, \"click\");\n          } // Return non-false to allow normal event-path propagation\n\n\n          return true;\n        },\n        // For cross-browser consistency, suppress native .click() on links\n        // Also prevent it if we're currently inside a leveraged native-event stack\n        _default: function (event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, \"input\") && dataPriv.get(target, \"click\") || nodeName(target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function (event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  }; // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n\n  function leverageNative(el, type, expectSync) {\n    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n    if (!expectSync) {\n      if (dataPriv.get(el, type) === undefined) {\n        jQuery.event.add(el, type, returnTrue);\n      }\n\n      return;\n    } // Register the controller as a special universal handler for all event namespaces\n\n\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function (event) {\n        var notAsync,\n            result,\n            saved = dataPriv.get(this, type);\n\n        if (event.isTrigger & 1 && this[type]) {\n          // Interrupt processing of the outer synthetic .trigger()ed event\n          // Saved data should be false in such cases, but might be a leftover capture object\n          // from an async native handler (gh-4350)\n          if (!saved.length) {\n            // Store arguments for use when handling the inner native event\n            // There will always be at least one argument (an event object), so this array\n            // will not be confused with a leftover capture object.\n            saved = slice.call(arguments);\n            dataPriv.set(this, type, saved); // Trigger the native event and capture its result\n            // Support: IE <=9 - 11+\n            // focus() and blur() are asynchronous\n\n            notAsync = expectSync(this, type);\n            this[type]();\n            result = dataPriv.get(this, type);\n\n            if (saved !== result || notAsync) {\n              dataPriv.set(this, type, false);\n            } else {\n              result = {};\n            }\n\n            if (saved !== result) {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation();\n              event.preventDefault(); // Support: Chrome 86+\n              // In Chrome, if an element having a focusout handler is blurred by\n              // clicking outside of it, it invokes the handler synchronously. If\n              // that handler calls `.remove()` on the element, the data is cleared,\n              // leaving `result` undefined. We need to guard against this.\n\n              return result && result.value;\n            } // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur), assume that the surrogate already propagated from triggering the\n            // native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base), but that seems\n            // less bad than duplication.\n\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          } // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n\n        } else if (saved.length) {\n          // ...and capture the result\n          dataPriv.set(this, type, {\n            value: jQuery.event.trigger( // Support: IE <=9 - 11+\n            // Extend with the prototype to reset the above stopImmediatePropagation()\n            jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)\n          }); // Abort handling of the native event\n\n          event.stopImmediatePropagation();\n        }\n      }\n    });\n  }\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn't have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function () {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function () {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function () {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: true\n  }, jQuery.event.addProp);\n  jQuery.each({\n    focus: \"focusin\",\n    blur: \"focusout\"\n  }, function (type, delegateType) {\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function () {\n        // Claim the first handler\n        // dataPriv.set( this, \"focus\", ... )\n        // dataPriv.set( this, \"blur\", ... )\n        leverageNative(this, type, expectSync); // Return false to allow normal processing in the caller\n\n        return false;\n      },\n      trigger: function () {\n        // Force setup before trigger\n        leverageNative(this, type); // Return non-false to allow normal event-path propagation\n\n        return true;\n      },\n      // Suppress native focus or blur as it's already being fired\n      // in leverageNative.\n      _default: function () {\n        return true;\n      },\n      delegateType: delegateType\n    };\n  }); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function (event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn);\n    },\n    one: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn, 1);\n    },\n    off: function (types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (typeof types === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked=\"checked\" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.get(src);\n      events = pdataOld.events;\n\n      if (events) {\n        dataPriv.remove(dest, \"handle events\");\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = flat(args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute(\"nonce\")\n                  }, doc);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function (html) {\n      return html;\n    },\n    clone: function (elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = isAttached(elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, \"script\");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function (elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function (selector) {\n      return remove(this, selector, true);\n    },\n    remove: function (selector) {\n      return remove(this, selector);\n    },\n    text: function (value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function () {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = \"\";\n        }\n      }\n\n      return this;\n    },\n    clone: function (dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function (value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function () {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n  var getStyles = function (elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var swap = function (elem, options, callback) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.call(elem); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don't get tricked when zoom affects offsetWidth (gh-4029)\n\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableTrDimensionsVal,\n        reliableMarginLeftVal,\n        container = document.createElement(\"div\"),\n        div = document.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function () {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function () {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function () {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function () {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function () {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      //\n      // Support: Firefox 70+\n      // Only Firefox includes border widths\n      // in computed dimensions. (gh-4529)\n      reliableTrDimensions: function () {\n        var table, tr, trChild, trStyle;\n\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement(\"table\");\n          tr = document.createElement(\"tr\");\n          trChild = document.createElement(\"div\");\n          table.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n          tr.style.cssText = \"border:1px solid\"; // Support: Chrome 86+\n          // Height set through cssText does not get applied.\n          // Computed height then comes back as 0.\n\n          tr.style.height = \"1px\";\n          trChild.style.height = \"9px\"; // Support: Android 8 Chrome 86+\n          // In our bodyBackground.html iframe,\n          // display for all div elements is set to \"inline\",\n          // which causes a problem only in Android 8 Chrome 86.\n          // Ensuring the div is display: block\n          // gets around this issue.\n\n          trChild.style.display = \"block\";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;\n          documentElement.removeChild(table);\n        }\n\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function () {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n      emptyStyle = document.createElement(\"div\").style,\n      vendorProps = {}; // Return a vendor-prefixed property or undefined\n\n  function vendorPropName(name) {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n\n\n  function finalPropName(name) {\n    var final = jQuery.cssProps[name] || vendorProps[name];\n\n    if (final) {\n      return final;\n    }\n\n    if (name in emptyStyle) {\n      return name;\n    }\n\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n\n  var // Swappable if display is none or starts with table\n  // except \"table\", \"table-cell\", or \"table-caption\"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: \"absolute\",\n    visibility: \"hidden\",\n    display: \"block\"\n  },\n      cssNormalTransform = {\n    letterSpacing: \"0\",\n    fontWeight: \"400\"\n  };\n\n  function setPositiveNumber(_elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === \"margin\") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // For \"border\" or \"margin\", add border\n\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        } // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        } // For \"content\" or \"padding\", subtract border\n\n\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5 // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964)\n      )) || 0;\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n    // Fake content-box until we know it's needed to know the true value.\n    boxSizingNeeded = !support.boxSizingReliable() || extra,\n        isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n        valueIsBorderBox = isBorderBox,\n        val = curCSS(elem, dimension, styles),\n        offsetProp = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1); // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = \"auto\";\n    } // Support: IE 9 - 11 only\n    // Use offsetWidth/offsetHeight for when box sizing is unreliable.\n    // In those cases, the computed value can be trusted to be border-box.\n\n\n    if ((!support.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+\n    // IE/Edge misreport `getComputedStyle` of table rows with width/height\n    // set in CSS while `offset*` properties report correct values.\n    // Interestingly, in some cases IE 9 doesn't suffer from this issue.\n    !support.reliableTrDimensions() && nodeName(elem, \"tr\") || // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    val === \"auto\" || // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n    !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") && // Make sure the element is visible & connected\n    elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\"; // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n\n      valueIsBorderBox = offsetProp in elem;\n\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    } // Normalize \"\" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element's box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function (elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"gridArea\": true,\n      \"gridColumn\": true,\n      \"gridColumnEnd\": true,\n      \"gridColumnStart\": true,\n      \"gridRow\": true,\n      \"gridRowEnd\": true,\n      \"gridRowStart\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function (elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we're working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n      if (value !== undefined) {\n        type = typeof value; // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = \"number\";\n        } // Make sure that null and NaN values aren't set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // \"px\" to a few hardcoded values.\n\n\n        if (type === \"number\" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        } // background-* props affect original clone's values\n\n\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function (elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert \"normal\" to computed value\n\n\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (_i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function (elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && ( // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function (elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            // Only read styles.position if the test has a chance to fail\n        // to avoid forcing a reflow.\n        scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === \"absolute\",\n            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n        boxSizingNeeded = scrollboxSizeBuggy || extra,\n            isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0; // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function (value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function (name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function (elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function () {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function (percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function (tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, \"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\n\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function (tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function (tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function (p) {\n      return p;\n    },\n    swing: function (p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = \"width\" in props || \"height\" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, \"fxshow\"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict \"overflow\" and \"display\" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n\n      display = jQuery.css(elem, \"display\");\n\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n\n          style.display = \"inline-block\";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, \"fxshow\");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don't match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function () {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function (prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function (gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function (props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function (callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> \"fx\"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function (speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function (prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function () {\n        // Operate on a copy of prop so per-property easing won't be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, \"finish\")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function (type, clearQueue, gotoEnd) {\n      var stopQueue = function (hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue) {\n        this.queue(type || \"fx\", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + \"queueHooks\",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function (type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + \"queue\"],\n            hooks = data[type + \"queueHooks\"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (_i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement(\"input\"),\n        select = document.createElement(\"select\"),\n        opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n\n    support.checkOn = input.value !== \"\"; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function (name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function (name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function (elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function (elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function (elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (_i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function (name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function (name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function (elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                cur += clazz + \" \";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n                cur = cur.replace(\" \" + clazz + \" \", \" \");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function (value, stateVal) {\n      var type = typeof value,\n          isValidValue = type === \"string\" || Array.isArray(value);\n\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          } // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function (selector) {\n      var className,\n          elem,\n          i = 0;\n      className = \" \" + selector + \" \";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function (value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? \"\" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as \"\"; convert numbers to string\n\n\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function (elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function (elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === \"select-one\",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don't need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function (elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function (elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = \"onfocusin\" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function (e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function (event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, \"type\") ? event.type : event,\n          namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, \"events\") || Object.create(null))[event.type] && dataPriv.get(cur, \"handle\");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function (type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function (type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function (type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn't have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: \"focusin\",\n      blur: \"focusout\"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function (event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function () {\n          // Handle: regular nodes (via `this.ownerDocument`), window\n          // (via `this.document`) & document (via `this`).\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function () {\n          var doc = this.ownerDocument || this.document || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = {\n    guid: Date.now()\n  };\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml, parserErrorElem;\n\n    if (!data || typeof data !== \"string\") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {}\n\n    parserErrorElem = xml && xml.getElementsByTagName(\"parsererror\")[0];\n\n    if (!xml || parserErrorElem) {\n      jQuery.error(\"Invalid XML: \" + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function (el) {\n        return el.textContent;\n      }).join(\"\\n\") : data));\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function (key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    };\n\n    if (a == null) {\n      return \"\";\n    } // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join(\"&\");\n  };\n\n  jQuery.fn.extend({\n    serialize: function () {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function () {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (_i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol \"*\" can be used\n   * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol \"*\" can be used\n   * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = \"*/\".concat(\"*\"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  } // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    } // Check if we're dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function (target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function (url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === \"object\") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks(\"once memory\"),\n          // Status-dependent callbacks\n      statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = \"canceled\",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function (key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase() + \" \"] = (responseHeaders[match[1].toLowerCase() + \" \"] || []).concat(match[2]);\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase() + \" \"];\n          }\n\n          return match == null ? null : match.join(\", \");\n        },\n        // Raw string\n        getAllResponseHeaders: function () {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function (name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function (type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function (map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                statusCode[code] = [statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function (statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"]; // A cross-domain request is in order when the origin doesn't match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, \"\"); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce.guid++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = \"abort\"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || \"\"; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Use a noop converter for missing script but not if jsonp\n\n\n        if (!isSuccess && jQuery.inArray(\"script\", s.dataTypes) > -1 && jQuery.inArray(\"json\", s.dataTypes) < 0) {\n          s.converters[\"text script\"] = function () {};\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader(\"etag\");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\"; // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\"; // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = \"error\";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(statusCode);\n        statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function (url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function (url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (_i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n  jQuery.ajaxPrefilter(function (s) {\n    var i;\n\n    for (i in s.headers) {\n      if (i.toLowerCase() === \"content-type\") {\n        s.contentType = s.headers[i] || \"\";\n      }\n    }\n  });\n\n  jQuery._evalUrl = function (url, options, doc) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126)\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        \"text script\": function () {}\n      },\n      dataFilter: function (response) {\n        jQuery.globalEval(response, options, doc);\n      }\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function (html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function (html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function (html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function (selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function (headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n\n\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          callback = function (type) {\n            return function () {\n              if (callback) {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = callback(\"error\"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          callback = callback(\"abort\");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function (text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache's special case and crossDomain\n\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, callback;\n      return {\n        send: function (_, complete) {\n          script = jQuery(\"<script>\").attr(s.scriptAttrs || {}).prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", callback = function (evt) {\n            script.remove();\n            callback = null;\n\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function () {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = \"json\"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return \"script\";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }(); // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(\" \");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it's a function\n\n\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  };\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function (elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, \"position\"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function (options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function () {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function () {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each([\"top\", \"left\"], function (_i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n            extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (_i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n  jQuery.fn.extend({\n    bind: function (types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function (types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function (selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function (selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    },\n    hover: function (fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (_i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  }); // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g; // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = slice.call(arguments, 2);\n\n    proxy = function () {\n      return fn.apply(context || this, args.concat(slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") && // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  };\n\n  jQuery.trim = function (text) {\n    return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (typeof noGlobal === \"undefined\") {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function (handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function (event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function (handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function (handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function (handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function (handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/App.vue?vue&type=template&id=7ba5bd90&":
/*!**********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=template&id=7ba5bd90& ***!
  \**********************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { attrs: { id: \"app\" } }, [\n      _c(\"div\", { staticClass: \"app\" }, [\n        _c(\"div\", { staticClass: \"container-fluid app-container\" }, [\n          _c(\"div\", { staticClass: \"row app-row\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"col-xs-4 play-box\", attrs: { id: \"0\" } },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-xs-4 play-box\", attrs: { id: \"1\" } },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"col-xs-4 play-box last-right\",\n                attrs: { id: \"2\" },\n              },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-xs-4 play-box\", attrs: { id: \"3\" } },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-xs-4 play-box\", attrs: { id: \"4\" } },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"col-xs-4 play-box last-right\",\n                attrs: { id: \"5\" },\n              },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"col-xs-4 play-box last-bottom\",\n                attrs: { id: \"6\" },\n              },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"col-xs-4 play-box last-bottom\",\n                attrs: { id: \"7\" },\n              },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"col-xs-4 play-box last-right last-bottom\",\n                attrs: { id: \"8\" },\n              },\n              [_c(\"div\", { staticClass: \"symbol\" })]\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          staticClass: \"modal fade app-modal\",\n          attrs: {\n            tabindex: \"-1\",\n            role: \"dialog\",\n            \"aria-labelledby\": \"mySmallModalLabel\",\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"modal-dialog modal-size\" }, [\n            _c(\"div\", { staticClass: \"modal-content\" }, [\n              _c(\"h3\", { staticClass: \"content heading\" }, [\n                _vm._v(\"Warning!!!\"),\n              ]),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"warning-hr\" }),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"content body\" }, [\n                _vm._v(\n                  \"\\n          Please save your time and don't even think you're smart.\\n          \"\n                ),\n                _c(\"br\"),\n                _c(\"strong\", [\n                  _c(\"em\", [_vm._v(\"I'M SMARTER THAN YOU! HA-HA-HA!!!\")]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"br\"),\n                _vm._v(\"\\n          Wana try me? Chose : \"),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"center-block symbol-options\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"symbol-option btn btn-default btn-md\",\n                      attrs: { \"data-dismiss\": \"modal\" },\n                    },\n                    [_vm._v(\"\\n              X\\n            \")]\n                  ),\n                  _vm._v(\" OR \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"symbol-option btn btn-default btn-md\",\n                      attrs: { \"data-dismiss\": \"modal\" },\n                    },\n                    [_vm._v(\"\\n              O\\n            \")]\n                  ),\n                ]),\n              ]),\n            ]),\n          ]),\n        ]\n      ),\n    ])\n  },\n]\nrender._withStripped = true\n\n\n\n//# sourceURL=webpack:///./src/App.vue?./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js":
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js?");

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/App.vue?vue&type=style&index=0&lang=css&":
/*!***************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-style-loader!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options!./src/App.vue?vue&type=style&index=0&lang=css& ***!
  \***************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(/*! !../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css& */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/App.vue?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(/*! ../node_modules/vue-style-loader/lib/addStylesClient.js */ \"./node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"03ada772\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n\n//# sourceURL=webpack:///./src/App.vue?./node_modules/vue-style-loader!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/vue-style-loader/lib/addStylesClient.js":
/*!**************************************************************!*\
  !*** ./node_modules/vue-style-loader/lib/addStylesClient.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return addStylesClient; });\n/* harmony import */ var _listToStyles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./listToStyles */ \"./node_modules/vue-style-loader/lib/listToStyles.js\");\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\n\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nfunction addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = Object(_listToStyles__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = Object(_listToStyles__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js?");

/***/ }),

/***/ "./node_modules/vue-style-loader/lib/listToStyles.js":
/*!***********************************************************!*\
  !*** ./node_modules/vue-style-loader/lib/listToStyles.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return listToStyles; });\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nfunction listToStyles(parentId, list) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\n//# sourceURL=webpack:///./node_modules/vue-style-loader/lib/listToStyles.js?");

/***/ }),

/***/ "./node_modules/vue/dist/vue.runtime.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/vue/dist/vue.runtime.esm.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.6.14\n * (c) 2014-2021 Evan You\n * Released under the MIT License.\n */\n\n/*  */\nvar emptyObject = Object.freeze({}); // These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\n\nfunction isUndef(v) {\n  return v === undefined || v === null;\n}\n\nfunction isDef(v) {\n  return v !== undefined && v !== null;\n}\n\nfunction isTrue(v) {\n  return v === true;\n}\n\nfunction isFalse(v) {\n  return v === false;\n}\n/**\n * Check if value is primitive.\n */\n\n\nfunction isPrimitive(value) {\n  return typeof value === 'string' || typeof value === 'number' || // $flow-disable-line\n  typeof value === 'symbol' || typeof value === 'boolean';\n}\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\n\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\n\n\nvar _toString = Object.prototype.toString;\n\nfunction toRawType(value) {\n  return _toString.call(value).slice(8, -1);\n}\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\n\n\nfunction isPlainObject(obj) {\n  return _toString.call(obj) === '[object Object]';\n}\n\nfunction isRegExp(v) {\n  return _toString.call(v) === '[object RegExp]';\n}\n/**\n * Check if val is a valid array index.\n */\n\n\nfunction isValidArrayIndex(val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val);\n}\n\nfunction isPromise(val) {\n  return isDef(val) && typeof val.then === 'function' && typeof val.catch === 'function';\n}\n/**\n * Convert a value to a string that is actually rendered.\n */\n\n\nfunction toString(val) {\n  return val == null ? '' : Array.isArray(val) || isPlainObject(val) && val.toString === _toString ? JSON.stringify(val, null, 2) : String(val);\n}\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\n\n\nfunction toNumber(val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n;\n}\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\n\n\nfunction makeMap(str, expectsLowerCase) {\n  var map = Object.create(null);\n  var list = str.split(',');\n\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n\n  return expectsLowerCase ? function (val) {\n    return map[val.toLowerCase()];\n  } : function (val) {\n    return map[val];\n  };\n}\n/**\n * Check if a tag is a built-in tag.\n */\n\n\nvar isBuiltInTag = makeMap('slot,component', true);\n/**\n * Check if an attribute is a reserved attribute.\n */\n\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n/**\n * Remove an item from an array.\n */\n\nfunction remove(arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n\n    if (index > -1) {\n      return arr.splice(index, 1);\n    }\n  }\n}\n/**\n * Check whether an object has the property.\n */\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n/**\n * Create a cached version of a pure function.\n */\n\n\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n/**\n * Camelize a hyphen-delimited string.\n */\n\n\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) {\n    return c ? c.toUpperCase() : '';\n  });\n});\n/**\n * Capitalize a string.\n */\n\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\n/**\n * Hyphenate a camelCase string.\n */\n\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase();\n});\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\n\nfunction polyfillBind(fn, ctx) {\n  function boundFn(a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  }\n\n  boundFn._length = fn.length;\n  return boundFn;\n}\n\nfunction nativeBind(fn, ctx) {\n  return fn.bind(ctx);\n}\n\nvar bind = Function.prototype.bind ? nativeBind : polyfillBind;\n/**\n * Convert an Array-like object to a real Array.\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n\n  return ret;\n}\n/**\n * Mix properties into target object.\n */\n\n\nfunction extend(to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n\n  return to;\n}\n/**\n * Merge an Array of Objects into a single Object.\n */\n\n\nfunction toObject(arr) {\n  var res = {};\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n\n  return res;\n}\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\n\n\nfunction noop(a, b, c) {}\n/**\n * Always return false.\n */\n\n\nvar no = function (a, b, c) {\n  return false;\n};\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\n\n\nvar identity = function (_) {\n  return _;\n};\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\n\n\nfunction looseEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i]);\n        });\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key]);\n        });\n      } else {\n        /* istanbul ignore next */\n        return false;\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false;\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b);\n  } else {\n    return false;\n  }\n}\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\n\n\nfunction looseIndexOf(arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Ensure a function is called only once.\n */\n\n\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  };\n}\n\nvar SSR_ATTR = 'data-server-rendered';\nvar ASSET_TYPES = ['component', 'directive', 'filter'];\nvar LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated', 'errorCaptured', 'serverPrefetch'];\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n};\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\n\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n/**\n * Check if a string starts with $ or _\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n/**\n * Define a property.\n */\n\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n/**\n * Parse simple path.\n */\n\n\nvar bailRE = new RegExp(\"[^\" + unicodeRegExp.source + \".$_\\\\d]\");\n\nfunction parsePath(path) {\n  if (bailRE.test(path)) {\n    return;\n  }\n\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) {\n        return;\n      }\n\n      obj = obj[segments[i]];\n    }\n\n    return obj;\n  };\n}\n/*  */\n// can we use __proto__?\n\n\nvar hasProto = ('__proto__' in {}); // Browser environment sniffing\n\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0 || weexPlatform === 'android';\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA) || weexPlatform === 'ios';\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/); // Firefox has a \"watch\" function on Object.prototype...\n\nvar nativeWatch = {}.watch;\nvar supportsPassive = false;\n\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', {\n      get: function get() {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    }); // https://github.com/facebook/flow/issues/285\n\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n} // this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\n\n\nvar _isServer;\n\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n\n  return _isServer;\n}; // detect devtools\n\n\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n/* istanbul ignore next */\n\nfunction isNative(Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());\n}\n\nvar hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */\n// $flow-disable-line\n\n\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/function () {\n    function Set() {\n      this.set = Object.create(null);\n    }\n\n    Set.prototype.has = function has(key) {\n      return this.set[key] === true;\n    };\n\n    Set.prototype.add = function add(key) {\n      this.set[key] = true;\n    };\n\n    Set.prototype.clear = function clear() {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }();\n}\n/*  */\n\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = noop; // work around flow check\n\nvar formatComponentName = noop;\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n\n  var classify = function (str) {\n    return str.replace(classifyRE, function (c) {\n      return c.toUpperCase();\n    }).replace(/[-_]/g, '');\n  };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && !config.silent) {\n      console.error(\"[Vue warn]: \" + msg + trace);\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && !config.silent) {\n      console.warn(\"[Vue tip]: \" + msg + (vm ? generateComponentTrace(vm) : ''));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>';\n    }\n\n    var options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (name ? \"<\" + classify(name) + \">\" : \"<Anonymous>\") + (file && includeFile !== false ? \" at \" + file : '');\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n\n    while (n) {\n      if (n % 2 === 1) {\n        res += str;\n      }\n\n      if (n > 1) {\n        str += str;\n      }\n\n      n >>= 1;\n    }\n\n    return res;\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue;\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n\n      return '\\n\\nfound in\\n\\n' + tree.map(function (vm, i) {\n        return \"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm) ? formatComponentName(vm[0]) + \"... (\" + vm[1] + \" recursive calls)\" : formatComponentName(vm));\n      }).join('\\n');\n    } else {\n      return \"\\n\\n(found in \" + formatComponentName(vm) + \")\";\n    }\n  };\n}\n/*  */\n\n\nvar uid = 0;\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\n\nvar Dep = function Dep() {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub(sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub(sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend() {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify() {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n\n  if ( true && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) {\n      return a.id - b.id;\n    });\n  }\n\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n}; // The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\n\n\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget(target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget() {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n/*  */\n\n\nvar VNode = function VNode(tag, data, children, text, elm, context, componentOptions, asyncFactory) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = {\n  child: {\n    configurable: true\n  }\n}; // DEPRECATED: alias for componentInstance for backwards compat.\n\n/* istanbul ignore next */\n\nprototypeAccessors.child.get = function () {\n  return this.componentInstance;\n};\n\nObject.defineProperties(VNode.prototype, prototypeAccessors);\n\nvar createEmptyVNode = function (text) {\n  if (text === void 0) text = '';\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node;\n};\n\nfunction createTextVNode(val) {\n  return new VNode(undefined, undefined, undefined, String(val));\n} // optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\n\n\nfunction cloneVNode(vnode) {\n  var cloned = new VNode(vnode.tag, vnode.data, // #7975\n  // clone children array to avoid mutating original in case of cloning\n  // a child.\n  vnode.children && vnode.children.slice(), vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned;\n}\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\nvar methodsToPatch = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];\n/**\n * Intercept mutating methods and emit events\n */\n\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n\n    if (inserted) {\n      ob.observeArray(inserted);\n    } // notify change\n\n\n    ob.dep.notify();\n    return result;\n  });\n});\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\n\nvar shouldObserve = true;\n\nfunction toggleObserving(value) {\n  shouldObserve = value;\n}\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\n\n\nvar Observer = function Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\n\n\nObserver.prototype.walk = function walk(obj) {\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n/**\n * Observe a list of Array items.\n */\n\n\nObserver.prototype.observeArray = function observeArray(items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n}; // helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\n\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n\n/* istanbul ignore next */\n\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\n\n\nfunction observe(value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return;\n  }\n\n  var ob;\n\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldObserve && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n\n  return ob;\n}\n/**\n * Define a reactive property on an Object.\n */\n\n\nfunction defineReactive$$1(obj, key, val, customSetter, shallow) {\n  var dep = new Dep();\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n\n  if (property && property.configurable === false) {\n    return;\n  } // cater for pre-defined getter/setters\n\n\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n\n      if (Dep.target) {\n        dep.depend();\n\n        if (childOb) {\n          childOb.dep.depend();\n\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n\n      if (newVal === value || newVal !== newVal && value !== value) {\n        return;\n      }\n      /* eslint-enable no-self-compare */\n\n\n      if ( true && customSetter) {\n        customSetter();\n      } // #7981: for accessor properties without setter\n\n\n      if (getter && !setter) {\n        return;\n      }\n\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\n\n\nfunction set(target, key, val) {\n  if ( true && (isUndef(target) || isPrimitive(target))) {\n    warn(\"Cannot set reactive property on undefined, null, or primitive value: \" + target);\n  }\n\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val;\n  }\n\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val;\n  }\n\n  var ob = target.__ob__;\n\n  if (target._isVue || ob && ob.vmCount) {\n     true && warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');\n    return val;\n  }\n\n  if (!ob) {\n    target[key] = val;\n    return val;\n  }\n\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val;\n}\n/**\n * Delete a property and trigger change if necessary.\n */\n\n\nfunction del(target, key) {\n  if ( true && (isUndef(target) || isPrimitive(target))) {\n    warn(\"Cannot delete reactive property on undefined, null, or primitive value: \" + target);\n  }\n\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return;\n  }\n\n  var ob = target.__ob__;\n\n  if (target._isVue || ob && ob.vmCount) {\n     true && warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');\n    return;\n  }\n\n  if (!hasOwn(target, key)) {\n    return;\n  }\n\n  delete target[key];\n\n  if (!ob) {\n    return;\n  }\n\n  ob.dep.notify();\n}\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\n\n\nfunction dependArray(value) {\n  for (var e = void 0, i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\n\n\nvar strats = config.optionMergeStrategies;\n/**\n * Options with restrictions\n */\n\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\"option \\\"\" + key + \"\\\" can only be used during instance \" + 'creation with the `new` keyword.');\n    }\n\n    return defaultStrat(parent, child);\n  };\n}\n/**\n * Helper that recursively merges two data objects together.\n */\n\n\nfunction mergeData(to, from) {\n  if (!from) {\n    return to;\n  }\n\n  var key, toVal, fromVal;\n  var keys = hasSymbol ? Reflect.ownKeys(from) : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i]; // in case the object is already observed...\n\n    if (key === '__ob__') {\n      continue;\n    }\n\n    toVal = to[key];\n    fromVal = from[key];\n\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (toVal !== fromVal && isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n\n  return to;\n}\n/**\n * Data\n */\n\n\nfunction mergeDataOrFn(parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n\n    if (!parentVal) {\n      return childVal;\n    } // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n\n\n    return function mergedDataFn() {\n      return mergeData(typeof childVal === 'function' ? childVal.call(this, this) : childVal, typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal);\n    };\n  } else {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm, vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm, vm) : parentVal;\n\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n}\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n       true && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n\n    return mergeDataOrFn(parentVal, childVal);\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm);\n};\n/**\n * Hooks and props are merged as arrays.\n */\n\n\nfunction mergeHook(parentVal, childVal) {\n  var res = childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;\n  return res ? dedupeHooks(res) : res;\n}\n\nfunction dedupeHooks(hooks) {\n  var res = [];\n\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n\n  return res;\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal, vm, key) {\n  var res = Object.create(parentVal || null);\n\n  if (childVal) {\n     true && assertObjectType(key, childVal, vm);\n    return extend(res, childVal);\n  } else {\n    return res;\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = function (parentVal, childVal, vm, key) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) {\n    parentVal = undefined;\n  }\n\n  if (childVal === nativeWatch) {\n    childVal = undefined;\n  }\n  /* istanbul ignore if */\n\n\n  if (!childVal) {\n    return Object.create(parentVal || null);\n  }\n\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n\n  if (!parentVal) {\n    return childVal;\n  }\n\n  var ret = {};\n  extend(ret, parentVal);\n\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n\n    ret[key$1] = parent ? parent.concat(child) : Array.isArray(child) ? child : [child];\n  }\n\n  return ret;\n};\n/**\n * Other object hashes.\n */\n\n\nstrats.props = strats.methods = strats.inject = strats.computed = function (parentVal, childVal, vm, key) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n\n  if (!parentVal) {\n    return childVal;\n  }\n\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n\n  if (childVal) {\n    extend(ret, childVal);\n  }\n\n  return ret;\n};\n\nstrats.provide = mergeDataOrFn;\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n/**\n * Validate component names\n */\n\n\nfunction checkComponents(options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName(name) {\n  if (!new RegExp(\"^[a-zA-Z][\\\\-\\\\.0-9_\" + unicodeRegExp.source + \"]*$\").test(name)) {\n    warn('Invalid component name: \"' + name + '\". Component names ' + 'should conform to valid custom element name in html5 specification.');\n  }\n\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + name);\n  }\n}\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\n\n\nfunction normalizeProps(options, vm) {\n  var props = options.props;\n\n  if (!props) {\n    return;\n  }\n\n  var res = {};\n  var i, val, name;\n\n  if (Array.isArray(props)) {\n    i = props.length;\n\n    while (i--) {\n      val = props[i];\n\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = {\n          type: null\n        };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val) ? val : {\n        type: val\n      };\n    }\n  } else if (true) {\n    warn(\"Invalid value for option \\\"props\\\": expected an Array or an Object, \" + \"but got \" + toRawType(props) + \".\", vm);\n  }\n\n  options.props = res;\n}\n/**\n * Normalize all injections into Object-based format\n */\n\n\nfunction normalizeInject(options, vm) {\n  var inject = options.inject;\n\n  if (!inject) {\n    return;\n  }\n\n  var normalized = options.inject = {};\n\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = {\n        from: inject[i]\n      };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val) ? extend({\n        from: key\n      }, val) : {\n        from: val\n      };\n    }\n  } else if (true) {\n    warn(\"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" + \"but got \" + toRawType(inject) + \".\", vm);\n  }\n}\n/**\n * Normalize raw function directives into object format.\n */\n\n\nfunction normalizeDirectives(options) {\n  var dirs = options.directives;\n\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n\n      if (typeof def$$1 === 'function') {\n        dirs[key] = {\n          bind: def$$1,\n          update: def$$1\n        };\n      }\n    }\n  }\n}\n\nfunction assertObjectType(name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" + \"but got \" + toRawType(value) + \".\", vm);\n  }\n}\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\n\n\nfunction mergeOptions(parent, child, vm) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child); // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n\n  for (key in parent) {\n    mergeField(key);\n  }\n\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n\n  return options;\n}\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\n\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n\n  var assets = options[type]; // check local registration variations first\n\n  if (hasOwn(assets, id)) {\n    return assets[id];\n  }\n\n  var camelizedId = camelize(id);\n\n  if (hasOwn(assets, camelizedId)) {\n    return assets[camelizedId];\n  }\n\n  var PascalCaseId = capitalize(camelizedId);\n\n  if (hasOwn(assets, PascalCaseId)) {\n    return assets[PascalCaseId];\n  } // fallback to prototype chain\n\n\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n\n  if ( true && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n\n  return res;\n}\n/*  */\n\n\nfunction validateProp(key, propOptions, propsData, vm) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key]; // boolean casting\n\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  } // check default value\n\n\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key); // since the default value is a fresh copy,\n    // make sure to observe it.\n\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n\n  if (true) {\n    assertProp(prop, key, value, vm, absent);\n  }\n\n  return value;\n}\n/**\n * Get the default value of a prop.\n */\n\n\nfunction getPropDefaultValue(vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined;\n  }\n\n  var def = prop.default; // warn against non-factory defaults for Object & Array\n\n  if ( true && isObject(def)) {\n    warn('Invalid default value for prop \"' + key + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  } // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n\n\n  if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {\n    return vm._props[key];\n  } // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n\n\n  return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;\n}\n/**\n * Assert whether a prop is valid.\n */\n\n\nfunction assertProp(prop, name, value, vm, absent) {\n  if (prop.required && absent) {\n    warn('Missing required prop: \"' + name + '\"', vm);\n    return;\n  }\n\n  if (value == null && !prop.required) {\n    return;\n  }\n\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i], vm);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  var haveExpectedTypes = expectedTypes.some(function (t) {\n    return t;\n  });\n\n  if (!valid && haveExpectedTypes) {\n    warn(getInvalidTypeMessage(name, value, expectedTypes), vm);\n    return;\n  }\n\n  var validator = prop.validator;\n\n  if (validator) {\n    if (!validator(value)) {\n      warn('Invalid prop: custom validator check failed for prop \"' + name + '\".', vm);\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/;\n\nfunction assertType(value, type, vm) {\n  var valid;\n  var expectedType = getType(type);\n\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase(); // for primitive wrapper objects\n\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    try {\n      valid = value instanceof type;\n    } catch (e) {\n      warn('Invalid prop type: \"' + String(type) + '\" is not a constructor', vm);\n      valid = false;\n    }\n  }\n\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\nvar functionTypeCheckRE = /^\\s*function (\\w+)/;\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\n\nfunction getType(fn) {\n  var match = fn && fn.toString().match(functionTypeCheckRE);\n  return match ? match[1] : '';\n}\n\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\n\nfunction getTypeIndex(type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" + \" Expected \" + expectedTypes.map(capitalize).join(', ');\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value); // check if we need to specify expected value\n\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && isExplicable(typeof value) && !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + styleValue(value, expectedType);\n  }\n\n  message += \", got \" + receivedType + \" \"; // check if we need to specify received value\n\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + styleValue(value, receivedType) + \".\";\n  }\n\n  return message;\n}\n\nfunction styleValue(value, type) {\n  if (type === 'String') {\n    return \"\\\"\" + value + \"\\\"\";\n  } else if (type === 'Number') {\n    return \"\" + Number(value);\n  } else {\n    return \"\" + value;\n  }\n}\n\nvar EXPLICABLE_TYPES = ['string', 'number', 'boolean'];\n\nfunction isExplicable(value) {\n  return EXPLICABLE_TYPES.some(function (elem) {\n    return value.toLowerCase() === elem;\n  });\n}\n\nfunction isBoolean() {\n  var args = [],\n      len = arguments.length;\n\n  while (len--) args[len] = arguments[len];\n\n  return args.some(function (elem) {\n    return elem.toLowerCase() === 'boolean';\n  });\n}\n/*  */\n\n\nfunction handleError(err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n\n  try {\n    if (vm) {\n      var cur = vm;\n\n      while (cur = cur.$parent) {\n        var hooks = cur.$options.errorCaptured;\n\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n\n              if (capture) {\n                return;\n              }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling(handler, context, args, vm, info) {\n  var res;\n\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) {\n        return handleError(e, vm, info + \" (Promise/async)\");\n      }); // issue #9511\n      // avoid catch triggering multiple times when nested calls\n\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n\n  return res;\n}\n\nfunction globalHandleError(err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info);\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n\n  logError(err, vm, info);\n}\n\nfunction logError(err, vm, info) {\n  if (true) {\n    warn(\"Error in \" + info + \": \\\"\" + err.toString() + \"\\\"\", vm);\n  }\n  /* istanbul ignore else */\n\n\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err;\n  }\n}\n/*  */\n\n\nvar isUsingMicroTask = false;\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks() {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n} // Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\n\n\nvar timerFunc; // The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n\n/* istanbul ignore next, $flow-disable-line */\n\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n\n  timerFunc = function () {\n    p.then(flushCallbacks); // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n\n    if (isIOS) {\n      setTimeout(noop);\n    }\n  };\n\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (isNative(MutationObserver) || // PhantomJS and iOS 7.x\nMutationObserver.toString() === '[object MutationObserverConstructor]')) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick(cb, ctx) {\n  var _resolve;\n\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  } // $flow-disable-line\n\n\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    });\n  }\n}\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,' + 'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" + 'referenced during render. Make sure that this property is reactive, ' + 'either in the data option, or for class-based components, by ' + 'initializing the property. ' + 'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.', target);\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" + 'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' + 'prevent conflicts with Vue internals. ' + 'See: https://vuejs.org/v2/api/#data', target);\n  };\n\n  var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set(target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn(\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key);\n          return false;\n        } else {\n          target[key] = value;\n          return true;\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has(target, key) {\n      var has = (key in target);\n      var isAllowed = allowedGlobals(key) || typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data);\n\n      if (!has && !isAllowed) {\n        if (key in target.$data) {\n          warnReservedPrefix(target, key);\n        } else {\n          warnNonPresent(target, key);\n        }\n      }\n\n      return has || !isAllowed;\n    }\n  };\n  var getHandler = {\n    get: function get(target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) {\n          warnReservedPrefix(target, key);\n        } else {\n          warnNonPresent(target, key);\n        }\n      }\n\n      return target[key];\n    }\n  };\n\n  initProxy = function initProxy(vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped ? getHandler : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n/*  */\n\n\nvar seenObjects = new _Set();\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\n\nfunction traverse(val) {\n  _traverse(val, seenObjects);\n\n  seenObjects.clear();\n}\n\nfunction _traverse(val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n\n  if (!isA && !isObject(val) || Object.isFrozen(val) || val instanceof VNode) {\n    return;\n  }\n\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n\n    if (seen.has(depId)) {\n      return;\n    }\n\n    seen.add(depId);\n  }\n\n  if (isA) {\n    i = val.length;\n\n    while (i--) {\n      _traverse(val[i], seen);\n    }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n\n    while (i--) {\n      _traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n\n  if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {\n    mark = function (tag) {\n      return perf.mark(tag);\n    };\n\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag); // perf.clearMeasures(name)\n    };\n  }\n}\n/*  */\n\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  };\n});\n\nfunction createFnInvoker(fns, vm) {\n  function invoker() {\n    var arguments$1 = arguments;\n    var fns = invoker.fns;\n\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\");\n    }\n  }\n\n  invoker.fns = fns;\n  return invoker;\n}\n\nfunction updateListeners(on, oldOn, add, remove$$1, createOnceHandler, vm) {\n  var name, def$$1, cur, old, event;\n\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n\n    if (isUndef(cur)) {\n       true && warn(\"Invalid handler for event \\\"\" + event.name + \"\\\": got \" + String(cur), vm);\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n/*  */\n\n\nfunction mergeVNodeHook(def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook() {\n    hook.apply(this, arguments); // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n/*  */\n\n\nfunction extractPropsFromVNodeData(data, Ctor, tag) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n\n  if (isUndef(propOptions)) {\n    return;\n  }\n\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n\n        if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {\n          tip(\"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" + formatComponentName(tag || Ctor) + \", but the declared prop name is\" + \" \\\"\" + key + \"\\\". \" + \"Note that HTML attributes are case-insensitive and camelCased \" + \"props need to use their kebab-case equivalents when using in-DOM \" + \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\");\n        }\n      }\n\n      checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);\n    }\n  }\n\n  return res;\n}\n\nfunction checkProp(res, hash, key, altKey, preserve) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n\n      if (!preserve) {\n        delete hash[key];\n      }\n\n      return true;\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n\n      if (!preserve) {\n        delete hash[altKey];\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n/*  */\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\n\n\nfunction simpleNormalizeChildren(children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children);\n    }\n  }\n\n  return children;\n} // 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\n\n\nfunction normalizeChildren(children) {\n  return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;\n}\n\nfunction isTextNode(node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment);\n}\n\nfunction normalizeArrayChildren(children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n\n    if (isUndef(c) || typeof c === 'boolean') {\n      continue;\n    }\n\n    lastIndex = res.length - 1;\n    last = res[lastIndex]; //  nested\n\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, (nestedIndex || '') + \"_\" + i); // merge adjacent text nodes\n\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + c[0].text);\n          c.shift();\n        }\n\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n\n        res.push(c);\n      }\n    }\n  }\n\n  return res;\n}\n/*  */\n\n\nfunction initProvide(vm) {\n  var provide = vm.$options.provide;\n\n  if (provide) {\n    vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;\n  }\n}\n\nfunction initInjections(vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\"Avoid mutating an injected value directly since the changes will be \" + \"overwritten whenever the provided component re-renders. \" + \"injection being mutated: \\\"\" + key + \"\\\"\", vm);\n        });\n      } else {}\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject(inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol ? Reflect.ownKeys(inject) : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // #6574 in case the inject object is observed...\n\n      if (key === '__ob__') {\n        continue;\n      }\n\n      var provideKey = inject[key].from;\n      var source = vm;\n\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break;\n        }\n\n        source = source.$parent;\n      }\n\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function' ? provideDefault.call(vm) : provideDefault;\n        } else if (true) {\n          warn(\"Injection \\\"\" + key + \"\\\" not found\", vm);\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\n\n\nfunction resolveSlots(children, context) {\n  if (!children || !children.length) {\n    return {};\n  }\n\n  var slots = {};\n\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data; // remove slot attribute if the node is resolved as a Vue slot node\n\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    } // named slots should only be respected if the vnode was rendered in the\n    // same context.\n\n\n    if ((child.context === context || child.fnContext === context) && data && data.slot != null) {\n      var name = data.slot;\n      var slot = slots[name] || (slots[name] = []);\n\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  } // ignore slots that contains only whitespace\n\n\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n\n  return slots;\n}\n\nfunction isWhitespace(node) {\n  return node.isComment && !node.asyncFactory || node.text === ' ';\n}\n/*  */\n\n\nfunction isAsyncPlaceholder(node) {\n  return node.isComment && node.asyncFactory;\n}\n/*  */\n\n\nfunction normalizeScopedSlots(slots, normalSlots, prevSlots) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized;\n  } else if (isStable && prevSlots && prevSlots !== emptyObject && key === prevSlots.$key && !hasNormalSlots && !prevSlots.$hasNormal) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots;\n  } else {\n    res = {};\n\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  } // expose normal slots on scopedSlots\n\n\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  } // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n\n\n  if (slots && Object.isExtensible(slots)) {\n    slots._normalized = res;\n  }\n\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res;\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res) ? [res] // single vnode\n    : normalizeChildren(res);\n    var vnode = res && res[0];\n    return res && (!vnode || res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode) // #9658, #10391\n    ) ? undefined : res;\n  }; // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n\n\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n\n  return normalized;\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () {\n    return slots[key];\n  };\n}\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\n\n\nfunction renderList(val, render) {\n  var ret, i, l, keys, key;\n\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n\n  if (!isDef(ret)) {\n    ret = [];\n  }\n\n  ret._isVList = true;\n  return ret;\n}\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\n\n\nfunction renderSlot(name, fallbackRender, props, bindObject) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n\n  if (scopedSlotFn) {\n    // scoped slot\n    props = props || {};\n\n    if (bindObject) {\n      if ( true && !isObject(bindObject)) {\n        warn('slot v-bind without argument expects an Object', this);\n      }\n\n      props = extend(extend({}, bindObject), props);\n    }\n\n    nodes = scopedSlotFn(props) || (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n  } else {\n    nodes = this.$slots[name] || (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n  }\n\n  var target = props && props.slot;\n\n  if (target) {\n    return this.$createElement('template', {\n      slot: target\n    }, nodes);\n  } else {\n    return nodes;\n  }\n}\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\n\n\nfunction resolveFilter(id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity;\n}\n/*  */\n\n\nfunction isKeyNotMatch(expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1;\n  } else {\n    return expect !== actual;\n  }\n}\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\n\n\nfunction checkKeyCodes(eventKeyCode, key, builtInKeyCode, eventKeyName, builtInKeyName) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName);\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode);\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key;\n  }\n\n  return eventKeyCode === undefined;\n}\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\n\n\nfunction bindObjectProps(data, tag, value, asProp, isSync) {\n  if (value) {\n    if (!isObject(value)) {\n       true && warn('v-bind without argument expects an Object or Array value', this);\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n\n      var hash;\n\n      var loop = function (key) {\n        if (key === 'class' || key === 'style' || isReservedAttribute(key)) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});\n        }\n\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n\n            on[\"update:\" + key] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop(key);\n    }\n  }\n\n  return data;\n}\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\n\n\nfunction renderStatic(index, isInFor) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index]; // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n\n  if (tree && !isInFor) {\n    return tree;\n  } // otherwise, render a fresh tree.\n\n\n  tree = cached[index] = this.$options.staticRenderFns[index].call(this._renderProxy, null, this // for render fns generated for functional component templates\n  );\n  markStatic(tree, \"__static__\" + index, false);\n  return tree;\n}\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\n\n\nfunction markOnce(tree, index, key) {\n  markStatic(tree, \"__once__\" + index + (key ? \"_\" + key : \"\"), true);\n  return tree;\n}\n\nfunction markStatic(tree, key, isOnce) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], key + \"_\" + i, isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode(node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n/*  */\n\n\nfunction bindObjectListeners(data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n       true && warn('v-on without argument expects an Object value', this);\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n\n  return data;\n}\n/*  */\n\n\nfunction resolveScopedSlots(fns, // see flow/vnode\nres, // the following are added in 2.6\nhasDynamicKeys, contentHashKey) {\n  res = res || {\n    $stable: !hasDynamicKeys\n  };\n\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n\n      res[slot.key] = slot.fn;\n    }\n  }\n\n  if (contentHashKey) {\n    res.$key = contentHashKey;\n  }\n\n  return res;\n}\n/*  */\n\n\nfunction bindDynamicKeys(baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if ( true && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\"Invalid value for dynamic directive argument (expected string or null): \" + key, this);\n    }\n  }\n\n  return baseObj;\n} // helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\n\n\nfunction prependModifier(value, symbol) {\n  return typeof value === 'string' ? symbol + value : value;\n}\n/*  */\n\n\nfunction installRenderHelpers(target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n/*  */\n\n\nfunction FunctionalRenderContext(data, props, children, parent, Ctor) {\n  var this$1 = this;\n  var options = Ctor.options; // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n\n  var contextVm;\n\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent); // $flow-disable-line\n\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent; // $flow-disable-line\n\n    parent = parent._original;\n  }\n\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(data.scopedSlots, this$1.$slots = resolveSlots(children, parent));\n    }\n\n    return this$1.$slots;\n  };\n\n  Object.defineProperty(this, 'scopedSlots', {\n    enumerable: true,\n    get: function get() {\n      return normalizeScopedSlots(data.scopedSlots, this.slots());\n    }\n  }); // support for compiled functional template\n\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options; // pre-resolve slots for renderSlot()\n\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n\n      return vnode;\n    };\n  } else {\n    this._c = function (a, b, c, d) {\n      return createElement(contextVm, a, b, c, d, needNormalization);\n    };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent(Ctor, propsData, data, contextVm, children) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) {\n      mergeProps(props, data.attrs);\n    }\n\n    if (isDef(data.props)) {\n      mergeProps(props, data.props);\n    }\n  }\n\n  var renderContext = new FunctionalRenderContext(data, props, children, contextVm, Ctor);\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext);\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n\n    return res;\n  }\n}\n\nfunction cloneAndMarkFunctionalResult(vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n\n  if (true) {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n\n  return clone;\n}\n\nfunction mergeProps(to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n// inline hooks to be invoked on component VNodes during patch\n\n\nvar componentVNodeHooks = {\n  init: function init(vnode, hydrating) {\n    if (vnode.componentInstance && !vnode.componentInstance._isDestroyed && vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance);\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n  prepatch: function prepatch(oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(child, options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n    );\n  },\n  insert: function insert(vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true\n        /* direct */\n        );\n      }\n    }\n  },\n  destroy: function destroy(vnode) {\n    var componentInstance = vnode.componentInstance;\n\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true\n        /* direct */\n        );\n      }\n    }\n  }\n};\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent(Ctor, data, context, children, tag) {\n  if (isUndef(Ctor)) {\n    return;\n  }\n\n  var baseCtor = context.$options._base; // plain options object: turn it into a constructor\n\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  } // if at this stage it's not a constructor or an async component factory,\n  // reject.\n\n\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn(\"Invalid Component definition: \" + String(Ctor), context);\n    }\n\n    return;\n  } // async component\n\n\n  var asyncFactory;\n\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(asyncFactory, data, context, children, tag);\n    }\n  }\n\n  data = data || {}; // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n\n  resolveConstructorOptions(Ctor); // transform component v-model data into props & events\n\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  } // extract props\n\n\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag); // functional component\n\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children);\n  } // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n\n\n  var listeners = data.on; // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n    // work around flow\n    var slot = data.slot;\n    data = {};\n\n    if (slot) {\n      data.slot = slot;\n    }\n  } // install component management hooks onto the placeholder node\n\n\n  installComponentHooks(data); // return a placeholder vnode\n\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\"vue-component-\" + Ctor.cid + (name ? \"-\" + name : ''), data, undefined, undefined, undefined, context, {\n    Ctor: Ctor,\n    propsData: propsData,\n    listeners: listeners,\n    tag: tag,\n    children: children\n  }, asyncFactory);\n  return vnode;\n}\n\nfunction createComponentInstanceForVnode( // we know it's MountedComponentVNode but flow doesn't\nvnode, // activeInstance in lifecycle state\nparent) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  }; // check inline-template render functions\n\n  var inlineTemplate = vnode.data.inlineTemplate;\n\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n\n  return new vnode.componentOptions.Ctor(options);\n}\n\nfunction installComponentHooks(data) {\n  var hooks = data.hook || (data.hook = {});\n\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1(f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n\n  merged._merged = true;\n  return merged;\n} // transform component v-model info (value and callback) into\n// prop and event handler respectively.\n\n\nfunction transformModel(options, data) {\n  var prop = options.model && options.model.prop || 'value';\n  var event = options.model && options.model.event || 'input';\n  (data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n\n  if (isDef(existing)) {\n    if (Array.isArray(existing) ? existing.indexOf(callback) === -1 : existing !== callback) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n/*  */\n\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2; // wrapper function for providing a more flexible interface\n// without getting yelled at by flow\n\nfunction createElement(context, tag, data, children, normalizationType, alwaysNormalize) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n\n  return _createElement(context, tag, data, children, normalizationType);\n}\n\nfunction _createElement(context, tag, data, children, normalizationType) {\n  if (isDef(data) && isDef(data.__ob__)) {\n     true && warn(\"Avoid using observed data object as vnode data: \" + JSON.stringify(data) + \"\\n\" + 'Always create fresh vnode data objects in each render!', context);\n    return createEmptyVNode();\n  } // object syntax in v-bind\n\n\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode();\n  } // warn against non-primitive key\n\n\n  if ( true && isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {\n    {\n      warn('Avoid using non-primitive value as key, ' + 'use string/number value instead.', context);\n    }\n  } // support single function children as default scoped slot\n\n\n  if (Array.isArray(children) && typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = {\n      default: children[0]\n    };\n    children.length = 0;\n  }\n\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n\n  var vnode, ns;\n\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = context.$vnode && context.$vnode.ns || config.getTagNamespace(tag);\n\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if ( true && isDef(data) && isDef(data.nativeOn) && data.tag !== 'component') {\n        warn(\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\", context);\n      }\n\n      vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(tag, data, children, undefined, undefined, context);\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n\n  if (Array.isArray(vnode)) {\n    return vnode;\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) {\n      applyNS(vnode, ns);\n    }\n\n    if (isDef(data)) {\n      registerDeepBindings(data);\n    }\n\n    return vnode;\n  } else {\n    return createEmptyVNode();\n  }\n}\n\nfunction applyNS(vnode, ns, force) {\n  vnode.ns = ns;\n\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n\n      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force) && child.tag !== 'svg')) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n} // ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\n\n\nfunction registerDeepBindings(data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n/*  */\n\n\nfunction initRender(vm) {\n  vm._vnode = null; // the root of the child tree\n\n  vm._staticTrees = null; // v-once cached trees\n\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject; // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n\n  vm._c = function (a, b, c, d) {\n    return createElement(vm, a, b, c, d, false);\n  }; // normalization is always applied for the public version, used in\n  // user-written render functions.\n\n\n  vm.$createElement = function (a, b, c, d) {\n    return createElement(vm, a, b, c, d, true);\n  }; // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n\n\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n\n  if (true) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {}\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin(Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this);\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(_parentVnode.data.scopedSlots, vm.$slots, vm.$scopedSlots);\n    } // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n\n\n    vm.$vnode = _parentVnode; // render self\n\n    var vnode;\n\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\"); // return error render result,\n      // or previous vnode to prevent render error causing blank component\n\n      /* istanbul ignore else */\n\n      if ( true && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    } // if the returned array contains only a single node, allow it\n\n\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    } // return empty vnode in case the render function errored out\n\n\n    if (!(vnode instanceof VNode)) {\n      if ( true && Array.isArray(vnode)) {\n        warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);\n      }\n\n      vnode = createEmptyVNode();\n    } // set parent\n\n\n    vnode.parent = _parentVnode;\n    return vnode;\n  };\n}\n/*  */\n\n\nfunction ensureCtor(comp, base) {\n  if (comp.__esModule || hasSymbol && comp[Symbol.toStringTag] === 'Module') {\n    comp = comp.default;\n  }\n\n  return isObject(comp) ? base.extend(comp) : comp;\n}\n\nfunction createAsyncPlaceholder(factory, data, context, children, tag) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = {\n    data: data,\n    context: context,\n    children: children,\n    tag: tag\n  };\n  return node;\n}\n\nfunction resolveAsyncComponent(factory, baseCtor) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp;\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved;\n  }\n\n  var owner = currentRenderingInstance;\n\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp;\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null;\n    owner.$on('hook:destroyed', function () {\n      return remove(owners, owner);\n    });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        owners[i].$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor); // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n    var reject = once(function (reason) {\n       true && warn(\"Failed to resolve async component: \" + String(factory) + (reason ? \"\\nReason: \" + reason : ''));\n\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n\n            if (isUndef(factory.resolved)) {\n              reject( true ? \"timeout (\" + res.timeout + \"ms)\" : undefined);\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false; // return in case resolved synchronously\n\n    return factory.loading ? factory.loadingComp : factory.resolved;\n  }\n}\n/*  */\n\n\nfunction getFirstComponentChild(children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c;\n      }\n    }\n  }\n}\n/*  */\n\n/*  */\n\n\nfunction initEvents(vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false; // init parent attached events\n\n  var listeners = vm.$options._parentListeners;\n\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add(event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1(event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler(event, fn) {\n  var _target = target;\n  return function onceHandler() {\n    var res = fn.apply(null, arguments);\n\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  };\n}\n\nfunction updateComponentListeners(vm, listeners, oldListeners) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin(Vue) {\n  var hookRE = /^hook:/;\n\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn); // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n\n    return vm;\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n\n    function on() {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm;\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this; // all\n\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm;\n    } // array of events\n\n\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n\n      return vm;\n    } // specific event\n\n\n    var cbs = vm._events[event];\n\n    if (!cbs) {\n      return vm;\n    }\n\n    if (!fn) {\n      vm._events[event] = null;\n      return vm;\n    } // specific handler\n\n\n    var cb;\n    var i = cbs.length;\n\n    while (i--) {\n      cb = cbs[i];\n\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n\n    return vm;\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" + formatComponentName(vm) + \" but the handler is registered for \\\"\" + event + \"\\\". \" + \"Note that HTML attributes are case-insensitive and you cannot use \" + \"v-on to listen to camelCase events when using in-DOM templates. \" + \"You should probably use \\\"\" + hyphenate(event) + \"\\\" instead of \\\"\" + event + \"\\\".\");\n      }\n    }\n\n    var cbs = vm._events[event];\n\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n\n    return vm;\n  };\n}\n/*  */\n\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  };\n}\n\nfunction initLifecycle(vm) {\n  var options = vm.$options; // locate first non-abstract parent\n\n  var parent = options.parent;\n\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n  vm.$children = [];\n  vm.$refs = {};\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin(Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode; // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false\n      /* removeOnly */\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n\n    restoreActiveInstance(); // update __vue__ reference\n\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    } // if parent is an HOC, update its $el as well\n\n\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    } // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n\n    if (vm._isBeingDestroyed) {\n      return;\n    }\n\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true; // remove self from parent\n\n    var parent = vm.$parent;\n\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    } // teardown watchers\n\n\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n\n    var i = vm._watchers.length;\n\n    while (i--) {\n      vm._watchers[i].teardown();\n    } // remove reference from data ob\n    // frozen object may not have observer.\n\n\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    } // call the last hook...\n\n\n    vm._isDestroyed = true; // invoke destroy hooks on current rendered tree\n\n    vm.__patch__(vm._vnode, null); // fire destroyed hook\n\n\n    callHook(vm, 'destroyed'); // turn off all instance listeners.\n\n    vm.$off(); // remove __vue__ reference\n\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    } // release circular reference (#6759)\n\n\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent(vm, el, hydrating) {\n  vm.$el = el;\n\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n\n    if (true) {\n      /* istanbul ignore if */\n      if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {\n        warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);\n      } else {\n        warn('Failed to mount component: template or render function not defined.', vm);\n      }\n    }\n  }\n\n  callHook(vm, 'beforeMount');\n  var updateComponent;\n  /* istanbul ignore if */\n\n  if ( true && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n      mark(startTag);\n\n      var vnode = vm._render();\n\n      mark(endTag);\n      measure(\"vue \" + name + \" render\", startTag, endTag);\n      mark(startTag);\n\n      vm._update(vnode, hydrating);\n\n      mark(endTag);\n      measure(\"vue \" + name + \" patch\", startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  } // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n\n\n  new Watcher(vm, updateComponent, noop, {\n    before: function before() {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true\n  /* isRenderWatcher */\n  );\n  hydrating = false; // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n\n  return vm;\n}\n\nfunction updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  } // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n\n\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(newScopedSlots && !newScopedSlots.$stable || oldScopedSlots !== emptyObject && !oldScopedSlots.$stable || newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key || !newScopedSlots && vm.$scopedSlots.$key); // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n\n  var needsForceUpdate = !!(renderChildren || // has new static slots\n  vm.$options._renderChildren || // has old static slots\n  hasDynamicScopedSlot);\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) {\n    // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n\n  vm.$options._renderChildren = renderChildren; // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject; // update props\n\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n\n    toggleObserving(true); // keep a copy of raw propsData\n\n    vm.$options.propsData = propsData;\n  } // update listeners\n\n\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners); // resolve slots + force update if has children\n\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree(vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction activateChildComponent(vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n\n    if (isInInactiveTree(vm)) {\n      return;\n    }\n  } else if (vm._directInactive) {\n    return;\n  }\n\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent(vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n\n    if (isInInactiveTree(vm)) {\n      return;\n    }\n  }\n\n  if (!vm._inactive) {\n    vm._inactive = true;\n\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook(vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n\n  popTarget();\n}\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n/**\n * Reset the scheduler's state.\n */\n\nfunction resetSchedulerState() {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n\n  if (true) {\n    circular = {};\n  }\n\n  waiting = flushing = false;\n} // Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\n\n\nvar currentFlushTimestamp = 0; // Async edge case fix requires storing an event listener's attach timestamp.\n\nvar getNow = Date.now; // Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\n\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n\n  if (performance && typeof performance.now === 'function' && getNow() > document.createEvent('Event').timeStamp) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () {\n      return performance.now();\n    };\n  }\n}\n/**\n * Flush both queues and run the watchers.\n */\n\n\nfunction flushSchedulerQueue() {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id; // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n\n  queue.sort(function (a, b) {\n    return a.id - b.id;\n  }); // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n\n    if (watcher.before) {\n      watcher.before();\n    }\n\n    id = watcher.id;\n    has[id] = null;\n    watcher.run(); // in dev build, check and stop circular updates.\n\n    if ( true && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn('You may have an infinite update loop ' + (watcher.user ? \"in watcher with expression \\\"\" + watcher.expression + \"\\\"\" : \"in a component render function.\"), watcher.vm);\n        break;\n      }\n    }\n  } // keep copies of post queues before resetting state\n\n\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n  resetSchedulerState(); // call component updated and activated hooks\n\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue); // devtool hook\n\n  /* istanbul ignore if */\n\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks(queue) {\n  var i = queue.length;\n\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\n\n\nfunction queueActivatedComponent(vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks(queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true\n    /* true */\n    );\n  }\n}\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\n\n\nfunction queueWatcher(watcher) {\n  var id = watcher.id;\n\n  if (has[id] == null) {\n    has[id] = true;\n\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n\n      queue.splice(i + 1, 0, watcher);\n    } // queue the flush\n\n\n    if (!waiting) {\n      waiting = true;\n\n      if ( true && !config.async) {\n        flushSchedulerQueue();\n        return;\n      }\n\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n/*  */\n\n\nvar uid$2 = 0;\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\n\nvar Watcher = function Watcher(vm, expOrFn, cb, options, isRenderWatcher) {\n  this.vm = vm;\n\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n\n  vm._watchers.push(this); // options\n\n\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true ? expOrFn.toString() : undefined; // parse expression for getter\n\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n\n    if (!this.getter) {\n      this.getter = noop;\n       true && warn(\"Failed watching path: \\\"\" + expOrFn + \"\\\" \" + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);\n    }\n  }\n\n  this.value = this.lazy ? undefined : this.get();\n};\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\n\nWatcher.prototype.get = function get() {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, \"getter for watcher \\\"\" + this.expression + \"\\\"\");\n    } else {\n      throw e;\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n\n    popTarget();\n    this.cleanupDeps();\n  }\n\n  return value;\n};\n/**\n * Add a dependency to this directive.\n */\n\n\nWatcher.prototype.addDep = function addDep(dep) {\n  var id = dep.id;\n\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n/**\n * Clean up for dependency collection.\n */\n\n\nWatcher.prototype.cleanupDeps = function cleanupDeps() {\n  var i = this.deps.length;\n\n  while (i--) {\n    var dep = this.deps[i];\n\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\n\n\nWatcher.prototype.update = function update() {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\n\n\nWatcher.prototype.run = function run() {\n  if (this.active) {\n    var value = this.get();\n\n    if (value !== this.value || // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated.\n    isObject(value) || this.deep) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n\n      if (this.user) {\n        var info = \"callback for watcher \\\"\" + this.expression + \"\\\"\";\n        invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info);\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\n\nWatcher.prototype.evaluate = function evaluate() {\n  this.value = this.get();\n  this.dirty = false;\n};\n/**\n * Depend on all deps collected by this watcher.\n */\n\n\nWatcher.prototype.depend = function depend() {\n  var i = this.deps.length;\n\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n/**\n * Remove self from all dependencies' subscriber list.\n */\n\n\nWatcher.prototype.teardown = function teardown() {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n\n    var i = this.deps.length;\n\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n\n    this.active = false;\n  }\n};\n/*  */\n\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy(target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter() {\n    return this[sourceKey][key];\n  };\n\n  sharedPropertyDefinition.set = function proxySetter(val) {\n    this[sourceKey][key] = val;\n  };\n\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState(vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n\n  if (opts.props) {\n    initProps(vm, opts.props);\n  }\n\n  if (opts.methods) {\n    initMethods(vm, opts.methods);\n  }\n\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true\n    /* asRootData */\n    );\n  }\n\n  if (opts.computed) {\n    initComputed(vm, opts.computed);\n  }\n\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps(vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {}; // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent; // root instance props should be converted\n\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n\n  var loop = function (key) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n\n      if (isReservedAttribute(hyphenatedKey) || config.isReservedAttr(hyphenatedKey)) {\n        warn(\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\", vm);\n      }\n\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\"Avoid mutating a prop directly since the value will be \" + \"overwritten whenever the parent component re-renders. \" + \"Instead, use a data or computed property based on the prop's \" + \"value. Prop being mutated: \\\"\" + key + \"\\\"\", vm);\n        }\n      });\n    } else {} // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n\n\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop(key);\n\n  toggleObserving(true);\n}\n\nfunction initData(vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};\n\n  if (!isPlainObject(data)) {\n    data = {};\n     true && warn('data functions should return an object:\\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);\n  } // proxy data on instance\n\n\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n\n  while (i--) {\n    var key = keys[i];\n\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\", vm);\n      }\n    }\n\n    if (props && hasOwn(props, key)) {\n       true && warn(\"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" + \"Use prop default value instead.\", vm);\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  } // observe data\n\n\n  observe(data, true\n  /* asRootData */\n  );\n}\n\nfunction getData(data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n\n  try {\n    return data.call(vm, vm);\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {};\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = {\n  lazy: true\n};\n\nfunction initComputed(vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null); // computed properties are just getters during SSR\n\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n\n    if ( true && getter == null) {\n      warn(\"Getter is missing for computed property \\\"\" + key + \"\\\".\", vm);\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);\n    } // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n\n\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn(\"The computed property \\\"\" + key + \"\\\" is already defined in data.\", vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn(\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\", vm);\n      } else if (vm.$options.methods && key in vm.$options.methods) {\n        warn(\"The computed property \\\"\" + key + \"\\\" is already defined as a method.\", vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed(target, key, userDef) {\n  var shouldCache = !isServerRendering();\n\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache ? createComputedGetter(key) : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get ? shouldCache && userDef.cache !== false ? createComputedGetter(key) : createGetterInvoker(userDef.get) : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n\n  if ( true && sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\", this);\n    };\n  }\n\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter(key) {\n  return function computedGetter() {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n\n      if (Dep.target) {\n        watcher.depend();\n      }\n\n      return watcher.value;\n    }\n  };\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter() {\n    return fn.call(this, this);\n  };\n}\n\nfunction initMethods(vm, methods) {\n  var props = vm.$options.props;\n\n  for (var key in methods) {\n    if (true) {\n      if (typeof methods[key] !== 'function') {\n        warn(\"Method \\\"\" + key + \"\\\" has type \\\"\" + typeof methods[key] + \"\\\" in the component definition. \" + \"Did you reference the function correctly?\", vm);\n      }\n\n      if (props && hasOwn(props, key)) {\n        warn(\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\", vm);\n      }\n\n      if (key in vm && isReserved(key)) {\n        warn(\"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" + \"Avoid defining component methods that start with _ or $.\");\n      }\n    }\n\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch(vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher(vm, expOrFn, handler, options) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n\n  return vm.$watch(expOrFn, handler, options);\n}\n\nfunction stateMixin(Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n\n  dataDef.get = function () {\n    return this._data;\n  };\n\n  var propsDef = {};\n\n  propsDef.get = function () {\n    return this._props;\n  };\n\n  if (true) {\n    dataDef.set = function () {\n      warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);\n    };\n\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options);\n    }\n\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n\n    if (options.immediate) {\n      var info = \"callback for immediate watcher \\\"\" + watcher.expression + \"\\\"\";\n      pushTarget();\n      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);\n      popTarget();\n    }\n\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n}\n/*  */\n\n\nvar uid$3 = 0;\n\nfunction initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this; // a uid\n\n    vm._uid = uid$3++;\n    var startTag, endTag;\n    /* istanbul ignore if */\n\n    if ( true && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + vm._uid;\n      endTag = \"vue-perf-end:\" + vm._uid;\n      mark(startTag);\n    } // a flag to avoid this being observed\n\n\n    vm._isVue = true; // merge options\n\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);\n    }\n    /* istanbul ignore else */\n\n\n    if (true) {\n      initProxy(vm);\n    } else {} // expose real self\n\n\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n\n    callHook(vm, 'created');\n    /* istanbul ignore if */\n\n    if ( true && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(\"vue \" + vm._name + \" init\", startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent(vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options); // doing this because it's faster than dynamic enumeration.\n\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions(Ctor) {\n  var options = Ctor.options;\n\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions; // check if there are any late-modified/attached options (#4976)\n\n      var modifiedOptions = resolveModifiedOptions(Ctor); // update base extend options\n\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n\n  return options;\n}\n\nfunction resolveModifiedOptions(Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) {\n        modified = {};\n      }\n\n      modified[key] = latest[key];\n    }\n  }\n\n  return modified;\n}\n\nfunction Vue(options) {\n  if ( true && !(this instanceof Vue)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n/*  */\n\nfunction initUse(Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = this._installedPlugins || (this._installedPlugins = []);\n\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this;\n    } // additional parameters\n\n\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n\n    installedPlugins.push(plugin);\n    return this;\n  };\n}\n/*  */\n\n\nfunction initMixin$1(Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this;\n  };\n}\n/*  */\n\n\nfunction initExtend(Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n  /**\n   * Class inheritance\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId];\n    }\n\n    var name = extendOptions.name || Super.options.name;\n\n    if ( true && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent(options) {\n      this._init(options);\n    };\n\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super; // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    } // allow further extension/mixin/plugin usage\n\n\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use; // create asset registers, so extended classes\n    // can have their private assets too.\n\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    }); // enable recursive self-lookup\n\n    if (name) {\n      Sub.options.components[name] = Sub;\n    } // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n\n\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options); // cache constructor\n\n    cachedCtors[SuperId] = Sub;\n    return Sub;\n  };\n}\n\nfunction initProps$1(Comp) {\n  var props = Comp.options.props;\n\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1(Comp) {\n  var computed = Comp.options.computed;\n\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n/*  */\n\n\nfunction initAssetRegisters(Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if ( true && type === 'component') {\n          validateComponentName(id);\n        }\n\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = {\n            bind: definition,\n            update: definition\n          };\n        }\n\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n}\n/*  */\n\n\nfunction getComponentName(opts) {\n  return opts && (opts.Ctor.options.name || opts.tag);\n}\n\nfunction matches(pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1;\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1;\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name);\n  }\n  /* istanbul ignore next */\n\n\n  return false;\n}\n\nfunction pruneCache(keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n\n  for (var key in cache) {\n    var entry = cache[key];\n\n    if (entry) {\n      var name = entry.name;\n\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry(cache, key, keys, current) {\n  var entry = cache[key];\n\n  if (entry && (!current || entry.tag !== current.tag)) {\n    entry.componentInstance.$destroy();\n  }\n\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n  methods: {\n    cacheVNode: function cacheVNode() {\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var vnodeToCache = ref.vnodeToCache;\n      var keyToCache = ref.keyToCache;\n\n      if (vnodeToCache) {\n        var tag = vnodeToCache.tag;\n        var componentInstance = vnodeToCache.componentInstance;\n        var componentOptions = vnodeToCache.componentOptions;\n        cache[keyToCache] = {\n          name: getComponentName(componentOptions),\n          tag: tag,\n          componentInstance: componentInstance\n        };\n        keys.push(keyToCache); // prune oldest entry\n\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n\n        this.vnodeToCache = null;\n      }\n    }\n  },\n  created: function created() {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n  destroyed: function destroyed() {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n  mounted: function mounted() {\n    var this$1 = this;\n    this.cacheVNode();\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) {\n        return matches(val, name);\n      });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) {\n        return !matches(val, name);\n      });\n    });\n  },\n  updated: function updated() {\n    this.cacheVNode();\n  },\n  render: function render() {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n\n      if ( // not included\n      include && (!name || !matches(include, name)) || // excluded\n      exclude && name && matches(exclude, name)) {\n        return vnode;\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null // same constructor may get registered as different local components\n      // so cid alone is not enough (#3269)\n      ? componentOptions.Ctor.cid + (componentOptions.tag ? \"::\" + componentOptions.tag : '') : vnode.key;\n\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance; // make current key freshest\n\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        // delay setting the cache until update\n        this.vnodeToCache = vnode;\n        this.keyToCache = key;\n      }\n\n      vnode.data.keepAlive = true;\n    }\n\n    return vnode || slot && slot[0];\n  }\n};\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n/*  */\n\nfunction initGlobalAPI(Vue) {\n  // config\n  var configDef = {};\n\n  configDef.get = function () {\n    return config;\n  };\n\n  if (true) {\n    configDef.set = function () {\n      warn('Do not replace the Vue.config object, set individual fields instead.');\n    };\n  }\n\n  Object.defineProperty(Vue, 'config', configDef); // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick; // 2.6 explicit observable API\n\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj;\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  }); // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n\n  Vue.options._base = Vue;\n  extend(Vue.options.components, builtInComponents);\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get() {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext;\n  }\n}); // expose FunctionalRenderContext for ssr runtime helper installation\n\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\nVue.version = '2.6.14';\n/*  */\n// these are reserved for web because they are directly compiled away\n// during template compilation\n\nvar isReservedAttr = makeMap('style,class'); // attributes that should be using props for binding\n\nvar acceptValue = makeMap('input,textarea,option,select,progress');\n\nvar mustUseProp = function (tag, type, attr) {\n  return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false' ? 'false' // allow arbitrary string value for contenteditable\n  : key === 'contenteditable' && isValidContentEditableValue(value) ? value : 'true';\n};\n\nvar isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,' + 'truespeed,typemustmatch,visible');\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : '';\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false;\n};\n/*  */\n\n\nfunction genClassForVnode(vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n\n  return renderClass(data.staticClass, data.class);\n}\n\nfunction mergeClassData(child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class) ? [child.class, parent.class] : parent.class\n  };\n}\n\nfunction renderClass(staticClass, dynamicClass) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass));\n  }\n  /* istanbul ignore next */\n\n\n  return '';\n}\n\nfunction concat(a, b) {\n  return a ? b ? a + ' ' + b : a : b || '';\n}\n\nfunction stringifyClass(value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value);\n  }\n\n  if (isObject(value)) {\n    return stringifyObject(value);\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n  /* istanbul ignore next */\n\n\n  return '';\n}\n\nfunction stringifyArray(value) {\n  var res = '';\n  var stringified;\n\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) {\n        res += ' ';\n      }\n\n      res += stringified;\n    }\n  }\n\n  return res;\n}\n\nfunction stringifyObject(value) {\n  var res = '';\n\n  for (var key in value) {\n    if (value[key]) {\n      if (res) {\n        res += ' ';\n      }\n\n      res += key;\n    }\n  }\n\n  return res;\n}\n/*  */\n\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\nvar isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot'); // this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\n\nvar isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag);\n};\n\nfunction getTagNamespace(tag) {\n  if (isSVG(tag)) {\n    return 'svg';\n  } // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n\n\n  if (tag === 'math') {\n    return 'math';\n  }\n}\n\nvar unknownElementCache = Object.create(null);\n\nfunction isUnknownElement(tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true;\n  }\n\n  if (isReservedTag(tag)) {\n    return false;\n  }\n\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag];\n  }\n\n  var el = document.createElement(tag);\n\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n  } else {\n    return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n\n    if (!selected) {\n       true && warn('Cannot find element: ' + el);\n      return document.createElement('div');\n    }\n\n    return selected;\n  } else {\n    return el;\n  }\n}\n/*  */\n\n\nfunction createElement$1(tagName, vnode) {\n  var elm = document.createElement(tagName);\n\n  if (tagName !== 'select') {\n    return elm;\n  } // false or null will remove the attribute but undefined will not\n\n\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n\n  return elm;\n}\n\nfunction createElementNS(namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName);\n}\n\nfunction createTextNode(text) {\n  return document.createTextNode(text);\n}\n\nfunction createComment(text) {\n  return document.createComment(text);\n}\n\nfunction insertBefore(parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild(node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild(node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode(node) {\n  return node.parentNode;\n}\n\nfunction nextSibling(node) {\n  return node.nextSibling;\n}\n\nfunction tagName(node) {\n  return node.tagName;\n}\n\nfunction setTextContent(node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope(node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n/*  */\n\nvar ref = {\n  create: function create(_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update(oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy(vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef(vnode, isRemoval) {\n  var key = vnode.data.ref;\n\n  if (!isDef(key)) {\n    return;\n  }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\n\nvar emptyNode = new VNode('', {}, []);\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode(a, b) {\n  return a.key === b.key && a.asyncFactory === b.asyncFactory && (a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b) || isTrue(a.isAsyncPlaceholder) && isUndef(b.asyncFactory.error));\n}\n\nfunction sameInputType(a, b) {\n  if (a.tag !== 'input') {\n    return true;\n  }\n\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB);\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n\n    if (isDef(key)) {\n      map[key] = i;\n    }\n  }\n\n  return map;\n}\n\nfunction createPatchFunction(backend) {\n  var i, j;\n  var cbs = {};\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt(elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);\n  }\n\n  function createRmCb(childElm, listeners) {\n    function remove$$1() {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n\n    remove$$1.listeners = listeners;\n    return remove$$1;\n  }\n\n  function removeNode(el) {\n    var parent = nodeOps.parentNode(el); // element may have already been removed due to v-html / v-text\n\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1(vnode, inVPre) {\n    return !inVPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.some(function (ignore) {\n      return isRegExp(ignore) ? ignore.test(vnode.tag) : ignore === vnode.tag;\n    })) && config.isUnknownElement(vnode.tag);\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested, ownerArray, index) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return;\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n\n    if (isDef(tag)) {\n      if (true) {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.', vnode.context);\n        }\n      }\n\n      vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n      /* istanbul ignore if */\n\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if ( true && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false\n        /* hydrating */\n        );\n      } // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n\n\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n\n        return true;\n      }\n    }\n  }\n\n  function initComponent(vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n\n    vnode.elm = vnode.componentInstance.$el;\n\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode); // make sure to invoke the insert hook\n\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i; // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n\n    var innerNode = vnode;\n\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n\n        insertedVnodeQueue.push(innerNode);\n        break;\n      }\n    } // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n\n\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert(parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren(vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (true) {\n        checkDuplicateKeys(children);\n      }\n\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable(vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n\n    return isDef(vnode.tag);\n  }\n\n  function invokeCreateHooks(vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n\n    i = vnode.data.hook; // Reuse variable\n\n    if (isDef(i)) {\n      if (isDef(i.create)) {\n        i.create(emptyNode, vnode);\n      }\n\n      if (isDef(i.insert)) {\n        insertedVnodeQueue.push(vnode);\n      }\n    }\n  } // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n\n\n  function setScope(vnode) {\n    var i;\n\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n\n        ancestor = ancestor.parent;\n      }\n    } // for slot content they should also get the scopeId from the host instance.\n\n\n    if (isDef(i = activeInstance) && i !== vnode.context && i !== vnode.fnContext && isDef(i = i.$options._scopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook(vnode) {\n    var i, j;\n    var data = vnode.data;\n\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) {\n        i(vnode);\n      }\n\n      for (i = 0; i < cbs.destroy.length; ++i) {\n        cbs.destroy[i](vnode);\n      }\n    }\n\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes(vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else {\n          // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook(vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } // recursively invoke hooks on child component root node\n\n\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm; // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n\n    var canMove = !removeOnly;\n\n    if (true) {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) {\n        // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) {\n        // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) {\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        }\n\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n\n        if (isUndef(idxInOld)) {\n          // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys(children) {\n    var seenKeys = {};\n\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\", vnode.context);\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld(node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n\n      if (isDef(c) && sameVnode(node, c)) {\n        return i;\n      }\n    }\n  }\n\n  function patchVnode(oldVnode, vnode, insertedVnodeQueue, ownerArray, index, removeOnly) {\n    if (oldVnode === vnode) {\n      return;\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n\n      return;\n    } // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n\n\n    if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return;\n    }\n\n    var i;\n    var data = vnode.data;\n\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) {\n        cbs.update[i](oldVnode, vnode);\n      }\n\n      if (isDef(i = data.hook) && isDef(i = i.update)) {\n        i(oldVnode, vnode);\n      }\n    }\n\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) {\n          updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);\n        }\n      } else if (isDef(ch)) {\n        if (true) {\n          checkDuplicateKeys(ch);\n        }\n\n        if (isDef(oldVnode.text)) {\n          nodeOps.setTextContent(elm, '');\n        }\n\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) {\n        i(oldVnode, vnode);\n      }\n    }\n  }\n\n  function invokeInsertHook(vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false; // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key'); // Note: this is a browser-only function so we can assume elms are DOM nodes.\n\n  function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || data && data.pre;\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true;\n    } // assert node match\n\n\n    if (true) {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false;\n      }\n    }\n\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) {\n        i(vnode, true\n        /* hydrating */\n        );\n      }\n\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true;\n      }\n    }\n\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if ( true && typeof console !== 'undefined' && !hydrationBailed) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n\n              return false;\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break;\n              }\n\n              childNode = childNode.nextSibling;\n            } // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n\n\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if ( true && typeof console !== 'undefined' && !hydrationBailed) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n\n              return false;\n            }\n          }\n        }\n      }\n\n      if (isDef(data)) {\n        var fullInvoke = false;\n\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break;\n          }\n        }\n\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n\n    return true;\n  }\n\n  function assertNodeMatch(node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || !isUnknownElement$$1(vnode, inVPre) && vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3);\n    }\n  }\n\n  return function patch(oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) {\n        invokeDestroyHook(oldVnode);\n      }\n\n      return;\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode;\n            } else if (true) {\n              warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');\n            }\n          } // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n\n\n          oldVnode = emptyNodeAt(oldVnode);\n        } // replacing existing element\n\n\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm); // create new node\n\n        createElm(vnode, insertedVnodeQueue, // extremely rare edge case: do not insert if old element is in a\n        // leaving transition. Only happens when combining transition +\n        // keep-alive + HOCs. (#4590)\n        oldElm._leaveCb ? null : parentElm, nodeOps.nextSibling(oldElm)); // update parent placeholder node element, recursively\n\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n\n            ancestor.elm = vnode.elm;\n\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              } // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n\n\n              var insert = ancestor.data.hook.insert;\n\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n\n            ancestor = ancestor.parent;\n          }\n        } // destroy old node\n\n\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm;\n  };\n}\n/*  */\n\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives(vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives(oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update(oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n  var key, oldDir, dir;\n\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1(dirs, vm) {\n  var res = Object.create(null);\n\n  if (!dirs) {\n    // $flow-disable-line\n    return res;\n  }\n\n  var i, dir;\n\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  } // $flow-disable-line\n\n\n  return res;\n}\n\nfunction getRawDirName(dir) {\n  return dir.rawName || dir.name + \".\" + Object.keys(dir.modifiers || {}).join('.');\n}\n\nfunction callHook$1(dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, \"directive \" + dir.name + \" \" + hook + \" hook\");\n    }\n  }\n}\n\nvar baseModules = [ref, directives];\n/*  */\n\nfunction updateAttrs(oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return;\n  }\n\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return;\n  }\n\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {}; // clone observed objects, as the user probably wants to mutate it\n\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n\n    if (old !== cur) {\n      setAttr(elm, key, cur, vnode.data.pre);\n    }\n  } // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n\n  /* istanbul ignore if */\n\n\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr(el, key, value, isInPre) {\n  if (isInPre || el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED' ? 'true' : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr(el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n\n    /* istanbul ignore if */\n    if (isIE && !isIE9 && el.tagName === 'TEXTAREA' && key === 'placeholder' && value !== '' && !el.__ieph) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n\n      el.addEventListener('input', blocker); // $flow-disable-line\n\n      el.__ieph = true;\n      /* IE placeholder patched */\n    }\n\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n/*  */\n\nfunction updateClass(oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {\n    return;\n  }\n\n  var cls = genClassForVnode(vnode); // handle transition classes\n\n  var transitionClass = el._transitionClasses;\n\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  } // set the class\n\n\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\n\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n/*  */\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\n\nfunction normalizeEvents(on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  } // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n\n  /* istanbul ignore if */\n\n\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1(event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n\n  return function onceHandler() {\n    var res = handler.apply(null, arguments);\n\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  };\n} // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\n\n\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1(name, handler, capture, passive) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n\n    handler = original._wrapper = function (e) {\n      if ( // no bubbling, should always fire.\n      // this is just a safety net in case event.timeStamp is unreliable in\n      // certain weird environments...\n      e.target === e.currentTarget || // event is fired after handler attachment\n      e.timeStamp >= attachedTimestamp || // bail for environments that have buggy event.timeStamp implementations\n      // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n      // #9681 QtWebEngine event.timeStamp is negative value\n      e.timeStamp <= 0 || // #9448 bail if event is fired in another document in a multi-page\n      // electron/nw.js app, since event.timeStamp will be using a different\n      // starting reference\n      e.target.ownerDocument !== document) {\n        return original.apply(this, arguments);\n      }\n    };\n  }\n\n  target$1.addEventListener(name, handler, supportsPassive ? {\n    capture: capture,\n    passive: passive\n  } : capture);\n}\n\nfunction remove$2(name, handler, capture, _target) {\n  (_target || target$1).removeEventListener(name, handler._wrapper || handler, capture);\n}\n\nfunction updateDOMListeners(oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return;\n  }\n\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps(oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return;\n  }\n\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {}; // clone observed objects, as the user probably wants to mutate it\n\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key]; // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) {\n        vnode.children.length = 0;\n      }\n\n      if (cur === oldProps[key]) {\n        continue;\n      } // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n\n\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur; // avoid resetting cursor position when value is the same\n\n      var strCur = isUndef(cur) ? '' : String(cur);\n\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if ( // skip the update if old and new VDOM state is the same.\n    // `value` is handled separately because the DOM value may be temporarily\n    // out of sync with VDOM state due to focus, composition and modifiers.\n    // This  #4521 by skipping the unnecessary `checked` update.\n    cur !== oldProps[key]) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n} // check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue(elm, checkVal) {\n  return !elm.composing && (elm.tagName === 'OPTION' || isNotInFocusAndDirty(elm, checkVal) || isDirtyWithModifiers(elm, checkVal));\n}\n\nfunction isNotInFocusAndDirty(elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true; // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n\n  try {\n    notInFocus = document.activeElement !== elm;\n  } catch (e) {}\n\n  return notInFocus && elm.value !== checkVal;\n}\n\nfunction isDirtyWithModifiers(elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal);\n    }\n\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim();\n    }\n  }\n\n  return value !== newVal;\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res;\n}); // merge static and dynamic style data on the same vnode\n\nfunction normalizeStyleData(data) {\n  var style = normalizeStyleBinding(data.style); // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n\n  return data.staticStyle ? extend(data.staticStyle, style) : style;\n} // normalize possible array / string values into Object\n\n\nfunction normalizeStyleBinding(bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle);\n  }\n\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle);\n  }\n\n  return bindingStyle;\n}\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\n\n\nfunction getStyle(vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n\n      if (childNode && childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if (styleData = normalizeStyleData(vnode.data)) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n\n  while (parentNode = parentNode.parent) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n\n  return res;\n}\n/*  */\n\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\n\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n\n  if (prop !== 'filter' && prop in emptyStyle) {\n    return prop;\n  }\n\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n\n    if (name in emptyStyle) {\n      return name;\n    }\n  }\n});\n\nfunction updateStyle(oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {\n    return;\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {}; // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n  var style = normalizeStyleBinding(vnode.data.style) || {}; // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n\n  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n\n  for (name in newStyle) {\n    cur = newStyle[name];\n\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n/*  */\n\nvar whitespaceRE = /\\s+/;\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\n\nfunction addClass(el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return;\n  }\n  /* istanbul ignore else */\n\n\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) {\n        return el.classList.add(c);\n      });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\n\n\nfunction removeClass(el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return;\n  }\n  /* istanbul ignore else */\n\n\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) {\n        return el.classList.remove(c);\n      });\n    } else {\n      el.classList.remove(cls);\n    }\n\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n\n    cur = cur.trim();\n\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n/*  */\n\n\nfunction resolveTransition(def$$1) {\n  if (!def$$1) {\n    return;\n  }\n  /* istanbul ignore else */\n\n\n  if (typeof def$$1 === 'object') {\n    var res = {};\n\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n\n    extend(res, def$$1);\n    return res;\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1);\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: name + \"-enter\",\n    enterToClass: name + \"-enter-to\",\n    enterActiveClass: name + \"-enter-active\",\n    leaveClass: name + \"-leave\",\n    leaveToClass: name + \"-leave-to\",\n    leaveActiveClass: name + \"-leave-active\"\n  };\n});\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation'; // Transition property/event sniffing\n\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\n\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n\n  if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n} // binding to window is necessary to make hot reload work in IE in strict mode\n\n\nvar raf = inBrowser ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout :\n/* istanbul ignore next */\nfunction (fn) {\n  return fn();\n};\n\nfunction nextFrame(fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass(el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass(el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds(el, expectedType, cb) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n\n  if (!type) {\n    return cb();\n  }\n\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo(el, expectedType) {\n  var styles = window.getComputedStyle(el); // JSDOM may return undefined for transition properties\n\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n\n  var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  };\n}\n\nfunction getTimeout(delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i]);\n  }));\n} // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\n\n\nfunction toMs(s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000;\n}\n/*  */\n\n\nfunction enter(vnode, toggleDisplay) {\n  var el = vnode.elm; // call leave callback now\n\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n\n  if (isUndef(data)) {\n    return;\n  }\n  /* istanbul ignore if */\n\n\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return;\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration; // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return;\n  }\n\n  var startClass = isAppear && appearClass ? appearClass : enterClass;\n  var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;\n  var toClass = isAppear && appearToClass ? appearToClass : enterToClass;\n  var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;\n  var enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;\n  var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;\n  var enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;\n  var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);\n\n  if ( true && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n\n      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n\n      enterHook && enterHook(el, cb);\n    });\n  } // start enter transition\n\n\n  beforeEnterHook && beforeEnterHook(el);\n\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave(vnode, rm) {\n  var el = vnode.elm; // call enter callback now\n\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm();\n  }\n  /* istanbul ignore if */\n\n\n  if (isDef(el._leaveCb)) {\n    return;\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n  var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);\n\n  if ( true && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave() {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return;\n    } // record leaving element\n\n\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n\n    beforeLeave && beforeLeave(el);\n\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n\n    leave && leave(el, cb);\n\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n} // only used in dev mode\n\n\nfunction checkDuration(val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\"<transition> explicit \" + name + \" duration is not a valid number - \" + \"got \" + JSON.stringify(val) + \".\", vnode.context);\n  } else if (isNaN(val)) {\n    warn(\"<transition> explicit \" + name + \" duration is NaN - \" + 'the duration expression might be incorrect.', vnode.context);\n  }\n}\n\nfunction isValidDuration(val) {\n  return typeof val === 'number' && !isNaN(val);\n}\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\n\n\nfunction getHookArgumentsLength(fn) {\n  if (isUndef(fn)) {\n    return false;\n  }\n\n  var invokerFns = fn.fns;\n\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);\n  } else {\n    return (fn._length || fn.length) > 1;\n  }\n}\n\nfunction _enter(_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1(vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\nvar platformModules = [attrs, klass, events, domProps, style, transition];\n/*  */\n// the directive module should be applied last, after all\n// built-in modules have been applied.\n\nvar modules = platformModules.concat(baseModules);\nvar patch = createPatchFunction({\n  nodeOps: nodeOps,\n  modules: modules\n});\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\n\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted(el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd); // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context); // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n\n      if (curOptions.some(function (o, i) {\n        return !looseEqual(o, prevOptions[i]);\n      })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple ? binding.value.some(function (v) {\n          return hasNoMatchingOption(v, curOptions);\n        }) : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected(el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected(el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n\n  if (isMultiple && !Array.isArray(value)) {\n     true && warn(\"<select multiple v-model=\\\"\" + binding.expression + \"\\\"> \" + \"expects an Array value for its binding, but got \" + Object.prototype.toString.call(value).slice(8, -1), vm);\n    return;\n  }\n\n  var selected, option;\n\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n\n        return;\n      }\n    }\n  }\n\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption(value, options) {\n  return options.every(function (o) {\n    return !looseEqual(o, value);\n  });\n}\n\nfunction getValue(option) {\n  return '_value' in option ? option._value : option.value;\n}\n\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd(e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) {\n    return;\n  }\n\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger(el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n/*  */\n// recursively search for possible transition defined inside the component root\n\n\nfunction locateNode(vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;\n}\n\nvar show = {\n  bind: function bind(el, ref, vnode) {\n    var value = ref.value;\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;\n\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n  update: function update(el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n    /* istanbul ignore if */\n\n    if (!value === !oldValue) {\n      return;\n    }\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n\n    if (transition$$1) {\n      vnode.data.show = true;\n\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n  unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n}; // in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\n\nfunction getRealChild(vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children));\n  } else {\n    return vnode;\n  }\n}\n\nfunction extractTransitionData(comp) {\n  var data = {};\n  var options = comp.$options; // props\n\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  } // events.\n  // extract listeners and pass them directly to the transition methods\n\n\n  var listeners = options._parentListeners;\n\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n\n  return data;\n}\n\nfunction placeholder(h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    });\n  }\n}\n\nfunction hasParentTransition(vnode) {\n  while (vnode = vnode.parent) {\n    if (vnode.data.transition) {\n      return true;\n    }\n  }\n}\n\nfunction isSameChild(child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag;\n}\n\nvar isNotTextNode = function (c) {\n  return c.tag || isAsyncPlaceholder(c);\n};\n\nvar isVShowDirective = function (d) {\n  return d.name === 'show';\n};\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n  render: function render(h) {\n    var this$1 = this;\n    var children = this.$slots.default;\n\n    if (!children) {\n      return;\n    } // filter out text nodes (possible whitespaces)\n\n\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n\n    if (!children.length) {\n      return;\n    } // warn multiple elements\n\n\n    if ( true && children.length > 1) {\n      warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);\n    }\n\n    var mode = this.mode; // warn invalid mode\n\n    if ( true && mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn('invalid <transition> mode: ' + mode, this.$parent);\n    }\n\n    var rawChild = children[0]; // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild;\n    } // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n\n\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n\n    if (!child) {\n      return rawChild;\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild);\n    } // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n\n\n    var id = \"__transition-\" + this._uid + \"-\";\n    child.key = child.key == null ? child.isComment ? id + 'comment' : id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild); // mark v-show\n    // so that the transition module can hand over the control to the directive\n\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild) && !isAsyncPlaceholder(oldChild) && // #6687 component root is a comment node\n    !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data); // handle transition mode\n\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild);\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild;\n        }\n\n        var delayedLeave;\n\n        var performLeave = function () {\n          delayedLeave();\n        };\n\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        });\n      }\n    }\n\n    return rawChild;\n  }\n};\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\ndelete props.mode;\nvar TransitionGroup = {\n  props: props,\n  beforeMount: function beforeMount() {\n    var this$1 = this;\n    var update = this._update;\n\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1); // force removing pass\n\n      this$1.__patch__(this$1._vnode, this$1.kept, false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n      );\n\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n  render: function render(h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c;\n          (c.data || (c.data = {})).transition = transitionData;\n        } else if (true) {\n          var opts = c.componentOptions;\n          var name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;\n          warn(\"<transition-group> children must be keyed: <\" + name + \">\");\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children);\n  },\n  updated: function updated() {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || (this.name || 'v') + '-move';\n\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return;\n    } // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n\n\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation); // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n\n    this._reflow = document.body.offsetHeight;\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {\n          if (e && e.target !== el) {\n            return;\n          }\n\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n  methods: {\n    hasMove: function hasMove(el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false;\n      }\n      /* istanbul ignore if */\n\n\n      if (this._hasMove) {\n        return this._hasMove;\n      } // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n\n\n      var clone = el.cloneNode();\n\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) {\n          removeClass(clone, cls);\n        });\n      }\n\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return this._hasMove = info.hasTransform;\n    }\n  }\n};\n\nfunction callPendingCbs(c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n\n\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition(c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation(c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n/*  */\n// install platform specific utils\n\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement; // install platform runtime directives & components\n\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents); // install platform patch function\n\nVue.prototype.__patch__ = inBrowser ? patch : noop; // public mount method\n\nVue.prototype.$mount = function (el, hydrating) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating);\n}; // devtools global hook\n\n/* istanbul ignore next */\n\n\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (true) {\n        console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n      }\n    }\n\n    if ( true && config.productionTip !== false && typeof console !== 'undefined') {\n      console[console.info ? 'info' : 'log'](\"You are running Vue in development mode.\\n\" + \"Make sure to turn on production mode when deploying for production.\\n\" + \"See more tips at https://vuejs.org/guide/deployment.html\");\n    }\n  }, 0);\n}\n/*  */\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n\n//# sourceURL=webpack:///./node_modules/vue/dist/vue.runtime.esm.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/App.vue":
/*!*********************!*\
  !*** ./src/App.vue ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _App_vue_vue_type_template_id_7ba5bd90___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=template&id=7ba5bd90& */ \"./src/App.vue?vue&type=template&id=7ba5bd90&\");\n/* harmony import */ var _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js& */ \"./src/App.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App.vue?vue&type=style&index=0&lang=css& */ \"./src/App.vue?vue&type=style&index=0&lang=css&\");\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _App_vue_vue_type_template_id_7ba5bd90___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _App_vue_vue_type_template_id_7ba5bd90___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"src/App.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack:///./src/App.vue?");

/***/ }),

/***/ "./src/App.vue?vue&type=script&lang=js&":
/*!**********************************************!*\
  !*** ./src/App.vue?vue&type=script&lang=js& ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../node_modules/babel-loader/lib!../node_modules/vue-loader/lib??vue-loader-options!./App.vue?vue&type=script&lang=js& */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./src/App.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./src/App.vue?");

/***/ }),

/***/ "./src/App.vue?vue&type=style&index=0&lang=css&":
/*!******************************************************!*\
  !*** ./src/App.vue?vue&type=style&index=0&lang=css& ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../node_modules/vue-style-loader!../node_modules/css-loader/dist/cjs.js!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css& */ \"./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/App.vue?vue&type=style&index=0&lang=css&\");\n/* harmony import */ var _node_modules_vue_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if([\"default\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n\n\n//# sourceURL=webpack:///./src/App.vue?");

/***/ }),

/***/ "./src/App.vue?vue&type=template&id=7ba5bd90&":
/*!****************************************************!*\
  !*** ./src/App.vue?vue&type=template&id=7ba5bd90& ***!
  \****************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_template_id_7ba5bd90___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/vue-loader/lib??vue-loader-options!./App.vue?vue&type=template&id=7ba5bd90& */ \"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/App.vue?vue&type=template&id=7ba5bd90&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_template_id_7ba5bd90___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_template_id_7ba5bd90___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack:///./src/App.vue?");

/***/ }),

/***/ "./src/css/tictactoe.scss":
/*!********************************!*\
  !*** ./src/css/tictactoe.scss ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./tictactoe.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/css/tictactoe.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(/*! ../../node_modules/vue-style-loader/lib/addStylesClient.js */ \"./node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f70aece2\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n\n//# sourceURL=webpack:///./src/css/tictactoe.scss?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm.js\");\n/* harmony import */ var _App_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./App.vue */ \"./src/App.vue\");\n/* harmony import */ var _css_tictactoe_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css/tictactoe.scss */ \"./src/css/tictactoe.scss\");\n/* harmony import */ var _css_tictactoe_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_tictactoe_scss__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _js_tictactoe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/tictactoe.js */ \"./src/js/tictactoe.js\");\n/* harmony import */ var _js_tictactoe_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_tictactoe_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nwindow.$ = window.jQuery = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\nnew vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n  el: '#app',\n  render: function render(h) {\n    return h(_App_vue__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n  }\n});\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/js/tictactoe.js":
/*!*****************************!*\
  !*** ./src/js/tictactoe.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var require;var require;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof2(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\n(function e(t, n, r) {\n  function s(o, u) {\n    if (!n[o]) {\n      if (!t[o]) {\n        var a = typeof require == \"function\" && require;\n        if (!u && a) return require(o, !0);\n        if (i) return i(o, !0);\n        var f = new Error(\"Cannot find module '\" + o + \"'\");\n        throw f.code = \"MODULE_NOT_FOUND\", f;\n      }\n\n      var l = n[o] = {\n        exports: {}\n      };\n      t[o][0].call(l.exports, function (e) {\n        var n = t[o][1][e];\n        return s(n ? n : e);\n      }, l, l.exports, e, t, n, r);\n    }\n\n    return n[o].exports;\n  }\n\n  var i = typeof require == \"function\" && require;\n\n  for (var o = 0; o < r.length; o++) {\n    s(r[o]);\n  }\n\n  return s;\n})({\n  1: [function (require, module, exports) {\n    'use strict';\n\n    var _slicedToArray = function () {\n      function sliceIterator(arr, i) {\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n\n        try {\n          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n\n            if (i && _arr.length === i) break;\n          }\n        } catch (err) {\n          _d = true;\n          _e = err;\n        } finally {\n          try {\n            if (!_n && _i[\"return\"]) _i[\"return\"]();\n          } finally {\n            if (_d) throw _e;\n          }\n        }\n\n        return _arr;\n      }\n\n      return function (arr, i) {\n        if (Array.isArray(arr)) {\n          return arr;\n        } else if (Symbol.iterator in Object(arr)) {\n          return sliceIterator(arr, i);\n        } else {\n          throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n        }\n      };\n    }(); //=============================================\n    //utility functions\n\n\n    arrayHas = function arrayHas(arr, val) {\n      // the val might be a single value or array of values\n      if (Array.isArray(val)) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = val[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var i = _step.value;\n\n            if (arr.indexOf(i) === -1) {\n              return false;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"]) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      if (arr.indexOf(val) === -1) {\n        return false;\n      }\n\n      return true;\n    }; //=============================================\n    //This is the app module\n    //Module Dependencieds\n\n\n    'use strict';\n\n    var $ = require('jquery'),\n        //jQuery    = $,\n    bootstrap = require('bootstrap'),\n        //Module Variables\n    human,\n        computer,\n        arrayHas,\n        gameGrid = {\n      rows: [[0, 1, 2], [3, 4, 5], [6, 7, 8]],\n      columns: [[0, 3, 6], [1, 4, 7], [2, 5, 8]],\n      diagonal1: [[0, 4, 8]],\n      diagonal2: [[2, 4, 6]]\n    },\n        gamePoints = [0, 1, 2, 3, 4, 5, 6, 7, 8],\n        jQMap = {},\n        configMap = {};\n\n    human = {\n      moves: [],\n      play: function play() {\n        //event handler\n        //'this' is a DOM\n        var move = undefined,\n            $this = $(this),\n            $symbol = $this.children('.symbol');\n\n        if ($symbol.text()) {\n          return false;\n        }\n\n        $symbol.text(configMap.humanSymbol || 'X');\n        move = +$this.attr('id');\n        human.moves.push(move);\n        jQMap.$playBox.off('click');\n        setTimeout(function () {\n          computer.playNextTurn.call(computer);\n          jQMap.$playBox.on('click', human.play);\n        }, 300);\n        return false;\n      }\n    };\n    computer = {\n      winningPoints: undefined,\n      playNextTurn: undefined,\n      moves: [],\n      startPoints: [0, 2, 4, 6, 8],\n      centerParttern: false,\n      fourthWinningOptions: [{\n        blockedPoint: 0,\n        winningOptions: [1, 3]\n      }, {\n        blockedPoint: 2,\n        winningOptions: [1, 5]\n      }, {\n        blockedPoint: 6,\n        winningOptions: [3, 7]\n      }, {\n        blockedPoint: 8,\n        winningOptions: [7, 5]\n      }],\n      makeFirstMove: function makeFirstMove() {\n        var move;\n        move = this.startPoints[Math.round(Math.random() * (this.startPoints.length - 1))]; //move = 4;// this assignment is purely for test purpose.  REMOVE IT\n\n        this.centerParttern = move === 4 ? true : false;\n        this.makeMOve(move);\n        this.playNextTurn = this.makeSecondMove;\n      },\n      makeSecondMove: function makeSecondMove() {\n        var secondMove,\n            firstHumanMove = human.moves[0],\n            computerFirstOptions = {\n          0: {\n            computerOptions: [2, 6],\n            humanOptions: [{\n              opt: 1,\n              move: 2\n            }, {\n              opt: 2,\n              move: 6\n            }, {\n              opt: 4,\n              move: 8\n            }, {\n              opt: 3,\n              move: 6\n            }, {\n              opt: 6,\n              move: 2\n            }]\n          },\n          2: {\n            computerOptions: [0, 8],\n            humanOptions: [{\n              opt: 1,\n              move: 0\n            }, {\n              opt: 0,\n              move: 8\n            }, {\n              opt: 4,\n              move: 6\n            }, {\n              opt: 5,\n              move: 8\n            }, {\n              opt: 8,\n              move: 0\n            }]\n          },\n          6: {\n            computerOptions: [0, 8],\n            humanOptions: [{\n              opt: 3,\n              move: 0\n            }, {\n              opt: 0,\n              move: 8\n            }, {\n              opt: 4,\n              move: 2\n            }, {\n              opt: 7,\n              move: 8\n            }, {\n              opt: 8,\n              move: 0\n            }]\n          },\n          8: {\n            computerOptions: [6, 2],\n            humanOptions: [{\n              opt: 7,\n              move: 6\n            }, {\n              opt: 6,\n              move: 2\n            }, {\n              opt: 4,\n              move: 0\n            }, {\n              opt: 5,\n              move: 2\n            }, {\n              opt: 2,\n              move: 6\n            }]\n          }\n        },\n            cfo = computerFirstOptions; //first check if computer is moving center\n\n        if (this.centerParttern) {\n          // if human has played one of my desired points\n          // use that point to set two_way trap\n          if (arrayHas(this.startPoints, human.moves[0])) {\n            var humanFirstMove = human.moves[0],\n                lastGamePoint = gamePoints[gamePoints.length - 1];\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = gamePoints[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var game = _step2.value;\n\n                if (game === humanFirstMove) {\n                  this.makeMOve(lastGamePoint);\n                  this.playNextTurn = this.makeThirdMove;\n                  return false;\n                }\n\n                lastGamePoint -= 1;\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2[\"return\"]) {\n                  _iterator2[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          } //if the above failed, set a winningpoint for third move, it would be a two-way trap\n          // if human blocks the winning point, third move would set two_way winingpoints\n\n\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = Object.keys(gameGrid)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var grid = _step3.value;\n              var _iteratorNormalCompletion4 = true;\n              var _didIteratorError4 = false;\n              var _iteratorError4 = undefined;\n\n              try {\n                for (var _iterator4 = gameGrid[grid][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                  var line = _step4.value;\n\n                  if (arrayHas(line, human.moves[0]) && !arrayHas(line, this.moves[0])) {\n                    var two_way_trap = undefined,\n                        lastGamePoint = gamePoints[gamePoints.length - 1],\n                        foundMatch = false;\n\n                    while (!foundMatch) {\n                      var randomGamePoint = Math.round(Math.random() * (line.length - 1));\n                      two_way_trap = line[randomGamePoint];\n\n                      if (!arrayHas(human.moves, two_way_trap) && !arrayHas(this.moves, two_way_trap)) {\n                        foundMatch = true;\n                      }\n                    }\n\n                    this.winningPoints = [two_way_trap];\n                    var _iteratorNormalCompletion5 = true;\n                    var _didIteratorError5 = false;\n                    var _iteratorError5 = undefined;\n\n                    try {\n                      for (var _iterator5 = gamePoints[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var point = _step5.value;\n\n                        if (point === two_way_trap) {\n                          this.makeMOve(lastGamePoint);\n                          this.playNextTurn = this.makeThirdMove;\n                          return;\n                        }\n\n                        lastGamePoint -= 1;\n                      }\n                    } catch (err) {\n                      _didIteratorError5 = true;\n                      _iteratorError5 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion5 && _iterator5[\"return\"]) {\n                          _iterator5[\"return\"]();\n                        }\n                      } finally {\n                        if (_didIteratorError5) {\n                          throw _iteratorError5;\n                        }\n                      }\n                    }\n                  }\n                }\n              } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion4 && _iterator4[\"return\"]) {\n                    _iterator4[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError4) {\n                    throw _iteratorError4;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"]) {\n                _iterator3[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          loopComputerFirstOptions: for (var _iterator6 = Object.keys(cfo)[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var option = _step6.value;\n\n            if (+option === this.moves[0]) {\n              var _iteratorNormalCompletion7 = true;\n              var _didIteratorError7 = false;\n              var _iteratorError7 = undefined;\n\n              try {\n                for (var _iterator7 = cfo[option].humanOptions[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                  var _option = _step7.value;\n\n                  if (_option.opt === firstHumanMove) {\n                    secondMove = _option.move;\n                    break loopComputerFirstOptions;\n                  } else {\n                    secondMove = cfo[option].computerOptions[Math.round(Math.random() * (cfo[option].computerOptions.length - 1))];\n                  }\n                }\n              } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion7 && _iterator7[\"return\"]) {\n                    _iterator7[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError7) {\n                    throw _iteratorError7;\n                  }\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6[\"return\"]) {\n              _iterator6[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n\n        this.makeMOve(secondMove);\n        this.playNextTurn = this.makeThirdMove;\n      },\n      makeThirdMove: function makeThirdMove() {\n        var _this = this;\n\n        var setWinnigPoints,\n            hm = human.moves,\n            tm = this.moves,\n            thirdMoveData = [{\n          computerPlayed: [0, 2],\n          secondMoveData: {\n            winningPoint: 1,\n            thirdMoveOptions: [{\n              opt: 4,\n              goals: [6, 8]\n            }, {\n              opt: 6,\n              goals: [3, 4]\n            }, {\n              opt: 8,\n              goals: [4, 5]\n            }],\n            humanWinnngPoint: 7\n          }\n        }, {\n          computerPlayed: [0, 6],\n          secondMoveData: {\n            winningPoint: 3,\n            thirdMoveOptions: [{\n              opt: 4,\n              goals: [2, 8]\n            }, {\n              opt: 2,\n              goals: [1, 4]\n            }, {\n              opt: 8,\n              goals: [4, 7]\n            }],\n            humanWinnngPoint: 5\n          }\n        }, {\n          computerPlayed: [6, 8],\n          secondMoveData: {\n            winningPoint: 7,\n            thirdMoveOptions: [{\n              opt: 4,\n              goals: [0, 2]\n            }, {\n              opt: 0,\n              goals: [3, 4]\n            }, {\n              opt: 2,\n              goals: [4, 5]\n            }],\n            humanWinnngPoint: 1\n          }\n        }, {\n          computerPlayed: [8, 2],\n          secondMoveData: {\n            winningPoint: 5,\n            thirdMoveOptions: [{\n              opt: 4,\n              goals: [0, 6]\n            }, {\n              opt: 0,\n              goals: [1, 4]\n            }, {\n              opt: 6,\n              goals: [4, 7]\n            }],\n            humanWinnngPoint: 3\n          }\n        }, {\n          computerPlayed: [0, 8],\n          secondMoveData: {\n            humanIsMOvingCenter: true\n          }\n        }, {\n          computerPlayed: [2, 6],\n          secondMoveData: {\n            humanIsMOvingCenter: true\n          }\n        }];\n\n        setWinnigPoints = function setWinnigPoints() {\n          _this.winningPoints = [];\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            gameGridSecondLoop: for (var _iterator8 = Object.keys(gameGrid)[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var grid = _step8.value;\n              var _iteratorNormalCompletion9 = true;\n              var _didIteratorError9 = false;\n              var _iteratorError9 = undefined;\n\n              try {\n                for (var _iterator9 = gameGrid[grid][Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                  var line = _step9.value;\n\n                  if ((arrayHas(line, [tm[0], tm[2]]) || arrayHas(line, [tm[1], tm[2]])) && !arrayHas(line, hm[0]) && !arrayHas(line, hm[1]) && !arrayHas(line, hm[2])) {\n                    var _iteratorNormalCompletion10 = true;\n                    var _didIteratorError10 = false;\n                    var _iteratorError10 = undefined;\n\n                    try {\n                      for (var _iterator10 = line[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n                        var val = _step10.value;\n\n                        if (!arrayHas(tm, val)) {\n                          _this.winningPoints.push(val);\n                        }\n                      }\n                    } catch (err) {\n                      _didIteratorError10 = true;\n                      _iteratorError10 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion10 && _iterator10[\"return\"]) {\n                          _iterator10[\"return\"]();\n                        }\n                      } finally {\n                        if (_didIteratorError10) {\n                          throw _iteratorError10;\n                        }\n                      }\n                    }\n                  }\n                }\n              } catch (err) {\n                _didIteratorError9 = true;\n                _iteratorError9 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion9 && _iterator9[\"return\"]) {\n                    _iterator9[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError9) {\n                    throw _iteratorError9;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8[\"return\"]) {\n                _iterator8[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n\n          _this.playNextTurn = _this.makeFourthMove;\n        }; //first check if computer is moving center\n\n\n        if (this.centerParttern) {\n          if (this.winningPoints !== undefined && !arrayHas(hm, this.winningPoints[0])) {\n            this.makeMOve(this.winningPoints[0]);\n            this.win();\n            return;\n          }\n\n          if (this.winningPoints !== undefined && arrayHas(hm, this.winningPoints[0])) {\n            var _iteratorNormalCompletion11 = true;\n            var _didIteratorError11 = false;\n            var _iteratorError11 = undefined;\n\n            try {\n              for (var _iterator11 = Object.keys(gameGrid)[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n                var grid = _step11.value;\n                var _iteratorNormalCompletion12 = true;\n                var _didIteratorError12 = false;\n                var _iteratorError12 = undefined;\n\n                try {\n                  for (var _iterator12 = gameGrid[grid][Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n                    var line = _step12.value;\n\n                    if (arrayHas(line, hm)) {\n                      var _iteratorNormalCompletion13 = true;\n                      var _didIteratorError13 = false;\n                      var _iteratorError13 = undefined;\n\n                      try {\n                        for (var _iterator13 = line[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n                          var val = _step13.value;\n\n                          if (!arrayHas(hm, val)) {\n                            this.makeMOve(val);\n                          }\n                        }\n                      } catch (err) {\n                        _didIteratorError13 = true;\n                        _iteratorError13 = err;\n                      } finally {\n                        try {\n                          if (!_iteratorNormalCompletion13 && _iterator13[\"return\"]) {\n                            _iterator13[\"return\"]();\n                          }\n                        } finally {\n                          if (_didIteratorError13) {\n                            throw _iteratorError13;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError12 = true;\n                  _iteratorError12 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion12 && _iterator12[\"return\"]) {\n                      _iterator12[\"return\"]();\n                    }\n                  } finally {\n                    if (_didIteratorError12) {\n                      throw _iteratorError12;\n                    }\n                  }\n                }\n              } // the above code has created two_way_points\n              // empty and reset the existing winningpoints\n\n            } catch (err) {\n              _didIteratorError11 = true;\n              _iteratorError11 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion11 && _iterator11[\"return\"]) {\n                  _iterator11[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError11) {\n                  throw _iteratorError11;\n                }\n              }\n            }\n\n            this.winningPoints = [];\n            var _iteratorNormalCompletion14 = true;\n            var _didIteratorError14 = false;\n            var _iteratorError14 = undefined;\n\n            try {\n              for (var _iterator14 = Object.keys(gameGrid)[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n                var grid = _step14.value;\n                var _iteratorNormalCompletion15 = true;\n                var _didIteratorError15 = false;\n                var _iteratorError15 = undefined;\n\n                try {\n                  for (var _iterator15 = gameGrid[grid][Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n                    var line = _step15.value;\n\n                    if (arrayHas(line, tm[2])) {\n                      var _iteratorNormalCompletion16 = true;\n                      var _didIteratorError16 = false;\n                      var _iteratorError16 = undefined;\n\n                      try {\n                        for (var _iterator16 = line[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n                          var val = _step16.value;\n\n                          if (!arrayHas(tm, val) && !arrayHas(hm, val)) {\n                            this.winningPoints.push(val);\n                          }\n                        }\n                      } catch (err) {\n                        _didIteratorError16 = true;\n                        _iteratorError16 = err;\n                      } finally {\n                        try {\n                          if (!_iteratorNormalCompletion16 && _iterator16[\"return\"]) {\n                            _iterator16[\"return\"]();\n                          }\n                        } finally {\n                          if (_didIteratorError16) {\n                            throw _iteratorError16;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError15 = true;\n                  _iteratorError15 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion15 && _iterator15[\"return\"]) {\n                      _iterator15[\"return\"]();\n                    }\n                  } finally {\n                    if (_didIteratorError15) {\n                      throw _iteratorError15;\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError14 = true;\n              _iteratorError14 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion14 && _iterator14[\"return\"]) {\n                  _iterator14[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError14) {\n                  throw _iteratorError14;\n                }\n              }\n            }\n\n            this.playNextTurn = this.makeFourthMove;\n            return false;\n          } // gotten this far? human's playing smart\n          // human's played one of my desired gamePoints in his first move\n          // let's see what he's upto\n          // first see if he's playing on one line,\n          // then block the point he hasn't played yet\n\n\n          var _iteratorNormalCompletion17 = true;\n          var _didIteratorError17 = false;\n          var _iteratorError17 = undefined;\n\n          try {\n            gameGridLoop: for (var _iterator17 = Object.keys(gameGrid)[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n              var grid = _step17.value;\n              var _iteratorNormalCompletion18 = true;\n              var _didIteratorError18 = false;\n              var _iteratorError18 = undefined;\n\n              try {\n                for (var _iterator18 = gameGrid[grid][Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n                  var line = _step18.value;\n\n                  if (arrayHas(line, hm)) {\n                    var _iteratorNormalCompletion19 = true;\n                    var _didIteratorError19 = false;\n                    var _iteratorError19 = undefined;\n\n                    try {\n                      for (var _iterator19 = line[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n                        var val = _step19.value;\n\n                        if (!arrayHas(hm, val)) {\n                          this.makeMOve(val); // hmm we've just created a two-way or a one-way point\n                          // set it up for the FourthMove\n\n                          setWinnigPoints();\n                          return false;\n                        }\n                      }\n                    } catch (err) {\n                      _didIteratorError19 = true;\n                      _iteratorError19 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion19 && _iterator19[\"return\"]) {\n                          _iterator19[\"return\"]();\n                        }\n                      } finally {\n                        if (_didIteratorError19) {\n                          throw _iteratorError19;\n                        }\n                      }\n                    }\n                  }\n                }\n              } catch (err) {\n                _didIteratorError18 = true;\n                _iteratorError18 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion18 && _iterator18[\"return\"]) {\n                    _iterator18[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError18) {\n                    throw _iteratorError18;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError17 = true;\n            _iteratorError17 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion17 && _iterator17[\"return\"]) {\n                _iterator17[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError17) {\n                throw _iteratorError17;\n              }\n            }\n          } // else, find two lines he's not but we've played from\n          // then find and play the common point between the two lines\n          // that would set a two-way-points\n\n\n          var computer_only_lines = [];\n          var _iteratorNormalCompletion20 = true;\n          var _didIteratorError20 = false;\n          var _iteratorError20 = undefined;\n\n          try {\n            for (var _iterator20 = Object.keys(gameGrid)[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n              var grid = _step20.value;\n              var _iteratorNormalCompletion21 = true;\n              var _didIteratorError21 = false;\n              var _iteratorError21 = undefined;\n\n              try {\n                for (var _iterator21 = gameGrid[grid][Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n                  var line = _step21.value;\n\n                  if ((arrayHas(line, tm[0]) || arrayHas(line, tm[1])) && !arrayHas(line, hm[0]) && !arrayHas(line, hm[1])) {\n                    computer_only_lines.push(line);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError21 = true;\n                _iteratorError21 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion21 && _iterator21[\"return\"]) {\n                    _iterator21[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError21) {\n                    throw _iteratorError21;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError20 = true;\n            _iteratorError20 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion20 && _iterator20[\"return\"]) {\n                _iterator20[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError20) {\n                throw _iteratorError20;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion22 = true;\n          var _didIteratorError22 = false;\n          var _iteratorError22 = undefined;\n\n          try {\n            for (var _iterator22 = computer_only_lines[0][Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n              var val = _step22.value;\n\n              if (val !== 4 && (arrayHas(computer_only_lines[1], val) || arrayHas(computer_only_lines[2], val))) {\n                this.makeMOve(val);\n                setWinnigPoints();\n                return false;\n              }\n            }\n          } catch (err) {\n            _didIteratorError22 = true;\n            _iteratorError22 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion22 && _iterator22[\"return\"]) {\n                _iterator22[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError22) {\n                throw _iteratorError22;\n              }\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion23 = true;\n        var _didIteratorError23 = false;\n        var _iteratorError23 = undefined;\n\n        try {\n          for (var _iterator23 = thirdMoveData[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {\n            var data = _step23.value;\n\n            if (arrayHas(tm, data.computerPlayed)) {\n              if (data.secondMoveData.humanIsMOvingCenter) {\n                var blockedPoint = this.blockHumanCenterMove(); // set 'two_way' winningPoints for computer's fourth move\n\n                var _iteratorNormalCompletion24 = true;\n                var _didIteratorError24 = false;\n                var _iteratorError24 = undefined;\n\n                try {\n                  for (var _iterator24 = this.fourthWinningOptions[Symbol.iterator](), _step24; !(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done); _iteratorNormalCompletion24 = true) {\n                    var option = _step24.value;\n\n                    if (option.blockedPoint === blockedPoint) {\n                      this.winningPoints = option.winningOptions;\n                      this.playNextTurn = this.makeFourthMove;\n                      return false;\n                    }\n                  } // OR set 'one_way' winningPoint if 'two_way' failed\n                  // first determin the row/colum where computer has made two moves\n                  // then, from that row/column, set the point computer has not played\n\n                } catch (err) {\n                  _didIteratorError24 = true;\n                  _iteratorError24 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion24 && _iterator24[\"return\"]) {\n                      _iterator24[\"return\"]();\n                    }\n                  } finally {\n                    if (_didIteratorError24) {\n                      throw _iteratorError24;\n                    }\n                  }\n                }\n\n                var _iteratorNormalCompletion25 = true;\n                var _didIteratorError25 = false;\n                var _iteratorError25 = undefined;\n\n                try {\n                  for (var _iterator25 = Object.keys(gameGrid)[Symbol.iterator](), _step25; !(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done); _iteratorNormalCompletion25 = true) {\n                    var grid = _step25.value;\n                    var _iteratorNormalCompletion26 = true;\n                    var _didIteratorError26 = false;\n                    var _iteratorError26 = undefined;\n\n                    try {\n                      for (var _iterator26 = gameGrid[grid][Symbol.iterator](), _step26; !(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done); _iteratorNormalCompletion26 = true) {\n                        var line = _step26.value;\n\n                        if (arrayHas(line, [blockedPoint, tm[0]]) || arrayHas(line, [blockedPoint, tm[1]])) {\n                          var _iteratorNormalCompletion27 = true;\n                          var _didIteratorError27 = false;\n                          var _iteratorError27 = undefined;\n\n                          try {\n                            for (var _iterator27 = line[Symbol.iterator](), _step27; !(_iteratorNormalCompletion27 = (_step27 = _iterator27.next()).done); _iteratorNormalCompletion27 = true) {\n                              var val = _step27.value;\n\n                              if (!arrayHas(tm, val)) {\n                                this.winningPoints = [val];\n                              }\n                            }\n                          } catch (err) {\n                            _didIteratorError27 = true;\n                            _iteratorError27 = err;\n                          } finally {\n                            try {\n                              if (!_iteratorNormalCompletion27 && _iterator27[\"return\"]) {\n                                _iterator27[\"return\"]();\n                              }\n                            } finally {\n                              if (_didIteratorError27) {\n                                throw _iteratorError27;\n                              }\n                            }\n                          }\n                        }\n                      }\n                    } catch (err) {\n                      _didIteratorError26 = true;\n                      _iteratorError26 = err;\n                    } finally {\n                      try {\n                        if (!_iteratorNormalCompletion26 && _iterator26[\"return\"]) {\n                          _iterator26[\"return\"]();\n                        }\n                      } finally {\n                        if (_didIteratorError26) {\n                          throw _iteratorError26;\n                        }\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError25 = true;\n                  _iteratorError25 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion25 && _iterator25[\"return\"]) {\n                      _iterator25[\"return\"]();\n                    }\n                  } finally {\n                    if (_didIteratorError25) {\n                      throw _iteratorError25;\n                    }\n                  }\n                }\n\n                this.playNextTurn = this.makeFourthMove;\n                return false;\n              }\n\n              if (!arrayHas(hm, data.secondMoveData.winningPoint)) {\n                this.makeMOve(data.secondMoveData.winningPoint);\n                this.win();\n                return;\n              }\n\n              var _iteratorNormalCompletion28 = true;\n              var _didIteratorError28 = false;\n              var _iteratorError28 = undefined;\n\n              try {\n                for (var _iterator28 = data.secondMoveData.thirdMoveOptions[Symbol.iterator](), _step28; !(_iteratorNormalCompletion28 = (_step28 = _iterator28.next()).done); _iteratorNormalCompletion28 = true) {\n                  var option = _step28.value;\n                  var opt = option.opt;\n\n                  var _option$goals = _slicedToArray(option.goals, 2);\n\n                  var goal1 = _option$goals[0];\n                  var goal2 = _option$goals[1];\n\n                  if (!arrayHas(hm, opt) && !arrayHas(hm, goal1) && !arrayHas(hm, goal2)) {\n                    this.makeMOve(opt);\n                    this.winningPoints = option.goals;\n                    this.playNextTurn = this.makeFourthMove;\n                    return;\n                  }\n                }\n              } catch (err) {\n                _didIteratorError28 = true;\n                _iteratorError28 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion28 && _iterator28[\"return\"]) {\n                    _iterator28[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError28) {\n                    throw _iteratorError28;\n                  }\n                }\n              }\n\n              this.makeMOve(data.secondMoveData.humanWinnngPoint);\n              this.playNextTurn = this.makeFourthMove;\n              return false;\n            }\n          }\n        } catch (err) {\n          _didIteratorError23 = true;\n          _iteratorError23 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion23 && _iterator23[\"return\"]) {\n              _iterator23[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError23) {\n              throw _iteratorError23;\n            }\n          }\n        }\n      },\n      makeFourthMove: function makeFourthMove() {\n        var hm = human.moves,\n            tm = this.moves;\n\n        if (this.winningPoints) {\n          var _iteratorNormalCompletion29 = true;\n          var _didIteratorError29 = false;\n          var _iteratorError29 = undefined;\n\n          try {\n            for (var _iterator29 = this.winningPoints[Symbol.iterator](), _step29; !(_iteratorNormalCompletion29 = (_step29 = _iterator29.next()).done); _iteratorNormalCompletion29 = true) {\n              var wagepoint = _step29.value;\n\n              if (!arrayHas(hm, wagepoint)) {\n                this.makeMOve(wagepoint);\n                this.win();\n                return;\n              }\n            }\n          } catch (err) {\n            _didIteratorError29 = true;\n            _iteratorError29 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion29 && _iterator29[\"return\"]) {\n                _iterator29[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError29) {\n                throw _iteratorError29;\n              }\n            }\n          }\n        }\n\n        if (this.centerParttern) {\n          var _iteratorNormalCompletion30 = true;\n          var _didIteratorError30 = false;\n          var _iteratorError30 = undefined;\n\n          try {\n            gameGridSecondLoop: for (var _iterator30 = Object.keys(gameGrid)[Symbol.iterator](), _step30; !(_iteratorNormalCompletion30 = (_step30 = _iterator30.next()).done); _iteratorNormalCompletion30 = true) {\n              var grid = _step30.value;\n              var _iteratorNormalCompletion31 = true;\n              var _didIteratorError31 = false;\n              var _iteratorError31 = undefined;\n\n              try {\n                for (var _iterator31 = gameGrid[grid][Symbol.iterator](), _step31; !(_iteratorNormalCompletion31 = (_step31 = _iterator31.next()).done); _iteratorNormalCompletion31 = true) {\n                  var line = _step31.value;\n\n                  if (arrayHas(line, 4) && !arrayHas(hm, line[0]) && !arrayHas(hm, line[2]) && !arrayHas(tm, line[0]) && !arrayHas(tm, line[2])) {\n                    var randomPoint = undefined,\n                        foundPoint = undefined;\n\n                    while (!foundPoint) {\n                      randomPoint = Math.round(Math.random() * (line.length - 1));\n\n                      if (randomPoint !== 1) {\n                        foundPoint = true;\n                      }\n                    }\n\n                    this.makeMOve(line[randomPoint]);\n                    this.playNextTurn = this.makeFifthMove;\n                    this.winningPoints = [];\n                    var wp = line[randomPoint] === line[0] ? line[2] : line[0];\n                    this.winningPoints = [wp];\n                    return;\n                  }\n                }\n              } catch (err) {\n                _didIteratorError31 = true;\n                _iteratorError31 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion31 && _iterator31[\"return\"]) {\n                    _iterator31[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError31) {\n                    throw _iteratorError31;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError30 = true;\n            _iteratorError30 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion30 && _iterator30[\"return\"]) {\n                _iterator30[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError30) {\n                throw _iteratorError30;\n              }\n            }\n          }\n        } // if no winningPoints it either means human has blockd center\n        // or human has played stupid\n        // try to blockHumanCenterMove\n        // if blockHumanCenterMove fail, find a row/column that computer\n        // has played a point from it and it still has 2 free spaces\n\n\n        if (!this.blockHumanCenterMove(this.makeFifthMove)) {\n          var _iteratorNormalCompletion32 = true;\n          var _didIteratorError32 = false;\n          var _iteratorError32 = undefined;\n\n          try {\n            gameGridLoop: for (var _iterator32 = Object.keys(gameGrid)[Symbol.iterator](), _step32; !(_iteratorNormalCompletion32 = (_step32 = _iterator32.next()).done); _iteratorNormalCompletion32 = true) {\n              var grid = _step32.value;\n              var _iteratorNormalCompletion33 = true;\n              var _didIteratorError33 = false;\n              var _iteratorError33 = undefined;\n\n              try {\n                gridLineLoop: for (var _iterator33 = gameGrid[grid][Symbol.iterator](), _step33; !(_iteratorNormalCompletion33 = (_step33 = _iterator33.next()).done); _iteratorNormalCompletion33 = true) {\n                  var line = _step33.value;\n                  var playedPoints = 0,\n                      freePoint = undefined;\n                  var _iteratorNormalCompletion34 = true;\n                  var _didIteratorError34 = false;\n                  var _iteratorError34 = undefined;\n\n                  try {\n                    lineLoop: for (var _iterator34 = line[Symbol.iterator](), _step34; !(_iteratorNormalCompletion34 = (_step34 = _iterator34.next()).done); _iteratorNormalCompletion34 = true) {\n                      var val = _step34.value;\n\n                      if (arrayHas(hm, val)) {\n                        continue gridLineLoop;\n                      }\n\n                      if (arrayHas(computer.moves, val)) {\n                        playedPoints += 1;\n                      } else if (freePoint === undefined) {\n                        freePoint = val;\n                      }\n\n                      if (playedPoints > 1) {\n                        continue gridLineLoop;\n                      }\n                    }\n                  } catch (err) {\n                    _didIteratorError34 = true;\n                    _iteratorError34 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion34 && _iterator34[\"return\"]) {\n                        _iterator34[\"return\"]();\n                      }\n                    } finally {\n                      if (_didIteratorError34) {\n                        throw _iteratorError34;\n                      }\n                    }\n                  }\n\n                  if (freePoint !== undefined) {\n                    computer.makeMOve(freePoint);\n                    this.playNextTurn = this.makeFifthMove;\n                    break gameGridLoop;\n                  }\n                }\n              } catch (err) {\n                _didIteratorError33 = true;\n                _iteratorError33 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion33 && _iterator33[\"return\"]) {\n                    _iterator33[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError33) {\n                    throw _iteratorError33;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError32 = true;\n            _iteratorError32 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion32 && _iterator32[\"return\"]) {\n                _iterator32[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError32) {\n                throw _iteratorError32;\n              }\n            }\n          }\n        } // set winningpoint for computer' fifth move\n        // find a row/colums that computer has played 2 points from it\n\n\n        var _iteratorNormalCompletion35 = true;\n        var _didIteratorError35 = false;\n        var _iteratorError35 = undefined;\n\n        try {\n          gameGridSecondLoop: for (var _iterator35 = Object.keys(gameGrid)[Symbol.iterator](), _step35; !(_iteratorNormalCompletion35 = (_step35 = _iterator35.next()).done); _iteratorNormalCompletion35 = true) {\n            var grid = _step35.value;\n            var _iteratorNormalCompletion36 = true;\n            var _didIteratorError36 = false;\n            var _iteratorError36 = undefined;\n\n            try {\n              gridLineSecondLoop: for (var _iterator36 = gameGrid[grid][Symbol.iterator](), _step36; !(_iteratorNormalCompletion36 = (_step36 = _iterator36.next()).done); _iteratorNormalCompletion36 = true) {\n                var line = _step36.value;\n                var playedPoints = 0,\n                    freePoint = undefined;\n                var _iteratorNormalCompletion37 = true;\n                var _didIteratorError37 = false;\n                var _iteratorError37 = undefined;\n\n                try {\n                  lineSecondLoop: for (var _iterator37 = line[Symbol.iterator](), _step37; !(_iteratorNormalCompletion37 = (_step37 = _iterator37.next()).done); _iteratorNormalCompletion37 = true) {\n                    var val = _step37.value;\n\n                    if (arrayHas(human.moves, val)) {\n                      continue gridLineSecondLoop;\n                    }\n\n                    if (arrayHas(this.moves, val)) {\n                      playedPoints += 1;\n                    } else {\n                      freePoint = val;\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError37 = true;\n                  _iteratorError37 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion37 && _iterator37[\"return\"]) {\n                      _iterator37[\"return\"]();\n                    }\n                  } finally {\n                    if (_didIteratorError37) {\n                      throw _iteratorError37;\n                    }\n                  }\n                }\n\n                if (freePoint !== undefined && playedPoints === 2) {\n                  this.winningPoints = [freePoint];\n                  break gameGridSecondLoop;\n                }\n              }\n            } catch (err) {\n              _didIteratorError36 = true;\n              _iteratorError36 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion36 && _iterator36[\"return\"]) {\n                  _iterator36[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError36) {\n                  throw _iteratorError36;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError35 = true;\n          _iteratorError35 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion35 && _iterator35[\"return\"]) {\n              _iterator35[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError35) {\n              throw _iteratorError35;\n            }\n          }\n        }\n      },\n      makeFifthMove: function makeFifthMove() {\n        if (this.winningPoints) {\n          var _iteratorNormalCompletion38 = true;\n          var _didIteratorError38 = false;\n          var _iteratorError38 = undefined;\n\n          try {\n            for (var _iterator38 = this.winningPoints[Symbol.iterator](), _step38; !(_iteratorNormalCompletion38 = (_step38 = _iterator38.next()).done); _iteratorNormalCompletion38 = true) {\n              var wagepoint = _step38.value;\n\n              if (!arrayHas(human.moves, wagepoint)) {\n                this.makeMOve(wagepoint);\n                this.win();\n                return;\n              }\n            }\n          } catch (err) {\n            _didIteratorError38 = true;\n            _iteratorError38 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion38 && _iterator38[\"return\"]) {\n                _iterator38[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError38) {\n                throw _iteratorError38;\n              }\n            }\n          }\n        }\n\n        if (arrayHas(human.moves, computer.winningPoints)) {\n          var _iteratorNormalCompletion39 = true;\n          var _didIteratorError39 = false;\n          var _iteratorError39 = undefined;\n\n          try {\n            for (var _iterator39 = Object.keys(gameGrid)[Symbol.iterator](), _step39; !(_iteratorNormalCompletion39 = (_step39 = _iterator39.next()).done); _iteratorNormalCompletion39 = true) {\n              var grid = _step39.value;\n              var _iteratorNormalCompletion40 = true;\n              var _didIteratorError40 = false;\n              var _iteratorError40 = undefined;\n\n              try {\n                for (var _iterator40 = gameGrid[grid][Symbol.iterator](), _step40; !(_iteratorNormalCompletion40 = (_step40 = _iterator40.next()).done); _iteratorNormalCompletion40 = true) {\n                  var line = _step40.value;\n                  var _iteratorNormalCompletion41 = true;\n                  var _didIteratorError41 = false;\n                  var _iteratorError41 = undefined;\n\n                  try {\n                    for (var _iterator41 = line[Symbol.iterator](), _step41; !(_iteratorNormalCompletion41 = (_step41 = _iterator41.next()).done); _iteratorNormalCompletion41 = true) {\n                      var val = _step41.value;\n\n                      if (!arrayHas(human.moves, val) && !arrayHas(computer.moves, val)) {\n                        computer.makeMOve(val);\n                        restartGame();\n                        return false;\n                      }\n                    }\n                  } catch (err) {\n                    _didIteratorError41 = true;\n                    _iteratorError41 = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion41 && _iterator41[\"return\"]) {\n                        _iterator41[\"return\"]();\n                      }\n                    } finally {\n                      if (_didIteratorError41) {\n                        throw _iteratorError41;\n                      }\n                    }\n                  }\n                }\n              } catch (err) {\n                _didIteratorError40 = true;\n                _iteratorError40 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion40 && _iterator40[\"return\"]) {\n                    _iterator40[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError40) {\n                    throw _iteratorError40;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError39 = true;\n            _iteratorError39 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion39 && _iterator39[\"return\"]) {\n                _iterator39[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError39) {\n                throw _iteratorError39;\n              }\n            }\n          }\n        }\n\n        computer.makeMOve(computer.winningPoints);\n        computer.win();\n      },\n      blockHumanCenterMove: function blockHumanCenterMove(nextTurn) {\n        //human has played the center box\n        //determine human's winning plan and make computer's next move\n        var hm = human.moves,\n            cm = this.moves,\n            lastGame = gamePoints.length - 1;\n        var _iteratorNormalCompletion42 = true;\n        var _didIteratorError42 = false;\n        var _iteratorError42 = undefined;\n\n        try {\n          for (var _iterator42 = gamePoints[Symbol.iterator](), _step42; !(_iteratorNormalCompletion42 = (_step42 = _iterator42.next()).done); _iteratorNormalCompletion42 = true) {\n            var game = _step42.value;\n\n            if (game !== 4 && arrayHas(hm, game) && !arrayHas(cm, lastGame)) {\n              this.makeMOve(lastGame);\n\n              if (nextTurn) {\n                this.playNextTurn = nextTurn;\n              }\n\n              return lastGame;\n            }\n\n            lastGame -= 1;\n          }\n        } catch (err) {\n          _didIteratorError42 = true;\n          _iteratorError42 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion42 && _iterator42[\"return\"]) {\n              _iterator42[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError42) {\n              throw _iteratorError42;\n            }\n          }\n        }\n\n        return false;\n      },\n      win: function win() {\n        console.log('computer wins!!!');\n        var winningPoints;\n        var _iteratorNormalCompletion43 = true;\n        var _didIteratorError43 = false;\n        var _iteratorError43 = undefined;\n\n        try {\n          for (var _iterator43 = Object.keys(gameGrid)[Symbol.iterator](), _step43; !(_iteratorNormalCompletion43 = (_step43 = _iterator43.next()).done); _iteratorNormalCompletion43 = true) {\n            var grid = _step43.value;\n            var _iteratorNormalCompletion44 = true;\n            var _didIteratorError44 = false;\n            var _iteratorError44 = undefined;\n\n            try {\n              gridLineLoop: for (var _iterator44 = gameGrid[grid][Symbol.iterator](), _step44; !(_iteratorNormalCompletion44 = (_step44 = _iterator44.next()).done); _iteratorNormalCompletion44 = true) {\n                var line = _step44.value;\n                var _iteratorNormalCompletion45 = true;\n                var _didIteratorError45 = false;\n                var _iteratorError45 = undefined;\n\n                try {\n                  for (var _iterator45 = line[Symbol.iterator](), _step45; !(_iteratorNormalCompletion45 = (_step45 = _iterator45.next()).done); _iteratorNormalCompletion45 = true) {\n                    var val = _step45.value;\n\n                    if (!arrayHas(this.moves, val)) {\n                      continue gridLineLoop;\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError45 = true;\n                  _iteratorError45 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion45 && _iterator45[\"return\"]) {\n                      _iterator45[\"return\"]();\n                    }\n                  } finally {\n                    if (_didIteratorError45) {\n                      throw _iteratorError45;\n                    }\n                  }\n                }\n\n                winningPoints = line;\n              }\n            } catch (err) {\n              _didIteratorError44 = true;\n              _iteratorError44 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion44 && _iterator44[\"return\"]) {\n                  _iterator44[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError44) {\n                  throw _iteratorError44;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError43 = true;\n          _iteratorError43 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion43 && _iterator43[\"return\"]) {\n              _iterator43[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError43) {\n              throw _iteratorError43;\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion46 = true;\n        var _didIteratorError46 = false;\n        var _iteratorError46 = undefined;\n\n        try {\n          for (var _iterator46 = winningPoints[Symbol.iterator](), _step46; !(_iteratorNormalCompletion46 = (_step46 = _iterator46.next()).done); _iteratorNormalCompletion46 = true) {\n            var point = _step46.value;\n            $('#' + point).addClass('win');\n          }\n        } catch (err) {\n          _didIteratorError46 = true;\n          _iteratorError46 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion46 && _iterator46[\"return\"]) {\n              _iterator46[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError46) {\n              throw _iteratorError46;\n            }\n          }\n        }\n\n        restartGame();\n      },\n      makeMOve: function makeMOve(move) {\n        this.moves.push(move);\n        $(jQMap.$playBox[move]).children('.symbol').text(configMap.computerSymbol || 'O');\n      }\n    };\n\n    function restartGame() {\n      setTimeout(function () {\n        human.moves.length = 0;\n        computer.moves.length = 0;\n        computer.winningPoints = undefined;\n        jQMap.$playBox.removeClass('win').children('.symbol').text('');\n        computer.makeFirstMove();\n      }, 2000);\n    }\n\n    function augmentJQMap(_jQMap) {\n      if (_jQMap) {\n        Object.assign(jQMap, _jQMap);\n        return true;\n      }\n\n      jQMap.$playBox = $('.play-box');\n      jQMap.$symbolOptions = $('.symbol-option');\n    }\n\n    function initApp() {\n      augmentJQMap(); // wire events\n\n      jQMap.$symbolOptions.on('click', function () {\n        var symbol = $(this).text();\n        configMap.humanSymbol = symbol;\n        configMap.computerSymbol = symbol === 'X' ? 'O' : 'X';\n        computer.makeFirstMove();\n        jQMap.$playBox.on('click', human.play);\n      }); //initGame\n\n      $('.app-modal').modal('show');\n    }\n\n    $(initApp); // make my SublimeText think we're using jQuery and bootstrap\n    // so it would stop showing unused variable error\n\n    jQuery, bootstrap;\n  }, {\n    \"bootstrap\": 2,\n    \"jquery\": 3\n  }],\n  2: [function (require, module, exports) {\n    (function (global) {\n      ;\n      jQuery = global.jQuery = require(\"jquery\");\n      ;\n      var __browserify_shim_require__ = require;\n      (function browserifyShim(module, exports, require, define, browserify_shim__define__module__export__) {\n        'use strict';\n\n        function _instanceof(left, right) {\n          if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n            return right[Symbol.hasInstance](left);\n          } else {\n            return left instanceof right;\n          }\n        }\n\n        function _typeof(obj) {\n          return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : _typeof2(obj);\n        }\n        /*!\r\n         * Bootstrap v3.3.5 (https://getbootstrap.com)\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under the MIT license\r\n         */\n\n\n        if (typeof jQuery === 'undefined') {\n          throw new Error('Bootstrap\\'s JavaScript requires jQuery');\n        }\n\n        +function ($) {\n          'use strict';\n\n          var version = $.fn.jquery.split(' ')[0].split('.');\n\n          if (version[0] < 2 && version[1] < 9 || version[0] == 1 && version[1] == 9 && version[2] < 1) {\n            throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher');\n          }\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: transition.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#transitions\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // CSS TRANSITION SUPPORT (Shoutout: https://www.modernizr.com/)\n          // ============================================================\n          ;\n\n          function transitionEnd() {\n            var el = document.createElement('bootstrap');\n            var transEndEventNames = {\n              WebkitTransition: 'webkitTransitionEnd',\n              MozTransition: 'transitionend',\n              OTransition: 'oTransitionEnd otransitionend',\n              transition: 'transitionend'\n            };\n\n            for (var name in transEndEventNames) {\n              if (el.style[name] !== undefined) {\n                return {\n                  end: transEndEventNames[name]\n                };\n              }\n            }\n\n            return false; // explicit for ie8 (  ._.)\n          } // http://blog.alexmaccaw.com/css-transitions\n\n\n          $.fn.emulateTransitionEnd = function (duration) {\n            var called = false;\n            var $el = this;\n            $(this).one('bsTransitionEnd', function () {\n              called = true;\n            });\n\n            var callback = function callback() {\n              if (!called) $($el).trigger($.support.transition.end);\n            };\n\n            setTimeout(callback, duration);\n            return this;\n          };\n\n          $(function () {\n            $.support.transition = transitionEnd();\n            if (!$.support.transition) return;\n            $.event.special.bsTransitionEnd = {\n              bindType: $.support.transition.end,\n              delegateType: $.support.transition.end,\n              handle: function handle(e) {\n                if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);\n              }\n            };\n          });\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: alert.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#alerts\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // ALERT CLASS DEFINITION\n          // ======================\n          ;\n\n          var dismiss = '[data-dismiss=\"alert\"]';\n\n          var Alert = function Alert(el) {\n            $(el).on('click', dismiss, this.close);\n          };\n\n          Alert.VERSION = '3.3.5';\n          Alert.TRANSITION_DURATION = 150;\n\n          Alert.prototype.close = function (e) {\n            var $this = $(this);\n            var selector = $this.attr('data-target');\n\n            if (!selector) {\n              selector = $this.attr('href');\n              selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n            }\n\n            var $parent = $(selector);\n            if (e) e.preventDefault();\n\n            if (!$parent.length) {\n              $parent = $this.closest('.alert');\n            }\n\n            $parent.trigger(e = $.Event('close.bs.alert'));\n            if (e.isDefaultPrevented()) return;\n            $parent.removeClass('in');\n\n            function removeElement() {\n              // detach from parent, fire event then clean up data\n              $parent.detach().trigger('closed.bs.alert').remove();\n            }\n\n            $.support.transition && $parent.hasClass('fade') ? $parent.one('bsTransitionEnd', removeElement).emulateTransitionEnd(Alert.TRANSITION_DURATION) : removeElement();\n          }; // ALERT PLUGIN DEFINITION\n          // =======================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.alert');\n              if (!data) $this.data('bs.alert', data = new Alert(this));\n              if (typeof option == 'string') data[option].call($this);\n            });\n          }\n\n          var old = $.fn.alert;\n          $.fn.alert = Plugin;\n          $.fn.alert.Constructor = Alert; // ALERT NO CONFLICT\n          // =================\n\n          $.fn.alert.noConflict = function () {\n            $.fn.alert = old;\n            return this;\n          }; // ALERT DATA-API\n          // ==============\n\n\n          $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close);\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: button.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#buttons\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // BUTTON PUBLIC CLASS DEFINITION\n          // ==============================\n          ;\n\n          var Button = function Button(element, options) {\n            this.$element = $(element);\n            this.options = $.extend({}, Button.DEFAULTS, options);\n            this.isLoading = false;\n          };\n\n          Button.VERSION = '3.3.5';\n          Button.DEFAULTS = {\n            loadingText: 'loading...'\n          };\n\n          Button.prototype.setState = function (state) {\n            var d = 'disabled';\n            var $el = this.$element;\n            var val = $el.is('input') ? 'val' : 'html';\n            var data = $el.data();\n            state += 'Text';\n            if (data.resetText == null) $el.data('resetText', $el[val]()); // push to event loop to allow forms to submit\n\n            setTimeout($.proxy(function () {\n              $el[val](data[state] == null ? this.options[state] : data[state]);\n\n              if (state == 'loadingText') {\n                this.isLoading = true;\n                $el.addClass(d).attr(d, d);\n              } else if (this.isLoading) {\n                this.isLoading = false;\n                $el.removeClass(d).removeAttr(d);\n              }\n            }, this), 0);\n          };\n\n          Button.prototype.toggle = function () {\n            var changed = true;\n            var $parent = this.$element.closest('[data-toggle=\"buttons\"]');\n\n            if ($parent.length) {\n              var $input = this.$element.find('input');\n\n              if ($input.prop('type') == 'radio') {\n                if ($input.prop('checked')) changed = false;\n                $parent.find('.active').removeClass('active');\n                this.$element.addClass('active');\n              } else if ($input.prop('type') == 'checkbox') {\n                if ($input.prop('checked') !== this.$element.hasClass('active')) changed = false;\n                this.$element.toggleClass('active');\n              }\n\n              $input.prop('checked', this.$element.hasClass('active'));\n              if (changed) $input.trigger('change');\n            } else {\n              this.$element.attr('aria-pressed', !this.$element.hasClass('active'));\n              this.$element.toggleClass('active');\n            }\n          }; // BUTTON PLUGIN DEFINITION\n          // ========================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.button');\n              var options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option;\n              if (!data) $this.data('bs.button', data = new Button(this, options));\n              if (option == 'toggle') data.toggle();else if (option) data.setState(option);\n            });\n          }\n\n          var old = $.fn.button;\n          $.fn.button = Plugin;\n          $.fn.button.Constructor = Button; // BUTTON NO CONFLICT\n          // ==================\n\n          $.fn.button.noConflict = function () {\n            $.fn.button = old;\n            return this;\n          }; // BUTTON DATA-API\n          // ===============\n\n\n          $(document).on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n            var $btn = $(e.target);\n            if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn');\n            Plugin.call($btn, 'toggle');\n            if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault();\n          }).on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n            $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type));\n          });\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: carousel.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#carousel\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // CAROUSEL CLASS DEFINITION\n          // =========================\n          ;\n\n          var Carousel = function Carousel(element, options) {\n            this.$element = $(element);\n            this.$indicators = this.$element.find('.carousel-indicators');\n            this.options = options;\n            this.paused = null;\n            this.sliding = null;\n            this.interval = null;\n            this.$active = null;\n            this.$items = null;\n            this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this));\n            this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element.on('mouseenter.bs.carousel', $.proxy(this.pause, this)).on('mouseleave.bs.carousel', $.proxy(this.cycle, this));\n          };\n\n          Carousel.VERSION = '3.3.5';\n          Carousel.TRANSITION_DURATION = 600;\n          Carousel.DEFAULTS = {\n            interval: 5000,\n            pause: 'hover',\n            wrap: true,\n            keyboard: true\n          };\n\n          Carousel.prototype.keydown = function (e) {\n            if (/input|textarea/i.test(e.target.tagName)) return;\n\n            switch (e.which) {\n              case 37:\n                this.prev();\n                break;\n\n              case 39:\n                this.next();\n                break;\n\n              default:\n                return;\n            }\n\n            e.preventDefault();\n          };\n\n          Carousel.prototype.cycle = function (e) {\n            e || (this.paused = false);\n            this.interval && clearInterval(this.interval);\n            this.options.interval && !this.paused && (this.interval = setInterval($.proxy(this.next, this), this.options.interval));\n            return this;\n          };\n\n          Carousel.prototype.getItemIndex = function (item) {\n            this.$items = item.parent().children('.item');\n            return this.$items.index(item || this.$active);\n          };\n\n          Carousel.prototype.getItemForDirection = function (direction, active) {\n            var activeIndex = this.getItemIndex(active);\n            var willWrap = direction == 'prev' && activeIndex === 0 || direction == 'next' && activeIndex == this.$items.length - 1;\n            if (willWrap && !this.options.wrap) return active;\n            var delta = direction == 'prev' ? -1 : 1;\n            var itemIndex = (activeIndex + delta) % this.$items.length;\n            return this.$items.eq(itemIndex);\n          };\n\n          Carousel.prototype.to = function (pos) {\n            var that = this;\n            var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'));\n            if (pos > this.$items.length - 1 || pos < 0) return;\n            if (this.sliding) return this.$element.one('slid.bs.carousel', function () {\n              that.to(pos);\n            }); // yes, \"slid\"\n\n            if (activeIndex == pos) return this.pause().cycle();\n            return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos));\n          };\n\n          Carousel.prototype.pause = function (e) {\n            e || (this.paused = true);\n\n            if (this.$element.find('.next, .prev').length && $.support.transition) {\n              this.$element.trigger($.support.transition.end);\n              this.cycle(true);\n            }\n\n            this.interval = clearInterval(this.interval);\n            return this;\n          };\n\n          Carousel.prototype.next = function () {\n            if (this.sliding) return;\n            return this.slide('next');\n          };\n\n          Carousel.prototype.prev = function () {\n            if (this.sliding) return;\n            return this.slide('prev');\n          };\n\n          Carousel.prototype.slide = function (type, next) {\n            var $active = this.$element.find('.item.active');\n            var $next = next || this.getItemForDirection(type, $active);\n            var isCycling = this.interval;\n            var direction = type == 'next' ? 'left' : 'right';\n            var that = this;\n            if ($next.hasClass('active')) return this.sliding = false;\n            var relatedTarget = $next[0];\n            var slideEvent = $.Event('slide.bs.carousel', {\n              relatedTarget: relatedTarget,\n              direction: direction\n            });\n            this.$element.trigger(slideEvent);\n            if (slideEvent.isDefaultPrevented()) return;\n            this.sliding = true;\n            isCycling && this.pause();\n\n            if (this.$indicators.length) {\n              this.$indicators.find('.active').removeClass('active');\n              var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)]);\n              $nextIndicator && $nextIndicator.addClass('active');\n            }\n\n            var slidEvent = $.Event('slid.bs.carousel', {\n              relatedTarget: relatedTarget,\n              direction: direction\n            }); // yes, \"slid\"\n\n            if ($.support.transition && this.$element.hasClass('slide')) {\n              $next.addClass(type);\n              $next[0].offsetWidth; // force reflow\n\n              $active.addClass(direction);\n              $next.addClass(direction);\n              $active.one('bsTransitionEnd', function () {\n                $next.removeClass([type, direction].join(' ')).addClass('active');\n                $active.removeClass(['active', direction].join(' '));\n                that.sliding = false;\n                setTimeout(function () {\n                  that.$element.trigger(slidEvent);\n                }, 0);\n              }).emulateTransitionEnd(Carousel.TRANSITION_DURATION);\n            } else {\n              $active.removeClass('active');\n              $next.addClass('active');\n              this.sliding = false;\n              this.$element.trigger(slidEvent);\n            }\n\n            isCycling && this.cycle();\n            return this;\n          }; // CAROUSEL PLUGIN DEFINITION\n          // ==========================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.carousel');\n              var options = $.extend({}, Carousel.DEFAULTS, $this.data(), (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option);\n              var action = typeof option == 'string' ? option : options.slide;\n              if (!data) $this.data('bs.carousel', data = new Carousel(this, options));\n              if (typeof option == 'number') data.to(option);else if (action) data[action]();else if (options.interval) data.pause().cycle();\n            });\n          }\n\n          var old = $.fn.carousel;\n          $.fn.carousel = Plugin;\n          $.fn.carousel.Constructor = Carousel; // CAROUSEL NO CONFLICT\n          // ====================\n\n          $.fn.carousel.noConflict = function () {\n            $.fn.carousel = old;\n            return this;\n          }; // CAROUSEL DATA-API\n          // =================\n\n\n          var clickHandler = function clickHandler(e) {\n            var href;\n            var $this = $(this);\n            var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')); // strip for ie7\n\n            if (!$target.hasClass('carousel')) return;\n            var options = $.extend({}, $target.data(), $this.data());\n            var slideIndex = $this.attr('data-slide-to');\n            if (slideIndex) options.interval = false;\n            Plugin.call($target, options);\n\n            if (slideIndex) {\n              $target.data('bs.carousel').to(slideIndex);\n            }\n\n            e.preventDefault();\n          };\n\n          $(document).on('click.bs.carousel.data-api', '[data-slide]', clickHandler).on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler);\n          $(window).on('load', function () {\n            $('[data-ride=\"carousel\"]').each(function () {\n              var $carousel = $(this);\n              Plugin.call($carousel, $carousel.data());\n            });\n          });\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: collapse.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#collapse\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // COLLAPSE PUBLIC CLASS DEFINITION\n          // ================================\n          ;\n\n          var Collapse = function Collapse(element, options) {\n            this.$element = $(element);\n            this.options = $.extend({}, Collapse.DEFAULTS, options);\n            this.$trigger = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' + '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]');\n            this.transitioning = null;\n\n            if (this.options.parent) {\n              this.$parent = this.getParent();\n            } else {\n              this.addAriaAndCollapsedClass(this.$element, this.$trigger);\n            }\n\n            if (this.options.toggle) this.toggle();\n          };\n\n          Collapse.VERSION = '3.3.5';\n          Collapse.TRANSITION_DURATION = 350;\n          Collapse.DEFAULTS = {\n            toggle: true\n          };\n\n          Collapse.prototype.dimension = function () {\n            var hasWidth = this.$element.hasClass('width');\n            return hasWidth ? 'width' : 'height';\n          };\n\n          Collapse.prototype.show = function () {\n            if (this.transitioning || this.$element.hasClass('in')) return;\n            var activesData;\n            var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing');\n\n            if (actives && actives.length) {\n              activesData = actives.data('bs.collapse');\n              if (activesData && activesData.transitioning) return;\n            }\n\n            var startEvent = $.Event('show.bs.collapse');\n            this.$element.trigger(startEvent);\n            if (startEvent.isDefaultPrevented()) return;\n\n            if (actives && actives.length) {\n              Plugin.call(actives, 'hide');\n              activesData || actives.data('bs.collapse', null);\n            }\n\n            var dimension = this.dimension();\n            this.$element.removeClass('collapse').addClass('collapsing')[dimension](0).attr('aria-expanded', true);\n            this.$trigger.removeClass('collapsed').attr('aria-expanded', true);\n            this.transitioning = 1;\n\n            var complete = function complete() {\n              this.$element.removeClass('collapsing').addClass('collapse in')[dimension]('');\n              this.transitioning = 0;\n              this.$element.trigger('shown.bs.collapse');\n            };\n\n            if (!$.support.transition) return complete.call(this);\n            var scrollSize = $.camelCase(['scroll', dimension].join('-'));\n            this.$element.one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);\n          };\n\n          Collapse.prototype.hide = function () {\n            if (this.transitioning || !this.$element.hasClass('in')) return;\n            var startEvent = $.Event('hide.bs.collapse');\n            this.$element.trigger(startEvent);\n            if (startEvent.isDefaultPrevented()) return;\n            var dimension = this.dimension();\n            this.$element[dimension](this.$element[dimension]())[0].offsetHeight;\n            this.$element.addClass('collapsing').removeClass('collapse in').attr('aria-expanded', false);\n            this.$trigger.addClass('collapsed').attr('aria-expanded', false);\n            this.transitioning = 1;\n\n            var complete = function complete() {\n              this.transitioning = 0;\n              this.$element.removeClass('collapsing').addClass('collapse').trigger('hidden.bs.collapse');\n            };\n\n            if (!$.support.transition) return complete.call(this);\n            this.$element[dimension](0).one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION);\n          };\n\n          Collapse.prototype.toggle = function () {\n            this[this.$element.hasClass('in') ? 'hide' : 'show']();\n          };\n\n          Collapse.prototype.getParent = function () {\n            return $(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]').each($.proxy(function (i, element) {\n              var $element = $(element);\n              this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element);\n            }, this)).end();\n          };\n\n          Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n            var isOpen = $element.hasClass('in');\n            $element.attr('aria-expanded', isOpen);\n            $trigger.toggleClass('collapsed', !isOpen).attr('aria-expanded', isOpen);\n          };\n\n          function getTargetFromTrigger($trigger) {\n            var href;\n            var target = $trigger.attr('data-target') || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, ''); // strip for ie7\n\n            return $(target);\n          } // COLLAPSE PLUGIN DEFINITION\n          // ==========================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.collapse');\n              var options = $.extend({}, Collapse.DEFAULTS, $this.data(), (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option);\n              if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false;\n              if (!data) $this.data('bs.collapse', data = new Collapse(this, options));\n              if (typeof option == 'string') data[option]();\n            });\n          }\n\n          var old = $.fn.collapse;\n          $.fn.collapse = Plugin;\n          $.fn.collapse.Constructor = Collapse; // COLLAPSE NO CONFLICT\n          // ====================\n\n          $.fn.collapse.noConflict = function () {\n            $.fn.collapse = old;\n            return this;\n          }; // COLLAPSE DATA-API\n          // =================\n\n\n          $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n            var $this = $(this);\n            if (!$this.attr('data-target')) e.preventDefault();\n            var $target = getTargetFromTrigger($this);\n            var data = $target.data('bs.collapse');\n            var option = data ? 'toggle' : $this.data();\n            Plugin.call($target, option);\n          });\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: dropdown.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#dropdowns\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // DROPDOWN CLASS DEFINITION\n          // =========================\n          ;\n\n          var backdrop = '.dropdown-backdrop';\n          var toggle = '[data-toggle=\"dropdown\"]';\n\n          var Dropdown = function Dropdown(element) {\n            $(element).on('click.bs.dropdown', this.toggle);\n          };\n\n          Dropdown.VERSION = '3.3.5';\n\n          function getParent($this) {\n            var selector = $this.attr('data-target');\n\n            if (!selector) {\n              selector = $this.attr('href');\n              selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n            }\n\n            var $parent = selector && $(selector);\n            return $parent && $parent.length ? $parent : $this.parent();\n          }\n\n          function clearMenus(e) {\n            if (e && e.which === 3) return;\n            $(backdrop).remove();\n            $(toggle).each(function () {\n              var $this = $(this);\n              var $parent = getParent($this);\n              var relatedTarget = {\n                relatedTarget: this\n              };\n              if (!$parent.hasClass('open')) return;\n              if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return;\n              $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget));\n              if (e.isDefaultPrevented()) return;\n              $this.attr('aria-expanded', 'false');\n              $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget);\n            });\n          }\n\n          Dropdown.prototype.toggle = function (e) {\n            var $this = $(this);\n            if ($this.is('.disabled, :disabled')) return;\n            var $parent = getParent($this);\n            var isActive = $parent.hasClass('open');\n            clearMenus();\n\n            if (!isActive) {\n              if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n                // if mobile we use a backdrop because click events don't delegate\n                $(document.createElement('div')).addClass('dropdown-backdrop').insertAfter($(this)).on('click', clearMenus);\n              }\n\n              var relatedTarget = {\n                relatedTarget: this\n              };\n              $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget));\n              if (e.isDefaultPrevented()) return;\n              $this.trigger('focus').attr('aria-expanded', 'true');\n              $parent.toggleClass('open').trigger('shown.bs.dropdown', relatedTarget);\n            }\n\n            return false;\n          };\n\n          Dropdown.prototype.keydown = function (e) {\n            if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return;\n            var $this = $(this);\n            e.preventDefault();\n            e.stopPropagation();\n            if ($this.is('.disabled, :disabled')) return;\n            var $parent = getParent($this);\n            var isActive = $parent.hasClass('open');\n\n            if (!isActive && e.which != 27 || isActive && e.which == 27) {\n              if (e.which == 27) $parent.find(toggle).trigger('focus');\n              return $this.trigger('click');\n            }\n\n            var desc = ' li:not(.disabled):visible a';\n            var $items = $parent.find('.dropdown-menu' + desc);\n            if (!$items.length) return;\n            var index = $items.index(e.target);\n            if (e.which == 38 && index > 0) index--; // up\n\n            if (e.which == 40 && index < $items.length - 1) index++; // down\n\n            if (!~index) index = 0;\n            $items.eq(index).trigger('focus');\n          }; // DROPDOWN PLUGIN DEFINITION\n          // ==========================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.dropdown');\n              if (!data) $this.data('bs.dropdown', data = new Dropdown(this));\n              if (typeof option == 'string') data[option].call($this);\n            });\n          }\n\n          var old = $.fn.dropdown;\n          $.fn.dropdown = Plugin;\n          $.fn.dropdown.Constructor = Dropdown; // DROPDOWN NO CONFLICT\n          // ====================\n\n          $.fn.dropdown.noConflict = function () {\n            $.fn.dropdown = old;\n            return this;\n          }; // APPLY TO STANDARD DROPDOWN ELEMENTS\n          // ===================================\n\n\n          $(document).on('click.bs.dropdown.data-api', clearMenus).on('click.bs.dropdown.data-api', '.dropdown form', function (e) {\n            e.stopPropagation();\n          }).on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown).on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown);\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: modal.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#modals\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // MODAL CLASS DEFINITION\n          // ======================\n          ;\n\n          var Modal = function Modal(element, options) {\n            this.options = options;\n            this.$body = $(document.body);\n            this.$element = $(element);\n            this.$dialog = this.$element.find('.modal-dialog');\n            this.$backdrop = null;\n            this.isShown = null;\n            this.originalBodyPad = null;\n            this.scrollbarWidth = 0;\n            this.ignoreBackdropClick = false;\n\n            if (this.options.remote) {\n              this.$element.find('.modal-content').load(this.options.remote, $.proxy(function () {\n                this.$element.trigger('loaded.bs.modal');\n              }, this));\n            }\n          };\n\n          Modal.VERSION = '3.3.5';\n          Modal.TRANSITION_DURATION = 300;\n          Modal.BACKDROP_TRANSITION_DURATION = 150;\n          Modal.DEFAULTS = {\n            backdrop: true,\n            keyboard: true,\n            show: true\n          };\n\n          Modal.prototype.toggle = function (_relatedTarget) {\n            return this.isShown ? this.hide() : this.show(_relatedTarget);\n          };\n\n          Modal.prototype.show = function (_relatedTarget) {\n            var that = this;\n            var e = $.Event('show.bs.modal', {\n              relatedTarget: _relatedTarget\n            });\n            this.$element.trigger(e);\n            if (this.isShown || e.isDefaultPrevented()) return;\n            this.isShown = true;\n            this.checkScrollbar();\n            this.setScrollbar();\n            this.$body.addClass('modal-open');\n            this.escape();\n            this.resize();\n            this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this));\n            this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n              that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n                if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true;\n              });\n            });\n            this.backdrop(function () {\n              var transition = $.support.transition && that.$element.hasClass('fade');\n\n              if (!that.$element.parent().length) {\n                that.$element.appendTo(that.$body); // don't move modals dom position\n              }\n\n              that.$element.show().scrollTop(0);\n              that.adjustDialog();\n\n              if (transition) {\n                that.$element[0].offsetWidth; // force reflow\n              }\n\n              that.$element.addClass('in');\n              that.enforceFocus();\n              var e = $.Event('shown.bs.modal', {\n                relatedTarget: _relatedTarget\n              });\n              transition ? that.$dialog // wait for modal to slide in\n              .one('bsTransitionEnd', function () {\n                that.$element.trigger('focus').trigger(e);\n              }).emulateTransitionEnd(Modal.TRANSITION_DURATION) : that.$element.trigger('focus').trigger(e);\n            });\n          };\n\n          Modal.prototype.hide = function (e) {\n            if (e) e.preventDefault();\n            e = $.Event('hide.bs.modal');\n            this.$element.trigger(e);\n            if (!this.isShown || e.isDefaultPrevented()) return;\n            this.isShown = false;\n            this.escape();\n            this.resize();\n            $(document).off('focusin.bs.modal');\n            this.$element.removeClass('in').off('click.dismiss.bs.modal').off('mouseup.dismiss.bs.modal');\n            this.$dialog.off('mousedown.dismiss.bs.modal');\n            $.support.transition && this.$element.hasClass('fade') ? this.$element.one('bsTransitionEnd', $.proxy(this.hideModal, this)).emulateTransitionEnd(Modal.TRANSITION_DURATION) : this.hideModal();\n          };\n\n          Modal.prototype.enforceFocus = function () {\n            $(document).off('focusin.bs.modal') // guard against infinite focus loop\n            .on('focusin.bs.modal', $.proxy(function (e) {\n              if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n                this.$element.trigger('focus');\n              }\n            }, this));\n          };\n\n          Modal.prototype.escape = function () {\n            if (this.isShown && this.options.keyboard) {\n              this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n                e.which == 27 && this.hide();\n              }, this));\n            } else if (!this.isShown) {\n              this.$element.off('keydown.dismiss.bs.modal');\n            }\n          };\n\n          Modal.prototype.resize = function () {\n            if (this.isShown) {\n              $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this));\n            } else {\n              $(window).off('resize.bs.modal');\n            }\n          };\n\n          Modal.prototype.hideModal = function () {\n            var that = this;\n            this.$element.hide();\n            this.backdrop(function () {\n              that.$body.removeClass('modal-open');\n              that.resetAdjustments();\n              that.resetScrollbar();\n              that.$element.trigger('hidden.bs.modal');\n            });\n          };\n\n          Modal.prototype.removeBackdrop = function () {\n            this.$backdrop && this.$backdrop.remove();\n            this.$backdrop = null;\n          };\n\n          Modal.prototype.backdrop = function (callback) {\n            var that = this;\n            var animate = this.$element.hasClass('fade') ? 'fade' : '';\n\n            if (this.isShown && this.options.backdrop) {\n              var doAnimate = $.support.transition && animate;\n              this.$backdrop = $(document.createElement('div')).addClass('modal-backdrop ' + animate).appendTo(this.$body);\n              this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n                if (this.ignoreBackdropClick) {\n                  this.ignoreBackdropClick = false;\n                  return;\n                }\n\n                if (e.target !== e.currentTarget) return;\n                this.options.backdrop == 'static' ? this.$element[0].focus() : this.hide();\n              }, this));\n              if (doAnimate) this.$backdrop[0].offsetWidth; // force reflow\n\n              this.$backdrop.addClass('in');\n              if (!callback) return;\n              doAnimate ? this.$backdrop.one('bsTransitionEnd', callback).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callback();\n            } else if (!this.isShown && this.$backdrop) {\n              this.$backdrop.removeClass('in');\n\n              var callbackRemove = function callbackRemove() {\n                that.removeBackdrop();\n                callback && callback();\n              };\n\n              $.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one('bsTransitionEnd', callbackRemove).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callbackRemove();\n            } else if (callback) {\n              callback();\n            }\n          }; // these following methods are used to handle overflowing modals\n\n\n          Modal.prototype.handleUpdate = function () {\n            this.adjustDialog();\n          };\n\n          Modal.prototype.adjustDialog = function () {\n            var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight;\n            this.$element.css({\n              paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n              paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n            });\n          };\n\n          Modal.prototype.resetAdjustments = function () {\n            this.$element.css({\n              paddingLeft: '',\n              paddingRight: ''\n            });\n          };\n\n          Modal.prototype.checkScrollbar = function () {\n            var fullWindowWidth = window.innerWidth;\n\n            if (!fullWindowWidth) {\n              // workaround for missing window.innerWidth in IE8\n              var documentElementRect = document.documentElement.getBoundingClientRect();\n              fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n\n            this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n            this.scrollbarWidth = this.measureScrollbar();\n          };\n\n          Modal.prototype.setScrollbar = function () {\n            var bodyPad = parseInt(this.$body.css('padding-right') || 0, 10);\n            this.originalBodyPad = document.body.style.paddingRight || '';\n            if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth);\n          };\n\n          Modal.prototype.resetScrollbar = function () {\n            this.$body.css('padding-right', this.originalBodyPad);\n          };\n\n          Modal.prototype.measureScrollbar = function () {\n            // thx walsh\n            var scrollDiv = document.createElement('div');\n            scrollDiv.className = 'modal-scrollbar-measure';\n            this.$body.append(scrollDiv);\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            this.$body[0].removeChild(scrollDiv);\n            return scrollbarWidth;\n          }; // MODAL PLUGIN DEFINITION\n          // =======================\n\n\n          function Plugin(option, _relatedTarget) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.modal');\n              var options = $.extend({}, Modal.DEFAULTS, $this.data(), (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option);\n              if (!data) $this.data('bs.modal', data = new Modal(this, options));\n              if (typeof option == 'string') data[option](_relatedTarget);else if (options.show) data.show(_relatedTarget);\n            });\n          }\n\n          var old = $.fn.modal;\n          $.fn.modal = Plugin;\n          $.fn.modal.Constructor = Modal; // MODAL NO CONFLICT\n          // =================\n\n          $.fn.modal.noConflict = function () {\n            $.fn.modal = old;\n            return this;\n          }; // MODAL DATA-API\n          // ==============\n\n\n          $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n            var $this = $(this);\n            var href = $this.attr('href');\n            var $target = $($this.attr('data-target') || href && href.replace(/.*(?=#[^\\s]+$)/, '')); // strip for ie7\n\n            var option = $target.data('bs.modal') ? 'toggle' : $.extend({\n              remote: !/#/.test(href) && href\n            }, $target.data(), $this.data());\n            if ($this.is('a')) e.preventDefault();\n            $target.one('show.bs.modal', function (showEvent) {\n              if (showEvent.isDefaultPrevented()) return; // only register focus restorer if modal will actually get shown\n\n              $target.one('hidden.bs.modal', function () {\n                $this.is(':visible') && $this.trigger('focus');\n              });\n            });\n            Plugin.call($target, option, this);\n          });\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: tooltip.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#tooltip\r\n         * Inspired by the original jQuery.tipsy by Jason Frame\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // TOOLTIP PUBLIC CLASS DEFINITION\n          // ===============================\n          ;\n\n          var Tooltip = function Tooltip(element, options) {\n            this.type = null;\n            this.options = null;\n            this.enabled = null;\n            this.timeout = null;\n            this.hoverState = null;\n            this.$element = null;\n            this.inState = null;\n            this.init('tooltip', element, options);\n          };\n\n          Tooltip.VERSION = '3.3.5';\n          Tooltip.TRANSITION_DURATION = 150;\n          Tooltip.DEFAULTS = {\n            animation: true,\n            placement: 'top',\n            selector: false,\n            template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n            trigger: 'hover focus',\n            title: '',\n            delay: 0,\n            html: false,\n            container: false,\n            viewport: {\n              selector: 'body',\n              padding: 0\n            }\n          };\n\n          Tooltip.prototype.init = function (type, element, options) {\n            this.enabled = true;\n            this.type = type;\n            this.$element = $(element);\n            this.options = this.getOptions(options);\n            this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport);\n            this.inState = {\n              click: false,\n              hover: false,\n              focus: false\n            };\n\n            if (_instanceof(this.$element[0], document.constructor) && !this.options.selector) {\n              throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!');\n            }\n\n            var triggers = this.options.trigger.split(' ');\n\n            for (var i = triggers.length; i--;) {\n              var trigger = triggers[i];\n\n              if (trigger == 'click') {\n                this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this));\n              } else if (trigger != 'manual') {\n                var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin';\n                var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';\n                this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this));\n                this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this));\n              }\n            }\n\n            this.options.selector ? this._options = $.extend({}, this.options, {\n              trigger: 'manual',\n              selector: ''\n            }) : this.fixTitle();\n          };\n\n          Tooltip.prototype.getDefaults = function () {\n            return Tooltip.DEFAULTS;\n          };\n\n          Tooltip.prototype.getOptions = function (options) {\n            options = $.extend({}, this.getDefaults(), this.$element.data(), options);\n\n            if (options.delay && typeof options.delay == 'number') {\n              options.delay = {\n                show: options.delay,\n                hide: options.delay\n              };\n            }\n\n            return options;\n          };\n\n          Tooltip.prototype.getDelegateOptions = function () {\n            var options = {};\n            var defaults = this.getDefaults();\n            this._options && $.each(this._options, function (key, value) {\n              if (defaults[key] != value) options[key] = value;\n            });\n            return options;\n          };\n\n          Tooltip.prototype.enter = function (obj) {\n            var self = _instanceof(obj, this.constructor) ? obj : $(obj.currentTarget).data('bs.' + this.type);\n\n            if (!self) {\n              self = new this.constructor(obj.currentTarget, this.getDelegateOptions());\n              $(obj.currentTarget).data('bs.' + this.type, self);\n            }\n\n            if (_instanceof(obj, $.Event)) {\n              self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true;\n            }\n\n            if (self.tip().hasClass('in') || self.hoverState == 'in') {\n              self.hoverState = 'in';\n              return;\n            }\n\n            clearTimeout(self.timeout);\n            self.hoverState = 'in';\n            if (!self.options.delay || !self.options.delay.show) return self.show();\n            self.timeout = setTimeout(function () {\n              if (self.hoverState == 'in') self.show();\n            }, self.options.delay.show);\n          };\n\n          Tooltip.prototype.isInStateTrue = function () {\n            for (var key in this.inState) {\n              if (this.inState[key]) return true;\n            }\n\n            return false;\n          };\n\n          Tooltip.prototype.leave = function (obj) {\n            var self = _instanceof(obj, this.constructor) ? obj : $(obj.currentTarget).data('bs.' + this.type);\n\n            if (!self) {\n              self = new this.constructor(obj.currentTarget, this.getDelegateOptions());\n              $(obj.currentTarget).data('bs.' + this.type, self);\n            }\n\n            if (_instanceof(obj, $.Event)) {\n              self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false;\n            }\n\n            if (self.isInStateTrue()) return;\n            clearTimeout(self.timeout);\n            self.hoverState = 'out';\n            if (!self.options.delay || !self.options.delay.hide) return self.hide();\n            self.timeout = setTimeout(function () {\n              if (self.hoverState == 'out') self.hide();\n            }, self.options.delay.hide);\n          };\n\n          Tooltip.prototype.show = function () {\n            var e = $.Event('show.bs.' + this.type);\n\n            if (this.hasContent() && this.enabled) {\n              this.$element.trigger(e);\n              var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);\n              if (e.isDefaultPrevented() || !inDom) return;\n              var that = this;\n              var $tip = this.tip();\n              var tipId = this.getUID(this.type);\n              this.setContent();\n              $tip.attr('id', tipId);\n              this.$element.attr('aria-describedby', tipId);\n              if (this.options.animation) $tip.addClass('fade');\n              var placement = typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement;\n              var autoToken = /\\s?auto?\\s?/i;\n              var autoPlace = autoToken.test(placement);\n              if (autoPlace) placement = placement.replace(autoToken, '') || 'top';\n              $tip.detach().css({\n                top: 0,\n                left: 0,\n                display: 'block'\n              }).addClass(placement).data('bs.' + this.type, this);\n              this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element);\n              this.$element.trigger('inserted.bs.' + this.type);\n              var pos = this.getPosition();\n              var actualWidth = $tip[0].offsetWidth;\n              var actualHeight = $tip[0].offsetHeight;\n\n              if (autoPlace) {\n                var orgPlacement = placement;\n                var viewportDim = this.getPosition(this.$viewport);\n                placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top' : placement == 'top' && pos.top - actualHeight < viewportDim.top ? 'bottom' : placement == 'right' && pos.right + actualWidth > viewportDim.width ? 'left' : placement == 'left' && pos.left - actualWidth < viewportDim.left ? 'right' : placement;\n                $tip.removeClass(orgPlacement).addClass(placement);\n              }\n\n              var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight);\n              this.applyPlacement(calculatedOffset, placement);\n\n              var complete = function complete() {\n                var prevHoverState = that.hoverState;\n                that.$element.trigger('shown.bs.' + that.type);\n                that.hoverState = null;\n                if (prevHoverState == 'out') that.leave(that);\n              };\n\n              $.support.transition && this.$tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();\n            }\n          };\n\n          Tooltip.prototype.applyPlacement = function (offset, placement) {\n            var $tip = this.tip();\n            var width = $tip[0].offsetWidth;\n            var height = $tip[0].offsetHeight; // manually read margins because getBoundingClientRect includes difference\n\n            var marginTop = parseInt($tip.css('margin-top'), 10);\n            var marginLeft = parseInt($tip.css('margin-left'), 10); // we must check for NaN for ie 8/9\n\n            if (isNaN(marginTop)) marginTop = 0;\n            if (isNaN(marginLeft)) marginLeft = 0;\n            offset.top += marginTop;\n            offset.left += marginLeft; // $.fn.offset doesn't round pixel values\n            // so we use setOffset directly with our own function B-0\n\n            $.offset.setOffset($tip[0], $.extend({\n              using: function using(props) {\n                $tip.css({\n                  top: Math.round(props.top),\n                  left: Math.round(props.left)\n                });\n              }\n            }, offset), 0);\n            $tip.addClass('in'); // check to see if placing tip in new offset caused the tip to resize itself\n\n            var actualWidth = $tip[0].offsetWidth;\n            var actualHeight = $tip[0].offsetHeight;\n\n            if (placement == 'top' && actualHeight != height) {\n              offset.top = offset.top + height - actualHeight;\n            }\n\n            var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n            if (delta.left) offset.left += delta.left;else offset.top += delta.top;\n            var isVertical = /top|bottom/.test(placement);\n            var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n            var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n            $tip.offset(offset);\n            this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical);\n          };\n\n          Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n            this.arrow().css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%').css(isVertical ? 'top' : 'left', '');\n          };\n\n          Tooltip.prototype.setContent = function () {\n            var $tip = this.tip();\n            var title = this.getTitle();\n            $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title);\n            $tip.removeClass('fade in top bottom left right');\n          };\n\n          Tooltip.prototype.hide = function (callback) {\n            var that = this;\n            var $tip = $(this.$tip);\n            var e = $.Event('hide.bs.' + this.type);\n\n            function complete() {\n              if (that.hoverState != 'in') $tip.detach();\n              that.$element.removeAttr('aria-describedby').trigger('hidden.bs.' + that.type);\n              callback && callback();\n            }\n\n            this.$element.trigger(e);\n            if (e.isDefaultPrevented()) return;\n            $tip.removeClass('in');\n            $.support.transition && $tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();\n            this.hoverState = null;\n            return this;\n          };\n\n          Tooltip.prototype.fixTitle = function () {\n            var $e = this.$element;\n\n            if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n              $e.attr('data-original-title', $e.attr('title') || '').attr('title', '');\n            }\n          };\n\n          Tooltip.prototype.hasContent = function () {\n            return this.getTitle();\n          };\n\n          Tooltip.prototype.getPosition = function ($element) {\n            $element = $element || this.$element;\n            var el = $element[0];\n            var isBody = el.tagName == 'BODY';\n            var elRect = el.getBoundingClientRect();\n\n            if (elRect.width == null) {\n              // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n              elRect = $.extend({}, elRect, {\n                width: elRect.right - elRect.left,\n                height: elRect.bottom - elRect.top\n              });\n            }\n\n            var elOffset = isBody ? {\n              top: 0,\n              left: 0\n            } : $element.offset();\n            var scroll = {\n              scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop()\n            };\n            var outerDims = isBody ? {\n              width: $(window).width(),\n              height: $(window).height()\n            } : null;\n            return $.extend({}, elRect, scroll, outerDims, elOffset);\n          };\n\n          Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n            return placement == 'bottom' ? {\n              top: pos.top + pos.height,\n              left: pos.left + pos.width / 2 - actualWidth / 2\n            } : placement == 'top' ? {\n              top: pos.top - actualHeight,\n              left: pos.left + pos.width / 2 - actualWidth / 2\n            } : placement == 'left' ? {\n              top: pos.top + pos.height / 2 - actualHeight / 2,\n              left: pos.left - actualWidth\n            } :\n            /* placement == 'right' */\n            {\n              top: pos.top + pos.height / 2 - actualHeight / 2,\n              left: pos.left + pos.width\n            };\n          };\n\n          Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n            var delta = {\n              top: 0,\n              left: 0\n            };\n            if (!this.$viewport) return delta;\n            var viewportPadding = this.options.viewport && this.options.viewport.padding || 0;\n            var viewportDimensions = this.getPosition(this.$viewport);\n\n            if (/right|left/.test(placement)) {\n              var topEdgeOffset = pos.top - viewportPadding - viewportDimensions.scroll;\n              var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n\n              if (topEdgeOffset < viewportDimensions.top) {\n                // top overflow\n                delta.top = viewportDimensions.top - topEdgeOffset;\n              } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) {\n                // bottom overflow\n                delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n              }\n            } else {\n              var leftEdgeOffset = pos.left - viewportPadding;\n              var rightEdgeOffset = pos.left + viewportPadding + actualWidth;\n\n              if (leftEdgeOffset < viewportDimensions.left) {\n                // left overflow\n                delta.left = viewportDimensions.left - leftEdgeOffset;\n              } else if (rightEdgeOffset > viewportDimensions.right) {\n                // right overflow\n                delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n              }\n            }\n\n            return delta;\n          };\n\n          Tooltip.prototype.getTitle = function () {\n            var title;\n            var $e = this.$element;\n            var o = this.options;\n            title = $e.attr('data-original-title') || (typeof o.title == 'function' ? o.title.call($e[0]) : o.title);\n            return title;\n          };\n\n          Tooltip.prototype.getUID = function (prefix) {\n            do {\n              prefix += ~~(Math.random() * 1000000);\n            } while (document.getElementById(prefix));\n\n            return prefix;\n          };\n\n          Tooltip.prototype.tip = function () {\n            if (!this.$tip) {\n              this.$tip = $(this.options.template);\n\n              if (this.$tip.length != 1) {\n                throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!');\n              }\n            }\n\n            return this.$tip;\n          };\n\n          Tooltip.prototype.arrow = function () {\n            return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow');\n          };\n\n          Tooltip.prototype.enable = function () {\n            this.enabled = true;\n          };\n\n          Tooltip.prototype.disable = function () {\n            this.enabled = false;\n          };\n\n          Tooltip.prototype.toggleEnabled = function () {\n            this.enabled = !this.enabled;\n          };\n\n          Tooltip.prototype.toggle = function (e) {\n            var self = this;\n\n            if (e) {\n              self = $(e.currentTarget).data('bs.' + this.type);\n\n              if (!self) {\n                self = new this.constructor(e.currentTarget, this.getDelegateOptions());\n                $(e.currentTarget).data('bs.' + this.type, self);\n              }\n            }\n\n            if (e) {\n              self.inState.click = !self.inState.click;\n              if (self.isInStateTrue()) self.enter(self);else self.leave(self);\n            } else {\n              self.tip().hasClass('in') ? self.leave(self) : self.enter(self);\n            }\n          };\n\n          Tooltip.prototype.destroy = function () {\n            var that = this;\n            clearTimeout(this.timeout);\n            this.hide(function () {\n              that.$element.off('.' + that.type).removeData('bs.' + that.type);\n\n              if (that.$tip) {\n                that.$tip.detach();\n              }\n\n              that.$tip = null;\n              that.$arrow = null;\n              that.$viewport = null;\n            });\n          }; // TOOLTIP PLUGIN DEFINITION\n          // =========================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.tooltip');\n              var options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option;\n              if (!data && /destroy|hide/.test(option)) return;\n              if (!data) $this.data('bs.tooltip', data = new Tooltip(this, options));\n              if (typeof option == 'string') data[option]();\n            });\n          }\n\n          var old = $.fn.tooltip;\n          $.fn.tooltip = Plugin;\n          $.fn.tooltip.Constructor = Tooltip; // TOOLTIP NO CONFLICT\n          // ===================\n\n          $.fn.tooltip.noConflict = function () {\n            $.fn.tooltip = old;\n            return this;\n          };\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: popover.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#popovers\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // POPOVER PUBLIC CLASS DEFINITION\n          // ===============================\n          ;\n\n          var Popover = function Popover(element, options) {\n            this.init('popover', element, options);\n          };\n\n          if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js');\n          Popover.VERSION = '3.3.5';\n          Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n            placement: 'right',\n            trigger: 'click',\n            content: '',\n            template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n          }); // NOTE: POPOVER EXTENDS tooltip.js\n          // ================================\n\n          Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype);\n          Popover.prototype.constructor = Popover;\n\n          Popover.prototype.getDefaults = function () {\n            return Popover.DEFAULTS;\n          };\n\n          Popover.prototype.setContent = function () {\n            var $tip = this.tip();\n            var title = this.getTitle();\n            var content = this.getContent();\n            $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title);\n            $tip.find('.popover-content').children().detach().end()[// we use append for html objects to maintain js events\n            this.options.html ? typeof content == 'string' ? 'html' : 'append' : 'text'](content);\n            $tip.removeClass('fade top bottom left right in'); // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n            // this manually by checking the contents.\n\n            if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide();\n          };\n\n          Popover.prototype.hasContent = function () {\n            return this.getTitle() || this.getContent();\n          };\n\n          Popover.prototype.getContent = function () {\n            var $e = this.$element;\n            var o = this.options;\n            return $e.attr('data-content') || (typeof o.content == 'function' ? o.content.call($e[0]) : o.content);\n          };\n\n          Popover.prototype.arrow = function () {\n            return this.$arrow = this.$arrow || this.tip().find('.arrow');\n          }; // POPOVER PLUGIN DEFINITION\n          // =========================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.popover');\n              var options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option;\n              if (!data && /destroy|hide/.test(option)) return;\n              if (!data) $this.data('bs.popover', data = new Popover(this, options));\n              if (typeof option == 'string') data[option]();\n            });\n          }\n\n          var old = $.fn.popover;\n          $.fn.popover = Plugin;\n          $.fn.popover.Constructor = Popover; // POPOVER NO CONFLICT\n          // ===================\n\n          $.fn.popover.noConflict = function () {\n            $.fn.popover = old;\n            return this;\n          };\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: scrollspy.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#scrollspy\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // SCROLLSPY CLASS DEFINITION\n          // ==========================\n          ;\n\n          function ScrollSpy(element, options) {\n            this.$body = $(document.body);\n            this.$scrollElement = $(element).is(document.body) ? $(window) : $(element);\n            this.options = $.extend({}, ScrollSpy.DEFAULTS, options);\n            this.selector = (this.options.target || '') + ' .nav li > a';\n            this.offsets = [];\n            this.targets = [];\n            this.activeTarget = null;\n            this.scrollHeight = 0;\n            this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this));\n            this.refresh();\n            this.process();\n          }\n\n          ScrollSpy.VERSION = '3.3.5';\n          ScrollSpy.DEFAULTS = {\n            offset: 10\n          };\n\n          ScrollSpy.prototype.getScrollHeight = function () {\n            return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);\n          };\n\n          ScrollSpy.prototype.refresh = function () {\n            var that = this;\n            var offsetMethod = 'offset';\n            var offsetBase = 0;\n            this.offsets = [];\n            this.targets = [];\n            this.scrollHeight = this.getScrollHeight();\n\n            if (!$.isWindow(this.$scrollElement[0])) {\n              offsetMethod = 'position';\n              offsetBase = this.$scrollElement.scrollTop();\n            }\n\n            this.$body.find(this.selector).map(function () {\n              var $el = $(this);\n              var href = $el.data('target') || $el.attr('href');\n              var $href = /^#./.test(href) && $(href);\n              return $href && $href.length && $href.is(':visible') && [[$href[offsetMethod]().top + offsetBase, href]] || null;\n            }).sort(function (a, b) {\n              return a[0] - b[0];\n            }).each(function () {\n              that.offsets.push(this[0]);\n              that.targets.push(this[1]);\n            });\n          };\n\n          ScrollSpy.prototype.process = function () {\n            var scrollTop = this.$scrollElement.scrollTop() + this.options.offset;\n            var scrollHeight = this.getScrollHeight();\n            var maxScroll = this.options.offset + scrollHeight - this.$scrollElement.height();\n            var offsets = this.offsets;\n            var targets = this.targets;\n            var activeTarget = this.activeTarget;\n            var i;\n\n            if (this.scrollHeight != scrollHeight) {\n              this.refresh();\n            }\n\n            if (scrollTop >= maxScroll) {\n              return activeTarget != (i = targets[targets.length - 1]) && this.activate(i);\n            }\n\n            if (activeTarget && scrollTop < offsets[0]) {\n              this.activeTarget = null;\n              return this.clear();\n            }\n\n            for (i = offsets.length; i--;) {\n              activeTarget != targets[i] && scrollTop >= offsets[i] && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1]) && this.activate(targets[i]);\n            }\n          };\n\n          ScrollSpy.prototype.activate = function (target) {\n            this.activeTarget = target;\n            this.clear();\n            var selector = this.selector + '[data-target=\"' + target + '\"],' + this.selector + '[href=\"' + target + '\"]';\n            var active = $(selector).parents('li').addClass('active');\n\n            if (active.parent('.dropdown-menu').length) {\n              active = active.closest('li.dropdown').addClass('active');\n            }\n\n            active.trigger('activate.bs.scrollspy');\n          };\n\n          ScrollSpy.prototype.clear = function () {\n            $(this.selector).parentsUntil(this.options.target, '.active').removeClass('active');\n          }; // SCROLLSPY PLUGIN DEFINITION\n          // ===========================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.scrollspy');\n              var options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option;\n              if (!data) $this.data('bs.scrollspy', data = new ScrollSpy(this, options));\n              if (typeof option == 'string') data[option]();\n            });\n          }\n\n          var old = $.fn.scrollspy;\n          $.fn.scrollspy = Plugin;\n          $.fn.scrollspy.Constructor = ScrollSpy; // SCROLLSPY NO CONFLICT\n          // =====================\n\n          $.fn.scrollspy.noConflict = function () {\n            $.fn.scrollspy = old;\n            return this;\n          }; // SCROLLSPY DATA-API\n          // ==================\n\n\n          $(window).on('load.bs.scrollspy.data-api', function () {\n            $('[data-spy=\"scroll\"]').each(function () {\n              var $spy = $(this);\n              Plugin.call($spy, $spy.data());\n            });\n          });\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: tab.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#tabs\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // TAB CLASS DEFINITION\n          // ====================\n          ;\n\n          var Tab = function Tab(element) {\n            // jscs:disable requireDollarBeforejQueryAssignment\n            this.element = $(element); // jscs:enable requireDollarBeforejQueryAssignment\n          };\n\n          Tab.VERSION = '3.3.5';\n          Tab.TRANSITION_DURATION = 150;\n\n          Tab.prototype.show = function () {\n            var $this = this.element;\n            var $ul = $this.closest('ul:not(.dropdown-menu)');\n            var selector = $this.data('target');\n\n            if (!selector) {\n              selector = $this.attr('href');\n              selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n            }\n\n            if ($this.parent('li').hasClass('active')) return;\n            var $previous = $ul.find('.active:last a');\n            var hideEvent = $.Event('hide.bs.tab', {\n              relatedTarget: $this[0]\n            });\n            var showEvent = $.Event('show.bs.tab', {\n              relatedTarget: $previous[0]\n            });\n            $previous.trigger(hideEvent);\n            $this.trigger(showEvent);\n            if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return;\n            var $target = $(selector);\n            this.activate($this.closest('li'), $ul);\n            this.activate($target, $target.parent(), function () {\n              $previous.trigger({\n                type: 'hidden.bs.tab',\n                relatedTarget: $this[0]\n              });\n              $this.trigger({\n                type: 'shown.bs.tab',\n                relatedTarget: $previous[0]\n              });\n            });\n          };\n\n          Tab.prototype.activate = function (element, container, callback) {\n            var $active = container.find('> .active');\n            var transition = callback && $.support.transition && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length);\n\n            function next() {\n              $active.removeClass('active').find('> .dropdown-menu > .active').removeClass('active').end().find('[data-toggle=\"tab\"]').attr('aria-expanded', false);\n              element.addClass('active').find('[data-toggle=\"tab\"]').attr('aria-expanded', true);\n\n              if (transition) {\n                element[0].offsetWidth; // reflow for transition\n\n                element.addClass('in');\n              } else {\n                element.removeClass('fade');\n              }\n\n              if (element.parent('.dropdown-menu').length) {\n                element.closest('li.dropdown').addClass('active').end().find('[data-toggle=\"tab\"]').attr('aria-expanded', true);\n              }\n\n              callback && callback();\n            }\n\n            $active.length && transition ? $active.one('bsTransitionEnd', next).emulateTransitionEnd(Tab.TRANSITION_DURATION) : next();\n            $active.removeClass('in');\n          }; // TAB PLUGIN DEFINITION\n          // =====================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.tab');\n              if (!data) $this.data('bs.tab', data = new Tab(this));\n              if (typeof option == 'string') data[option]();\n            });\n          }\n\n          var old = $.fn.tab;\n          $.fn.tab = Plugin;\n          $.fn.tab.Constructor = Tab; // TAB NO CONFLICT\n          // ===============\n\n          $.fn.tab.noConflict = function () {\n            $.fn.tab = old;\n            return this;\n          }; // TAB DATA-API\n          // ============\n\n\n          var clickHandler = function clickHandler(e) {\n            e.preventDefault();\n            Plugin.call($(this), 'show');\n          };\n\n          $(document).on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler).on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler);\n        }(jQuery);\n        /* ========================================================================\r\n         * Bootstrap: affix.js v3.3.5\r\n         * https://getbootstrap.com/javascript/#affix\r\n         * ========================================================================\r\n         * Copyright 2011-2015 Twitter, Inc.\r\n         * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n         * ======================================================================== */\n\n        +function ($) {\n          'use strict' // AFFIX CLASS DEFINITION\n          // ======================\n          ;\n\n          var Affix = function Affix(element, options) {\n            this.options = $.extend({}, Affix.DEFAULTS, options);\n            this.$target = $(this.options.target).on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this)).on('click.bs.affix.data-api', $.proxy(this.checkPositionWithEventLoop, this));\n            this.$element = $(element);\n            this.affixed = null;\n            this.unpin = null;\n            this.pinnedOffset = null;\n            this.checkPosition();\n          };\n\n          Affix.VERSION = '3.3.5';\n          Affix.RESET = 'affix affix-top affix-bottom';\n          Affix.DEFAULTS = {\n            offset: 0,\n            target: window\n          };\n\n          Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n            var scrollTop = this.$target.scrollTop();\n            var position = this.$element.offset();\n            var targetHeight = this.$target.height();\n            if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false;\n\n            if (this.affixed == 'bottom') {\n              if (offsetTop != null) return scrollTop + this.unpin <= position.top ? false : 'bottom';\n              return scrollTop + targetHeight <= scrollHeight - offsetBottom ? false : 'bottom';\n            }\n\n            var initializing = this.affixed == null;\n            var colliderTop = initializing ? scrollTop : position.top;\n            var colliderHeight = initializing ? targetHeight : height;\n            if (offsetTop != null && scrollTop <= offsetTop) return 'top';\n            if (offsetBottom != null && colliderTop + colliderHeight >= scrollHeight - offsetBottom) return 'bottom';\n            return false;\n          };\n\n          Affix.prototype.getPinnedOffset = function () {\n            if (this.pinnedOffset) return this.pinnedOffset;\n            this.$element.removeClass(Affix.RESET).addClass('affix');\n            var scrollTop = this.$target.scrollTop();\n            var position = this.$element.offset();\n            return this.pinnedOffset = position.top - scrollTop;\n          };\n\n          Affix.prototype.checkPositionWithEventLoop = function () {\n            setTimeout($.proxy(this.checkPosition, this), 1);\n          };\n\n          Affix.prototype.checkPosition = function () {\n            if (!this.$element.is(':visible')) return;\n            var height = this.$element.height();\n            var offset = this.options.offset;\n            var offsetTop = offset.top;\n            var offsetBottom = offset.bottom;\n            var scrollHeight = Math.max($(document).height(), $(document.body).height());\n            if ((typeof offset === 'undefined' ? 'undefined' : _typeof(offset)) != 'object') offsetBottom = offsetTop = offset;\n            if (typeof offsetTop == 'function') offsetTop = offset.top(this.$element);\n            if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element);\n            var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom);\n\n            if (this.affixed != affix) {\n              if (this.unpin != null) this.$element.css('top', '');\n              var affixType = 'affix' + (affix ? '-' + affix : '');\n              var e = $.Event(affixType + '.bs.affix');\n              this.$element.trigger(e);\n              if (e.isDefaultPrevented()) return;\n              this.affixed = affix;\n              this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null;\n              this.$element.removeClass(Affix.RESET).addClass(affixType).trigger(affixType.replace('affix', 'affixed') + '.bs.affix');\n            }\n\n            if (affix == 'bottom') {\n              this.$element.offset({\n                top: scrollHeight - height - offsetBottom\n              });\n            }\n          }; // AFFIX PLUGIN DEFINITION\n          // =======================\n\n\n          function Plugin(option) {\n            return this.each(function () {\n              var $this = $(this);\n              var data = $this.data('bs.affix');\n              var options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option;\n              if (!data) $this.data('bs.affix', data = new Affix(this, options));\n              if (typeof option == 'string') data[option]();\n            });\n          }\n\n          var old = $.fn.affix;\n          $.fn.affix = Plugin;\n          $.fn.affix.Constructor = Affix; // AFFIX NO CONFLICT\n          // =================\n\n          $.fn.affix.noConflict = function () {\n            $.fn.affix = old;\n            return this;\n          }; // AFFIX DATA-API\n          // ==============\n\n\n          $(window).on('load', function () {\n            $('[data-spy=\"affix\"]').each(function () {\n              var $spy = $(this);\n              var data = $spy.data();\n              data.offset = data.offset || {};\n              if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom;\n              if (data.offsetTop != null) data.offset.top = data.offsetTop;\n              Plugin.call($spy, data);\n            });\n          });\n        }(jQuery);\n        ;\n        browserify_shim__define__module__export__(typeof bootstrap != \"undefined\" ? bootstrap : window.bootstrap);\n      }).call(global, undefined, undefined, undefined, undefined, function defineExport(ex) {\n        module.exports = ex;\n      });\n    }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n  }, {\n    \"jquery\": 3\n  }],\n  3: [function (require, module, exports) {\n    /*!\r\n     * jQuery JavaScript Library v2.1.4\r\n     * https://jquery.com/\r\n     *\r\n     * Includes Sizzle.js\r\n     * http://sizzlejs.com/\r\n     *\r\n     * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\r\n     * Released under the MIT license\r\n     * http://jquery.org/license\r\n     *\r\n     * Date: 2015-04-28T16:01Z\r\n     */\n    (function (global, factory) {\n      if (_typeof2(module) === \"object\" && _typeof2(module.exports) === \"object\") {\n        // For CommonJS and CommonJS-like environments where a proper `window`\n        // is present, execute the factory and get jQuery.\n        // For environments that do not have a `window` with a `document`\n        // (such as Node.js), expose a factory as module.exports.\n        // This accentuates the need for the creation of a real `window`.\n        // e.g. var jQuery = require(\"jquery\")(window);\n        // See ticket #14549 for more info.\n        module.exports = global.document ? factory(global, true) : function (w) {\n          if (!w.document) {\n            throw new Error(\"jQuery requires a window with a document\");\n          }\n\n          return factory(w);\n        };\n      } else {\n        factory(global);\n      } // Pass this if window is not defined yet\n\n    })(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n      // Support: Firefox 18+\n      // Can't be in strict mode, several libs including ASP.NET trace\n      // the stack via arguments.caller.callee and Firefox dies if\n      // you try to trace through \"use strict\" call chains. (#13335)\n      //\n      var arr = [];\n      var _slice = arr.slice;\n      var concat = arr.concat;\n      var push = arr.push;\n      var indexOf = arr.indexOf;\n      var class2type = {};\n      var toString = class2type.toString;\n      var hasOwn = class2type.hasOwnProperty;\n      var support = {};\n\n      var // Use the correct document accordingly with window argument (sandbox)\n      document = window.document,\n          version = \"2.1.4\",\n          // Define a local copy of jQuery\n      jQuery = function jQuery(selector, context) {\n        // The jQuery object is actually just the init constructor 'enhanced'\n        // Need init if jQuery is called (just allow error to be thrown if not included)\n        return new jQuery.fn.init(selector, context);\n      },\n          // Support: Android<4.1\n      // Make sure we trim BOM and NBSP\n      rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n          // Matches dashed string for camelizing\n      rmsPrefix = /^-ms-/,\n          rdashAlpha = /-([\\da-z])/gi,\n          // Used by jQuery.camelCase as callback to replace()\n      fcamelCase = function fcamelCase(all, letter) {\n        return letter.toUpperCase();\n      };\n\n      jQuery.fn = jQuery.prototype = {\n        // The current version of jQuery being used\n        jquery: version,\n        constructor: jQuery,\n        // Start with an empty selector\n        selector: \"\",\n        // The default length of a jQuery object is 0\n        length: 0,\n        toArray: function toArray() {\n          return _slice.call(this);\n        },\n        // Get the Nth element in the matched element set OR\n        // Get the whole matched element set as a clean array\n        get: function get(num) {\n          return num != null ? // Return just the one element from the set\n          num < 0 ? this[num + this.length] : this[num] : // Return all the elements in a clean array\n          _slice.call(this);\n        },\n        // Take an array of elements and push it onto the stack\n        // (returning the new matched element set)\n        pushStack: function pushStack(elems) {\n          // Build a new jQuery matched element set\n          var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n          ret.prevObject = this;\n          ret.context = this.context; // Return the newly-formed element set\n\n          return ret;\n        },\n        // Execute a callback for every element in the matched set.\n        // (You can seed the arguments with an array of args, but this is\n        // only used internally.)\n        each: function each(callback, args) {\n          return jQuery.each(this, callback, args);\n        },\n        map: function map(callback) {\n          return this.pushStack(jQuery.map(this, function (elem, i) {\n            return callback.call(elem, i, elem);\n          }));\n        },\n        slice: function slice() {\n          return this.pushStack(_slice.apply(this, arguments));\n        },\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(i) {\n          var len = this.length,\n              j = +i + (i < 0 ? len : 0);\n          return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n        },\n        end: function end() {\n          return this.prevObject || this.constructor(null);\n        },\n        // For internal use only.\n        // Behaves like an Array's method, not like a jQuery method.\n        push: push,\n        sort: arr.sort,\n        splice: arr.splice\n      };\n\n      jQuery.extend = jQuery.fn.extend = function () {\n        var options,\n            name,\n            src,\n            copy,\n            copyIsArray,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments.length,\n            deep = false; // Handle a deep copy situation\n\n        if (typeof target === \"boolean\") {\n          deep = target; // Skip the boolean and the target\n\n          target = arguments[i] || {};\n          i++;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_typeof2(target) !== \"object\" && !jQuery.isFunction(target)) {\n          target = {};\n        } // Extend jQuery itself if only one argument is passed\n\n\n        if (i === length) {\n          target = this;\n          i--;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && jQuery.isArray(src) ? src : [];\n                } else {\n                  clone = src && jQuery.isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      };\n\n      jQuery.extend({\n        // Unique for each copy of jQuery on the page\n        expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n        // Assume jQuery is ready without the ready module\n        isReady: true,\n        error: function error(msg) {\n          throw new Error(msg);\n        },\n        noop: function noop() {},\n        isFunction: function isFunction(obj) {\n          return jQuery.type(obj) === \"function\";\n        },\n        isArray: Array.isArray,\n        isWindow: function isWindow(obj) {\n          return obj != null && obj === obj.window;\n        },\n        isNumeric: function isNumeric(obj) {\n          // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n          // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n          // subtraction forces infinities to NaN\n          // adding 1 corrects loss of precision from parseFloat (#15100)\n          return !jQuery.isArray(obj) && obj - parseFloat(obj) + 1 >= 0;\n        },\n        isPlainObject: function isPlainObject(obj) {\n          // Not plain objects:\n          // - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n          // - DOM nodes\n          // - window\n          if (jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow(obj)) {\n            return false;\n          }\n\n          if (obj.constructor && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n          } // If the function hasn't returned already, we're confident that\n          // |obj| is a plain object, created by {} or constructed with new Object\n\n\n          return true;\n        },\n        isEmptyObject: function isEmptyObject(obj) {\n          var name;\n\n          for (name in obj) {\n            return false;\n          }\n\n          return true;\n        },\n        type: function type(obj) {\n          if (obj == null) {\n            return obj + \"\";\n          } // Support: Android<4.0, iOS<6 (functionish RegExp)\n\n\n          return _typeof2(obj) === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : _typeof2(obj);\n        },\n        // Evaluates a script in a global context\n        globalEval: function globalEval(code) {\n          var script,\n              indirect = eval;\n          code = jQuery.trim(code);\n\n          if (code) {\n            // If the code includes a valid, prologue position\n            // strict mode pragma, execute code by injecting a\n            // script tag into the document.\n            if (code.indexOf(\"use strict\") === 1) {\n              script = document.createElement(\"script\");\n              script.text = code;\n              document.head.appendChild(script).parentNode.removeChild(script);\n            } else {\n              // Otherwise, avoid the DOM node creation, insertion\n              // and removal by using an indirect global eval\n              indirect(code);\n            }\n          }\n        },\n        // Convert dashed to camelCase; used by the css and data modules\n        // Support: IE9-11+\n        // Microsoft forgot to hump their vendor prefix (#9572)\n        camelCase: function camelCase(string) {\n          return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n        },\n        nodeName: function nodeName(elem, name) {\n          return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n        },\n        // args is for internal usage only\n        each: function each(obj, callback, args) {\n          var value,\n              i = 0,\n              length = obj.length,\n              isArray = isArraylike(obj);\n\n          if (args) {\n            if (isArray) {\n              for (; i < length; i++) {\n                value = callback.apply(obj[i], args);\n\n                if (value === false) {\n                  break;\n                }\n              }\n            } else {\n              for (i in obj) {\n                value = callback.apply(obj[i], args);\n\n                if (value === false) {\n                  break;\n                }\n              }\n            } // A special, fast, case for the most common use of each\n\n          } else {\n            if (isArray) {\n              for (; i < length; i++) {\n                value = callback.call(obj[i], i, obj[i]);\n\n                if (value === false) {\n                  break;\n                }\n              }\n            } else {\n              for (i in obj) {\n                value = callback.call(obj[i], i, obj[i]);\n\n                if (value === false) {\n                  break;\n                }\n              }\n            }\n          }\n\n          return obj;\n        },\n        // Support: Android<4.1\n        trim: function trim(text) {\n          return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n        },\n        // results is for internal usage only\n        makeArray: function makeArray(arr, results) {\n          var ret = results || [];\n\n          if (arr != null) {\n            if (isArraylike(Object(arr))) {\n              jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n            } else {\n              push.call(ret, arr);\n            }\n          }\n\n          return ret;\n        },\n        inArray: function inArray(elem, arr, i) {\n          return arr == null ? -1 : indexOf.call(arr, elem, i);\n        },\n        merge: function merge(first, second) {\n          var len = +second.length,\n              j = 0,\n              i = first.length;\n\n          for (; j < len; j++) {\n            first[i++] = second[j];\n          }\n\n          first.length = i;\n          return first;\n        },\n        grep: function grep(elems, callback, invert) {\n          var callbackInverse,\n              matches = [],\n              i = 0,\n              length = elems.length,\n              callbackExpect = !invert; // Go through the array, only saving the items\n          // that pass the validator function\n\n          for (; i < length; i++) {\n            callbackInverse = !callback(elems[i], i);\n\n            if (callbackInverse !== callbackExpect) {\n              matches.push(elems[i]);\n            }\n          }\n\n          return matches;\n        },\n        // arg is for internal usage only\n        map: function map(elems, callback, arg) {\n          var value,\n              i = 0,\n              length = elems.length,\n              isArray = isArraylike(elems),\n              ret = []; // Go through the array, translating each of the items to their new values\n\n          if (isArray) {\n            for (; i < length; i++) {\n              value = callback(elems[i], i, arg);\n\n              if (value != null) {\n                ret.push(value);\n              }\n            } // Go through every key on the object,\n\n          } else {\n            for (i in elems) {\n              value = callback(elems[i], i, arg);\n\n              if (value != null) {\n                ret.push(value);\n              }\n            }\n          } // Flatten any nested arrays\n\n\n          return concat.apply([], ret);\n        },\n        // A global GUID counter for objects\n        guid: 1,\n        // Bind a function to a context, optionally partially applying any\n        // arguments.\n        proxy: function proxy(fn, context) {\n          var tmp, args, proxy;\n\n          if (typeof context === \"string\") {\n            tmp = fn[context];\n            context = fn;\n            fn = tmp;\n          } // Quick check to determine if target is callable, in the spec\n          // this throws a TypeError, but we will just return undefined.\n\n\n          if (!jQuery.isFunction(fn)) {\n            return undefined;\n          } // Simulated bind\n\n\n          args = _slice.call(arguments, 2);\n\n          proxy = function proxy() {\n            return fn.apply(context || this, args.concat(_slice.call(arguments)));\n          }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n          proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n          return proxy;\n        },\n        now: Date.now,\n        // jQuery.support is not used in Core but other projects attach their\n        // properties to it so it needs to exist.\n        support: support\n      }); // Populate the class2type map\n\n      jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function (i, name) {\n        class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n      });\n\n      function isArraylike(obj) {\n        // Support: iOS 8.2 (not reproducible in simulator)\n        // `in` check used to prevent JIT error (gh-2145)\n        // hasOwn isn't used here due to false negatives\n        // regarding Nodelist length in IE\n        var length = \"length\" in obj && obj.length,\n            type = jQuery.type(obj);\n\n        if (type === \"function\" || jQuery.isWindow(obj)) {\n          return false;\n        }\n\n        if (obj.nodeType === 1 && length) {\n          return true;\n        }\n\n        return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n      }\n\n      var Sizzle =\n      /*!\r\n       * Sizzle CSS Selector Engine v2.2.0-pre\r\n       * http://sizzlejs.com/\r\n       *\r\n       * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors\r\n       * Released under the MIT license\r\n       * http://jquery.org/license\r\n       *\r\n       * Date: 2014-12-16\r\n       */\n      function (window) {\n        var i,\n            support,\n            Expr,\n            getText,\n            isXML,\n            tokenize,\n            compile,\n            select,\n            outermostContext,\n            sortInput,\n            hasDuplicate,\n            // Local document vars\n        setDocument,\n            document,\n            docElem,\n            documentIsHTML,\n            rbuggyQSA,\n            rbuggyMatches,\n            matches,\n            contains,\n            // Instance-specific data\n        expando = \"sizzle\" + 1 * new Date(),\n            preferredDoc = window.document,\n            dirruns = 0,\n            done = 0,\n            classCache = createCache(),\n            tokenCache = createCache(),\n            compilerCache = createCache(),\n            sortOrder = function sortOrder(a, b) {\n          if (a === b) {\n            hasDuplicate = true;\n          }\n\n          return 0;\n        },\n            // General-purpose constants\n        MAX_NEGATIVE = 1 << 31,\n            // Instance methods\n        hasOwn = {}.hasOwnProperty,\n            arr = [],\n            pop = arr.pop,\n            push_native = arr.push,\n            push = arr.push,\n            slice = arr.slice,\n            // Use a stripped-down indexOf as it's faster than native\n        // http://jsperf.com/thor-indexof-vs-for/5\n        indexOf = function indexOf(list, elem) {\n          var i = 0,\n              len = list.length;\n\n          for (; i < len; i++) {\n            if (list[i] === elem) {\n              return i;\n            }\n          }\n\n          return -1;\n        },\n            booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n            // Regular expressions\n        // Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n        whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n            // http://www.w3.org/TR/css3-syntax/#characters\n        characterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n            // Loosely modeled on CSS identifier characters\n        // An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n        // Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n        identifier = characterEncoding.replace(\"w\", \"w#\"),\n            // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n        attributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace + // Operator (capture 2)\n        \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n        \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n            pseudos = \":(\" + characterEncoding + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n        // 1. quoted (capture 3; capture 4 or capture 5)\n        \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n        \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n        \".*\" + \")\\\\)|)\",\n            // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n        rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n            rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n            rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n            rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n            rattributeQuotes = new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\"),\n            rpseudo = new RegExp(pseudos),\n            ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n            matchExpr = {\n          \"ID\": new RegExp(\"^#(\" + characterEncoding + \")\"),\n          \"CLASS\": new RegExp(\"^\\\\.(\" + characterEncoding + \")\"),\n          \"TAG\": new RegExp(\"^(\" + characterEncoding.replace(\"w\", \"w*\") + \")\"),\n          \"ATTR\": new RegExp(\"^\" + attributes),\n          \"PSEUDO\": new RegExp(\"^\" + pseudos),\n          \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n          \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n          // For use in libraries implementing .is()\n          // We use this for POS matching in `select`\n          \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n        },\n            rinputs = /^(?:input|select|textarea|button)$/i,\n            rheader = /^h\\d$/i,\n            rnative = /^[^{]+\\{\\s*\\[native \\w/,\n            // Easily-parseable/retrievable ID or TAG or CLASS selectors\n        rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n            rsibling = /[+~]/,\n            rescape = /'|\\\\/g,\n            // CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n        runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n            funescape = function funescape(_, escaped, escapedWhitespace) {\n          var high = \"0x\" + escaped - 0x10000; // NaN means non-codepoint\n          // Support: Firefox<24\n          // Workaround erroneous numeric interpretation of +\"0x\"\n\n          return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n          String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n          String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n        },\n            // Used for iframes\n        // See setDocument()\n        // Removing the function wrapper causes a \"Permission Denied\"\n        // error in IE\n        unloadHandler = function unloadHandler() {\n          setDocument();\n        }; // Optimize for push.apply( _, NodeList )\n\n\n        try {\n          push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n          // Detect silently failing push.apply\n\n          arr[preferredDoc.childNodes.length].nodeType;\n        } catch (e) {\n          push = {\n            apply: arr.length ? // Leverage slice if possible\n            function (target, els) {\n              push_native.apply(target, slice.call(els));\n            } : // Support: IE<9\n            // Otherwise append directly\n            function (target, els) {\n              var j = target.length,\n                  i = 0; // Can't trust NodeList.length\n\n              while (target[j++] = els[i++]) {}\n\n              target.length = j - 1;\n            }\n          };\n        }\n\n        function Sizzle(selector, context, results, seed) {\n          var match, elem, m, nodeType, // QSA vars\n          i, groups, old, nid, newContext, newSelector;\n\n          if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n            setDocument(context);\n          }\n\n          context = context || document;\n          results = results || [];\n          nodeType = context.nodeType;\n\n          if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n            return results;\n          }\n\n          if (!seed && documentIsHTML) {\n            // Try to shortcut find operations when possible (e.g., not under DocumentFragment)\n            if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n              // Speed-up: Sizzle(\"#ID\")\n              if (m = match[1]) {\n                if (nodeType === 9) {\n                  elem = context.getElementById(m); // Check parentNode to catch when Blackberry 4.6 returns\n                  // nodes that are no longer in the document (jQuery #6963)\n\n                  if (elem && elem.parentNode) {\n                    // Handle the case where IE, Opera, and Webkit return items\n                    // by name instead of ID\n                    if (elem.id === m) {\n                      results.push(elem);\n                      return results;\n                    }\n                  } else {\n                    return results;\n                  }\n                } else {\n                  // Context is not a document\n                  if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } // Speed-up: Sizzle(\"TAG\")\n\n              } else if (match[2]) {\n                push.apply(results, context.getElementsByTagName(selector));\n                return results; // Speed-up: Sizzle(\".CLASS\")\n              } else if ((m = match[3]) && support.getElementsByClassName) {\n                push.apply(results, context.getElementsByClassName(m));\n                return results;\n              }\n            } // QSA path\n\n\n            if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n              nid = old = expando;\n              newContext = context;\n              newSelector = nodeType !== 1 && selector; // qSA works strangely on Element-rooted queries\n              // We can work around this by specifying an extra ID on the root\n              // and working up from there (Thanks to Andrew Dupont for the technique)\n              // IE 8 doesn't work on object elements\n\n              if (nodeType === 1 && context.nodeName.toLowerCase() !== \"object\") {\n                groups = tokenize(selector);\n\n                if (old = context.getAttribute(\"id\")) {\n                  nid = old.replace(rescape, \"\\\\$&\");\n                } else {\n                  context.setAttribute(\"id\", nid);\n                }\n\n                nid = \"[id='\" + nid + \"'] \";\n                i = groups.length;\n\n                while (i--) {\n                  groups[i] = nid + toSelector(groups[i]);\n                }\n\n                newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n                newSelector = groups.join(\",\");\n              }\n\n              if (newSelector) {\n                try {\n                  push.apply(results, newContext.querySelectorAll(newSelector));\n                  return results;\n                } catch (qsaError) {} finally {\n                  if (!old) {\n                    context.removeAttribute(\"id\");\n                  }\n                }\n              }\n            }\n          } // All others\n\n\n          return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n        }\n        /**\r\n         * Create key-value caches of limited size\r\n         * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\r\n         *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\r\n         *\tdeleting the oldest entry\r\n         */\n\n\n        function createCache() {\n          var keys = [];\n\n          function cache(key, value) {\n            // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n            if (keys.push(key + \" \") > Expr.cacheLength) {\n              // Only keep the most recent entries\n              delete cache[keys.shift()];\n            }\n\n            return cache[key + \" \"] = value;\n          }\n\n          return cache;\n        }\n        /**\r\n         * Mark a function for special use by Sizzle\r\n         * @param {Function} fn The function to mark\r\n         */\n\n\n        function markFunction(fn) {\n          fn[expando] = true;\n          return fn;\n        }\n        /**\r\n         * Support testing using an element\r\n         * @param {Function} fn Passed the created div and expects a boolean result\r\n         */\n\n\n        function assert(fn) {\n          var div = document.createElement(\"div\");\n\n          try {\n            return !!fn(div);\n          } catch (e) {\n            return false;\n          } finally {\n            // Remove from its parent by default\n            if (div.parentNode) {\n              div.parentNode.removeChild(div);\n            } // release memory in IE\n\n\n            div = null;\n          }\n        }\n        /**\r\n         * Adds the same handler for all of the specified attrs\r\n         * @param {String} attrs Pipe-separated list of attributes\r\n         * @param {Function} handler The method that will be applied\r\n         */\n\n\n        function addHandle(attrs, handler) {\n          var arr = attrs.split(\"|\"),\n              i = attrs.length;\n\n          while (i--) {\n            Expr.attrHandle[arr[i]] = handler;\n          }\n        }\n        /**\r\n         * Checks document order of two siblings\r\n         * @param {Element} a\r\n         * @param {Element} b\r\n         * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\r\n         */\n\n\n        function siblingCheck(a, b) {\n          var cur = b && a,\n              diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE); // Use IE sourceIndex if available on both nodes\n\n          if (diff) {\n            return diff;\n          } // Check if b follows a\n\n\n          if (cur) {\n            while (cur = cur.nextSibling) {\n              if (cur === b) {\n                return -1;\n              }\n            }\n          }\n\n          return a ? 1 : -1;\n        }\n        /**\r\n         * Returns a function to use in pseudos for input types\r\n         * @param {String} type\r\n         */\n\n\n        function createInputPseudo(type) {\n          return function (elem) {\n            var name = elem.nodeName.toLowerCase();\n            return name === \"input\" && elem.type === type;\n          };\n        }\n        /**\r\n         * Returns a function to use in pseudos for buttons\r\n         * @param {String} type\r\n         */\n\n\n        function createButtonPseudo(type) {\n          return function (elem) {\n            var name = elem.nodeName.toLowerCase();\n            return (name === \"input\" || name === \"button\") && elem.type === type;\n          };\n        }\n        /**\r\n         * Returns a function to use in pseudos for positionals\r\n         * @param {Function} fn\r\n         */\n\n\n        function createPositionalPseudo(fn) {\n          return markFunction(function (argument) {\n            argument = +argument;\n            return markFunction(function (seed, matches) {\n              var j,\n                  matchIndexes = fn([], seed.length, argument),\n                  i = matchIndexes.length; // Match elements found at the specified indexes\n\n              while (i--) {\n                if (seed[j = matchIndexes[i]]) {\n                  seed[j] = !(matches[j] = seed[j]);\n                }\n              }\n            });\n          });\n        }\n        /**\r\n         * Checks a node for validity as a Sizzle context\r\n         * @param {Element|Object=} context\r\n         * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\r\n         */\n\n\n        function testContext(context) {\n          return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n        } // Expose support vars for convenience\n\n\n        support = Sizzle.support = {};\n        /**\r\n         * Detects XML nodes\r\n         * @param {Element|Object} elem An element or a document\r\n         * @returns {Boolean} True iff elem is a non-HTML XML node\r\n         */\n\n        isXML = Sizzle.isXML = function (elem) {\n          // documentElement is verified for cases where it doesn't yet exist\n          // (such as loading iframes in IE - #4833)\n          var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n          return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n        };\n        /**\r\n         * Sets document-related variables once based on the current document\r\n         * @param {Element|Object} [doc] An element or document object to use to set the document\r\n         * @returns {Object} Returns the current document\r\n         */\n\n\n        setDocument = Sizzle.setDocument = function (node) {\n          var hasCompare,\n              parent,\n              doc = node ? node.ownerDocument || node : preferredDoc; // If no document and documentElement is available, return\n\n          if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n            return document;\n          } // Set our document\n\n\n          document = doc;\n          docElem = doc.documentElement;\n          parent = doc.defaultView; // Support: IE>8\n          // If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n          // IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n          // IE6-8 do not support the defaultView property so parent will be undefined\n\n          if (parent && parent !== parent.top) {\n            // IE11 does not have attachEvent, so all must suffer\n            if (parent.addEventListener) {\n              parent.addEventListener(\"unload\", unloadHandler, false);\n            } else if (parent.attachEvent) {\n              parent.attachEvent(\"onunload\", unloadHandler);\n            }\n          }\n          /* Support tests\r\n          ---------------------------------------------------------------------- */\n\n\n          documentIsHTML = !isXML(doc);\n          /* Attributes\r\n          ---------------------------------------------------------------------- */\n          // Support: IE<8\n          // Verify that getAttribute really returns attributes and not properties\n          // (excepting IE8 booleans)\n\n          support.attributes = assert(function (div) {\n            div.className = \"i\";\n            return !div.getAttribute(\"className\");\n          });\n          /* getElement(s)By*\r\n          ---------------------------------------------------------------------- */\n          // Check if getElementsByTagName(\"*\") returns only elements\n\n          support.getElementsByTagName = assert(function (div) {\n            div.appendChild(doc.createComment(\"\"));\n            return !div.getElementsByTagName(\"*\").length;\n          }); // Support: IE<9\n\n          support.getElementsByClassName = rnative.test(doc.getElementsByClassName); // Support: IE<10\n          // Check if getElementById returns elements by name\n          // The broken getElementById methods don't pick up programatically-set names,\n          // so use a roundabout getElementsByName test\n\n          support.getById = assert(function (div) {\n            docElem.appendChild(div).id = expando;\n            return !doc.getElementsByName || !doc.getElementsByName(expando).length;\n          }); // ID find and filter\n\n          if (support.getById) {\n            Expr.find[\"ID\"] = function (id, context) {\n              if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n                var m = context.getElementById(id); // Check parentNode to catch when Blackberry 4.6 returns\n                // nodes that are no longer in the document #6963\n\n                return m && m.parentNode ? [m] : [];\n              }\n            };\n\n            Expr.filter[\"ID\"] = function (id) {\n              var attrId = id.replace(runescape, funescape);\n              return function (elem) {\n                return elem.getAttribute(\"id\") === attrId;\n              };\n            };\n          } else {\n            // Support: IE6/7\n            // getElementById is not reliable as a find shortcut\n            delete Expr.find[\"ID\"];\n\n            Expr.filter[\"ID\"] = function (id) {\n              var attrId = id.replace(runescape, funescape);\n              return function (elem) {\n                var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n                return node && node.value === attrId;\n              };\n            };\n          } // Tag\n\n\n          Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n            if (typeof context.getElementsByTagName !== \"undefined\") {\n              return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n            } else if (support.qsa) {\n              return context.querySelectorAll(tag);\n            }\n          } : function (tag, context) {\n            var elem,\n                tmp = [],\n                i = 0,\n                // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n            results = context.getElementsByTagName(tag); // Filter out possible comments\n\n            if (tag === \"*\") {\n              while (elem = results[i++]) {\n                if (elem.nodeType === 1) {\n                  tmp.push(elem);\n                }\n              }\n\n              return tmp;\n            }\n\n            return results;\n          }; // Class\n\n          Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n            if (documentIsHTML) {\n              return context.getElementsByClassName(className);\n            }\n          };\n          /* QSA/matchesSelector\r\n          ---------------------------------------------------------------------- */\n          // QSA and matchesSelector support\n          // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n          rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n          // We allow this because of a bug in IE8/9 that throws an error\n          // whenever `document.activeElement` is accessed on an iframe\n          // So, we allow :focus to pass through QSA all the time to avoid the IE error\n          // See https://bugs.jquery.com/ticket/13378\n\n          rbuggyQSA = [];\n\n          if (support.qsa = rnative.test(doc.querySelectorAll)) {\n            // Build QSA regex\n            // Regex strategy adopted from Diego Perini\n            assert(function (div) {\n              // Select is set to empty string on purpose\n              // This is to test IE's treatment of not explicitly\n              // setting a boolean content attribute,\n              // since its presence should be enough\n              // https://bugs.jquery.com/ticket/12359\n              docElem.appendChild(div).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\f]' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n              // Nothing should be selected when empty strings follow ^= or $= or *=\n              // The test attribute must be unknown in Opera but \"safe\" for WinRT\n              // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n              if (div.querySelectorAll(\"[msallowcapture^='']\").length) {\n                rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n              } // Support: IE8\n              // Boolean attributes and \"value\" are not treated correctly\n\n\n              if (!div.querySelectorAll(\"[selected]\").length) {\n                rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n              } // Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+\n\n\n              if (!div.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n                rbuggyQSA.push(\"~=\");\n              } // Webkit/Opera - :checked should return selected option elements\n              // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n              // IE8 throws error here and will not see later tests\n\n\n              if (!div.querySelectorAll(\":checked\").length) {\n                rbuggyQSA.push(\":checked\");\n              } // Support: Safari 8+, iOS 8+\n              // https://bugs.webkit.org/show_bug.cgi?id=136851\n              // In-page `selector#id sibing-combinator selector` fails\n\n\n              if (!div.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n                rbuggyQSA.push(\".#.+[+~]\");\n              }\n            });\n            assert(function (div) {\n              // Support: Windows 8 Native Apps\n              // The type and name attributes are restricted during .innerHTML assignment\n              var input = doc.createElement(\"input\");\n              input.setAttribute(\"type\", \"hidden\");\n              div.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n              // Enforce case-sensitivity of name attribute\n\n              if (div.querySelectorAll(\"[name=d]\").length) {\n                rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n              } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n              // IE8 throws error here and will not see later tests\n\n\n              if (!div.querySelectorAll(\":enabled\").length) {\n                rbuggyQSA.push(\":enabled\", \":disabled\");\n              } // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n              div.querySelectorAll(\"*,:x\");\n              rbuggyQSA.push(\",.*:\");\n            });\n          }\n\n          if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n            assert(function (div) {\n              // Check to see if it's possible to do matchesSelector\n              // on a disconnected node (IE 9)\n              support.disconnectedMatch = matches.call(div, \"div\"); // This should fail with an exception\n              // Gecko does not error, returns false instead\n\n              matches.call(div, \"[s!='']:x\");\n              rbuggyMatches.push(\"!=\", pseudos);\n            });\n          }\n\n          rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n          rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n          /* Contains\r\n          ---------------------------------------------------------------------- */\n\n          hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n          // Purposefully does not implement inclusive descendent\n          // As in, an element does not contain itself\n\n          contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n            var adown = a.nodeType === 9 ? a.documentElement : a,\n                bup = b && b.parentNode;\n            return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n          } : function (a, b) {\n            if (b) {\n              while (b = b.parentNode) {\n                if (b === a) {\n                  return true;\n                }\n              }\n            }\n\n            return false;\n          };\n          /* Sorting\r\n          ---------------------------------------------------------------------- */\n          // Document order sorting\n\n          sortOrder = hasCompare ? function (a, b) {\n            // Flag for duplicate removal\n            if (a === b) {\n              hasDuplicate = true;\n              return 0;\n            } // Sort on method existence if only one input has compareDocumentPosition\n\n\n            var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n            if (compare) {\n              return compare;\n            } // Calculate position if both inputs belong to the same document\n\n\n            compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n            1; // Disconnected nodes\n\n            if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n              // Choose the first element that is related to our preferred document\n              if (a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n                return -1;\n              }\n\n              if (b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n                return 1;\n              } // Maintain original order\n\n\n              return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n            }\n\n            return compare & 4 ? -1 : 1;\n          } : function (a, b) {\n            // Exit early if the nodes are identical\n            if (a === b) {\n              hasDuplicate = true;\n              return 0;\n            }\n\n            var cur,\n                i = 0,\n                aup = a.parentNode,\n                bup = b.parentNode,\n                ap = [a],\n                bp = [b]; // Parentless nodes are either documents or disconnected\n\n            if (!aup || !bup) {\n              return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n            } else if (aup === bup) {\n              return siblingCheck(a, b);\n            } // Otherwise we need full lists of their ancestors for comparison\n\n\n            cur = a;\n\n            while (cur = cur.parentNode) {\n              ap.unshift(cur);\n            }\n\n            cur = b;\n\n            while (cur = cur.parentNode) {\n              bp.unshift(cur);\n            } // Walk down the tree looking for a discrepancy\n\n\n            while (ap[i] === bp[i]) {\n              i++;\n            }\n\n            return i ? // Do a sibling check if the nodes have a common ancestor\n            siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n            ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n          };\n          return doc;\n        };\n\n        Sizzle.matches = function (expr, elements) {\n          return Sizzle(expr, null, null, elements);\n        };\n\n        Sizzle.matchesSelector = function (elem, expr) {\n          // Set document vars if needed\n          if ((elem.ownerDocument || elem) !== document) {\n            setDocument(elem);\n          } // Make sure that attribute selectors are quoted\n\n\n          expr = expr.replace(rattributeQuotes, \"='$1']\");\n\n          if (support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n            try {\n              var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n              if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n              // fragment in IE 9\n              elem.document && elem.document.nodeType !== 11) {\n                return ret;\n              }\n            } catch (e) {}\n          }\n\n          return Sizzle(expr, document, null, [elem]).length > 0;\n        };\n\n        Sizzle.contains = function (context, elem) {\n          // Set document vars if needed\n          if ((context.ownerDocument || context) !== document) {\n            setDocument(context);\n          }\n\n          return contains(context, elem);\n        };\n\n        Sizzle.attr = function (elem, name) {\n          // Set document vars if needed\n          if ((elem.ownerDocument || elem) !== document) {\n            setDocument(elem);\n          }\n\n          var fn = Expr.attrHandle[name.toLowerCase()],\n              // Don't get fooled by Object.prototype properties (jQuery #13807)\n          val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n          return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        };\n\n        Sizzle.error = function (msg) {\n          throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n        };\n        /**\r\n         * Document sorting and removing duplicates\r\n         * @param {ArrayLike} results\r\n         */\n\n\n        Sizzle.uniqueSort = function (results) {\n          var elem,\n              duplicates = [],\n              j = 0,\n              i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n          hasDuplicate = !support.detectDuplicates;\n          sortInput = !support.sortStable && results.slice(0);\n          results.sort(sortOrder);\n\n          if (hasDuplicate) {\n            while (elem = results[i++]) {\n              if (elem === results[i]) {\n                j = duplicates.push(i);\n              }\n            }\n\n            while (j--) {\n              results.splice(duplicates[j], 1);\n            }\n          } // Clear input after sorting to release objects\n          // See https://github.com/jquery/sizzle/pull/225\n\n\n          sortInput = null;\n          return results;\n        };\n        /**\r\n         * Utility function for retrieving the text value of an array of DOM nodes\r\n         * @param {Array|Element} elem\r\n         */\n\n\n        getText = Sizzle.getText = function (elem) {\n          var node,\n              ret = \"\",\n              i = 0,\n              nodeType = elem.nodeType;\n\n          if (!nodeType) {\n            // If no nodeType, this is expected to be an array\n            while (node = elem[i++]) {\n              // Do not traverse comment nodes\n              ret += getText(node);\n            }\n          } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n            // Use textContent for elements\n            // innerText usage removed for consistency of new lines (jQuery #11153)\n            if (typeof elem.textContent === \"string\") {\n              return elem.textContent;\n            } else {\n              // Traverse its children\n              for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                ret += getText(elem);\n              }\n            }\n          } else if (nodeType === 3 || nodeType === 4) {\n            return elem.nodeValue;\n          } // Do not include comment or processing instruction nodes\n\n\n          return ret;\n        };\n\n        Expr = Sizzle.selectors = {\n          // Can be adjusted by the user\n          cacheLength: 50,\n          createPseudo: markFunction,\n          match: matchExpr,\n          attrHandle: {},\n          find: {},\n          relative: {\n            \">\": {\n              dir: \"parentNode\",\n              first: true\n            },\n            \" \": {\n              dir: \"parentNode\"\n            },\n            \"+\": {\n              dir: \"previousSibling\",\n              first: true\n            },\n            \"~\": {\n              dir: \"previousSibling\"\n            }\n          },\n          preFilter: {\n            \"ATTR\": function ATTR(match) {\n              match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n              match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n              if (match[2] === \"~=\") {\n                match[3] = \" \" + match[3] + \" \";\n              }\n\n              return match.slice(0, 4);\n            },\n            \"CHILD\": function CHILD(match) {\n              /* matches from matchExpr[\"CHILD\"]\r\n                1 type (only|nth|...)\r\n                2 what (child|of-type)\r\n                3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n                4 xn-component of xn+y argument ([+-]?\\d*n|)\r\n                5 sign of xn-component\r\n                6 x of xn-component\r\n                7 sign of y-component\r\n                8 y of y-component\r\n              */\n              match[1] = match[1].toLowerCase();\n\n              if (match[1].slice(0, 3) === \"nth\") {\n                // nth-* requires argument\n                if (!match[3]) {\n                  Sizzle.error(match[0]);\n                } // numeric x and y parameters for Expr.filter.CHILD\n                // remember that false/true cast respectively to 0/1\n\n\n                match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n                match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n              } else if (match[3]) {\n                Sizzle.error(match[0]);\n              }\n\n              return match;\n            },\n            \"PSEUDO\": function PSEUDO(match) {\n              var excess,\n                  unquoted = !match[6] && match[2];\n\n              if (matchExpr[\"CHILD\"].test(match[0])) {\n                return null;\n              } // Accept quoted arguments as-is\n\n\n              if (match[3]) {\n                match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n              } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n              excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n              excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n                // excess is a negative index\n                match[0] = match[0].slice(0, excess);\n                match[2] = unquoted.slice(0, excess);\n              } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n              return match.slice(0, 3);\n            }\n          },\n          filter: {\n            \"TAG\": function TAG(nodeNameSelector) {\n              var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n              return nodeNameSelector === \"*\" ? function () {\n                return true;\n              } : function (elem) {\n                return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n              };\n            },\n            \"CLASS\": function CLASS(className) {\n              var pattern = classCache[className + \" \"];\n              return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n                return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n              });\n            },\n            \"ATTR\": function ATTR(name, operator, check) {\n              return function (elem) {\n                var result = Sizzle.attr(elem, name);\n\n                if (result == null) {\n                  return operator === \"!=\";\n                }\n\n                if (!operator) {\n                  return true;\n                }\n\n                result += \"\";\n                return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n              };\n            },\n            \"CHILD\": function CHILD(type, what, argument, first, last) {\n              var simple = type.slice(0, 3) !== \"nth\",\n                  forward = type.slice(-4) !== \"last\",\n                  ofType = what === \"of-type\";\n              return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n              function (elem) {\n                return !!elem.parentNode;\n              } : function (elem, context, xml) {\n                var cache,\n                    outerCache,\n                    node,\n                    diff,\n                    nodeIndex,\n                    start,\n                    dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                    parent = elem.parentNode,\n                    name = ofType && elem.nodeName.toLowerCase(),\n                    useCache = !xml && !ofType;\n\n                if (parent) {\n                  // :(first|last|only)-(child|of-type)\n                  if (simple) {\n                    while (dir) {\n                      node = elem;\n\n                      while (node = node[dir]) {\n                        if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                          return false;\n                        }\n                      } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n                      start = dir = type === \"only\" && !start && \"nextSibling\";\n                    }\n\n                    return true;\n                  }\n\n                  start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n                  if (forward && useCache) {\n                    // Seek `elem` from a previously-cached index\n                    outerCache = parent[expando] || (parent[expando] = {});\n                    cache = outerCache[type] || [];\n                    nodeIndex = cache[0] === dirruns && cache[1];\n                    diff = cache[0] === dirruns && cache[2];\n                    node = nodeIndex && parent.childNodes[nodeIndex];\n\n                    while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                    diff = nodeIndex = 0) || start.pop()) {\n                      // When found, cache indexes on `parent` and break\n                      if (node.nodeType === 1 && ++diff && node === elem) {\n                        outerCache[type] = [dirruns, nodeIndex, diff];\n                        break;\n                      }\n                    } // Use previously-cached element index if available\n\n                  } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) {\n                    diff = cache[1]; // xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                  } else {\n                    // Use the same loop as above to seek `elem` from the start\n                    while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                      if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                        // Cache the index of each encountered element\n                        if (useCache) {\n                          (node[expando] || (node[expando] = {}))[type] = [dirruns, diff];\n                        }\n\n                        if (node === elem) {\n                          break;\n                        }\n                      }\n                    }\n                  } // Incorporate the offset, then check against cycle size\n\n\n                  diff -= last;\n                  return diff === first || diff % first === 0 && diff / first >= 0;\n                }\n              };\n            },\n            \"PSEUDO\": function PSEUDO(pseudo, argument) {\n              // pseudo-class names are case-insensitive\n              // http://www.w3.org/TR/selectors/#pseudo-classes\n              // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n              // Remember that setFilters inherits from pseudos\n              var args,\n                  fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n              // arguments are needed to create the filter function\n              // just as Sizzle does\n\n              if (fn[expando]) {\n                return fn(argument);\n              } // But maintain support for old signatures\n\n\n              if (fn.length > 1) {\n                args = [pseudo, pseudo, \"\", argument];\n                return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n                  var idx,\n                      matched = fn(seed, argument),\n                      i = matched.length;\n\n                  while (i--) {\n                    idx = indexOf(seed, matched[i]);\n                    seed[idx] = !(matches[idx] = matched[i]);\n                  }\n                }) : function (elem) {\n                  return fn(elem, 0, args);\n                };\n              }\n\n              return fn;\n            }\n          },\n          pseudos: {\n            // Potentially complex pseudos\n            \"not\": markFunction(function (selector) {\n              // Trim the selector passed to compile\n              // to avoid treating leading and trailing\n              // spaces as combinators\n              var input = [],\n                  results = [],\n                  matcher = compile(selector.replace(rtrim, \"$1\"));\n              return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n                var elem,\n                    unmatched = matcher(seed, null, xml, []),\n                    i = seed.length; // Match elements unmatched by `matcher`\n\n                while (i--) {\n                  if (elem = unmatched[i]) {\n                    seed[i] = !(matches[i] = elem);\n                  }\n                }\n              }) : function (elem, context, xml) {\n                input[0] = elem;\n                matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n                input[0] = null;\n                return !results.pop();\n              };\n            }),\n            \"has\": markFunction(function (selector) {\n              return function (elem) {\n                return Sizzle(selector, elem).length > 0;\n              };\n            }),\n            \"contains\": markFunction(function (text) {\n              text = text.replace(runescape, funescape);\n              return function (elem) {\n                return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n              };\n            }),\n            // \"Whether an element is represented by a :lang() selector\n            // is based solely on the element's language value\n            // being equal to the identifier C,\n            // or beginning with the identifier C immediately followed by \"-\".\n            // The matching of C against the element's language value is performed case-insensitively.\n            // The identifier C does not have to be a valid language name.\"\n            // http://www.w3.org/TR/selectors/#lang-pseudo\n            \"lang\": markFunction(function (lang) {\n              // lang value must be a valid identifier\n              if (!ridentifier.test(lang || \"\")) {\n                Sizzle.error(\"unsupported lang: \" + lang);\n              }\n\n              lang = lang.replace(runescape, funescape).toLowerCase();\n              return function (elem) {\n                var elemLang;\n\n                do {\n                  if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                    elemLang = elemLang.toLowerCase();\n                    return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n                  }\n                } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n                return false;\n              };\n            }),\n            // Miscellaneous\n            \"target\": function target(elem) {\n              var hash = window.location && window.location.hash;\n              return hash && hash.slice(1) === elem.id;\n            },\n            \"root\": function root(elem) {\n              return elem === docElem;\n            },\n            \"focus\": function focus(elem) {\n              return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n            },\n            // Boolean properties\n            \"enabled\": function enabled(elem) {\n              return elem.disabled === false;\n            },\n            \"disabled\": function disabled(elem) {\n              return elem.disabled === true;\n            },\n            \"checked\": function checked(elem) {\n              // In CSS3, :checked should return both checked and selected elements\n              // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n              var nodeName = elem.nodeName.toLowerCase();\n              return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n            },\n            \"selected\": function selected(elem) {\n              // Accessing this property makes selected-by-default\n              // options in Safari work properly\n              if (elem.parentNode) {\n                elem.parentNode.selectedIndex;\n              }\n\n              return elem.selected === true;\n            },\n            // Contents\n            \"empty\": function empty(elem) {\n              // http://www.w3.org/TR/selectors/#empty-pseudo\n              // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n              //   but not by others (comment: 8; processing instruction: 7; etc.)\n              // nodeType < 6 works because attributes (2) do not appear as children\n              for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                if (elem.nodeType < 6) {\n                  return false;\n                }\n              }\n\n              return true;\n            },\n            \"parent\": function parent(elem) {\n              return !Expr.pseudos[\"empty\"](elem);\n            },\n            // Element/input types\n            \"header\": function header(elem) {\n              return rheader.test(elem.nodeName);\n            },\n            \"input\": function input(elem) {\n              return rinputs.test(elem.nodeName);\n            },\n            \"button\": function button(elem) {\n              var name = elem.nodeName.toLowerCase();\n              return name === \"input\" && elem.type === \"button\" || name === \"button\";\n            },\n            \"text\": function text(elem) {\n              var attr;\n              return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n              // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n              (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n            },\n            // Position-in-collection\n            \"first\": createPositionalPseudo(function () {\n              return [0];\n            }),\n            \"last\": createPositionalPseudo(function (matchIndexes, length) {\n              return [length - 1];\n            }),\n            \"eq\": createPositionalPseudo(function (matchIndexes, length, argument) {\n              return [argument < 0 ? argument + length : argument];\n            }),\n            \"even\": createPositionalPseudo(function (matchIndexes, length) {\n              var i = 0;\n\n              for (; i < length; i += 2) {\n                matchIndexes.push(i);\n              }\n\n              return matchIndexes;\n            }),\n            \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n              var i = 1;\n\n              for (; i < length; i += 2) {\n                matchIndexes.push(i);\n              }\n\n              return matchIndexes;\n            }),\n            \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n              var i = argument < 0 ? argument + length : argument;\n\n              for (; --i >= 0;) {\n                matchIndexes.push(i);\n              }\n\n              return matchIndexes;\n            }),\n            \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n              var i = argument < 0 ? argument + length : argument;\n\n              for (; ++i < length;) {\n                matchIndexes.push(i);\n              }\n\n              return matchIndexes;\n            })\n          }\n        };\n        Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n        for (i in {\n          radio: true,\n          checkbox: true,\n          file: true,\n          password: true,\n          image: true\n        }) {\n          Expr.pseudos[i] = createInputPseudo(i);\n        }\n\n        for (i in {\n          submit: true,\n          reset: true\n        }) {\n          Expr.pseudos[i] = createButtonPseudo(i);\n        } // Easy API for creating new setFilters\n\n\n        function setFilters() {}\n\n        setFilters.prototype = Expr.filters = Expr.pseudos;\n        Expr.setFilters = new setFilters();\n\n        tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n          var matched,\n              match,\n              tokens,\n              type,\n              soFar,\n              groups,\n              preFilters,\n              cached = tokenCache[selector + \" \"];\n\n          if (cached) {\n            return parseOnly ? 0 : cached.slice(0);\n          }\n\n          soFar = selector;\n          groups = [];\n          preFilters = Expr.preFilter;\n\n          while (soFar) {\n            // Comma and first run\n            if (!matched || (match = rcomma.exec(soFar))) {\n              if (match) {\n                // Don't consume trailing commas as valid\n                soFar = soFar.slice(match[0].length) || soFar;\n              }\n\n              groups.push(tokens = []);\n            }\n\n            matched = false; // Combinators\n\n            if (match = rcombinators.exec(soFar)) {\n              matched = match.shift();\n              tokens.push({\n                value: matched,\n                // Cast descendant combinators to space\n                type: match[0].replace(rtrim, \" \")\n              });\n              soFar = soFar.slice(matched.length);\n            } // Filters\n\n\n            for (type in Expr.filter) {\n              if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n                matched = match.shift();\n                tokens.push({\n                  value: matched,\n                  type: type,\n                  matches: match\n                });\n                soFar = soFar.slice(matched.length);\n              }\n            }\n\n            if (!matched) {\n              break;\n            }\n          } // Return the length of the invalid excess\n          // if we're just parsing\n          // Otherwise, throw an error or return tokens\n\n\n          return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n          tokenCache(selector, groups).slice(0);\n        };\n\n        function toSelector(tokens) {\n          var i = 0,\n              len = tokens.length,\n              selector = \"\";\n\n          for (; i < len; i++) {\n            selector += tokens[i].value;\n          }\n\n          return selector;\n        }\n\n        function addCombinator(matcher, combinator, base) {\n          var dir = combinator.dir,\n              checkNonElements = base && dir === \"parentNode\",\n              doneName = done++;\n          return combinator.first ? // Check against closest ancestor/preceding element\n          function (elem, context, xml) {\n            while (elem = elem[dir]) {\n              if (elem.nodeType === 1 || checkNonElements) {\n                return matcher(elem, context, xml);\n              }\n            }\n          } : // Check against all ancestor/preceding elements\n          function (elem, context, xml) {\n            var oldCache,\n                outerCache,\n                newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\n            if (xml) {\n              while (elem = elem[dir]) {\n                if (elem.nodeType === 1 || checkNonElements) {\n                  if (matcher(elem, context, xml)) {\n                    return true;\n                  }\n                }\n              }\n            } else {\n              while (elem = elem[dir]) {\n                if (elem.nodeType === 1 || checkNonElements) {\n                  outerCache = elem[expando] || (elem[expando] = {});\n\n                  if ((oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                    // Assign to newCache so results back-propagate to previous elements\n                    return newCache[2] = oldCache[2];\n                  } else {\n                    // Reuse newcache so results back-propagate to previous elements\n                    outerCache[dir] = newCache; // A match means we're done; a fail means we have to keep checking\n\n                    if (newCache[2] = matcher(elem, context, xml)) {\n                      return true;\n                    }\n                  }\n                }\n              }\n            }\n          };\n        }\n\n        function elementMatcher(matchers) {\n          return matchers.length > 1 ? function (elem, context, xml) {\n            var i = matchers.length;\n\n            while (i--) {\n              if (!matchers[i](elem, context, xml)) {\n                return false;\n              }\n            }\n\n            return true;\n          } : matchers[0];\n        }\n\n        function multipleContexts(selector, contexts, results) {\n          var i = 0,\n              len = contexts.length;\n\n          for (; i < len; i++) {\n            Sizzle(selector, contexts[i], results);\n          }\n\n          return results;\n        }\n\n        function condense(unmatched, map, filter, context, xml) {\n          var elem,\n              newUnmatched = [],\n              i = 0,\n              len = unmatched.length,\n              mapped = map != null;\n\n          for (; i < len; i++) {\n            if (elem = unmatched[i]) {\n              if (!filter || filter(elem, context, xml)) {\n                newUnmatched.push(elem);\n\n                if (mapped) {\n                  map.push(i);\n                }\n              }\n            }\n          }\n\n          return newUnmatched;\n        }\n\n        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n          if (postFilter && !postFilter[expando]) {\n            postFilter = setMatcher(postFilter);\n          }\n\n          if (postFinder && !postFinder[expando]) {\n            postFinder = setMatcher(postFinder, postSelector);\n          }\n\n          return markFunction(function (seed, results, context, xml) {\n            var temp,\n                i,\n                elem,\n                preMap = [],\n                postMap = [],\n                preexisting = results.length,\n                // Get initial elements from seed or context\n            elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n                // Prefilter to get matcher input, preserving a map for seed-results synchronization\n            matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n                matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n            postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n            [] : // ...otherwise use results directly\n            results : matcherIn; // Find primary matches\n\n            if (matcher) {\n              matcher(matcherIn, matcherOut, context, xml);\n            } // Apply postFilter\n\n\n            if (postFilter) {\n              temp = condense(matcherOut, postMap);\n              postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n              i = temp.length;\n\n              while (i--) {\n                if (elem = temp[i]) {\n                  matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n                }\n              }\n            }\n\n            if (seed) {\n              if (postFinder || preFilter) {\n                if (postFinder) {\n                  // Get the final matcherOut by condensing this intermediate into postFinder contexts\n                  temp = [];\n                  i = matcherOut.length;\n\n                  while (i--) {\n                    if (elem = matcherOut[i]) {\n                      // Restore matcherIn since elem is not yet a final match\n                      temp.push(matcherIn[i] = elem);\n                    }\n                  }\n\n                  postFinder(null, matcherOut = [], temp, xml);\n                } // Move matched elements from seed to results to keep them synchronized\n\n\n                i = matcherOut.length;\n\n                while (i--) {\n                  if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                    seed[temp] = !(results[temp] = elem);\n                  }\n                }\n              } // Add elements to results, through postFinder if defined\n\n            } else {\n              matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n              if (postFinder) {\n                postFinder(null, results, matcherOut, xml);\n              } else {\n                push.apply(results, matcherOut);\n              }\n            }\n          });\n        }\n\n        function matcherFromTokens(tokens) {\n          var checkContext,\n              matcher,\n              j,\n              len = tokens.length,\n              leadingRelative = Expr.relative[tokens[0].type],\n              implicitRelative = leadingRelative || Expr.relative[\" \"],\n              i = leadingRelative ? 1 : 0,\n              // The foundational matcher ensures that elements are reachable from top-level context(s)\n          matchContext = addCombinator(function (elem) {\n            return elem === checkContext;\n          }, implicitRelative, true),\n              matchAnyContext = addCombinator(function (elem) {\n            return indexOf(checkContext, elem) > -1;\n          }, implicitRelative, true),\n              matchers = [function (elem, context, xml) {\n            var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n            checkContext = null;\n            return ret;\n          }];\n\n          for (; i < len; i++) {\n            if (matcher = Expr.relative[tokens[i].type]) {\n              matchers = [addCombinator(elementMatcher(matchers), matcher)];\n            } else {\n              matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n              if (matcher[expando]) {\n                // Find the next relative operator (if any) for proper handling\n                j = ++i;\n\n                for (; j < len; j++) {\n                  if (Expr.relative[tokens[j].type]) {\n                    break;\n                  }\n                }\n\n                return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n                tokens.slice(0, i - 1).concat({\n                  value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n                })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n              }\n\n              matchers.push(matcher);\n            }\n          }\n\n          return elementMatcher(matchers);\n        }\n\n        function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n          var bySet = setMatchers.length > 0,\n              byElement = elementMatchers.length > 0,\n              superMatcher = function superMatcher(seed, context, xml, results, outermost) {\n            var elem,\n                j,\n                matcher,\n                matchedCount = 0,\n                i = \"0\",\n                unmatched = seed && [],\n                setMatched = [],\n                contextBackup = outermostContext,\n                // We must always have either seed elements or outermost context\n            elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n                // Use integer dirruns iff this is the outermost matcher\n            dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n                len = elems.length;\n\n            if (outermost) {\n              outermostContext = context !== document && context;\n            } // Add elements passing elementMatchers directly to results\n            // Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n            // Support: IE<9, Safari\n            // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n            for (; i !== len && (elem = elems[i]) != null; i++) {\n              if (byElement && elem) {\n                j = 0;\n\n                while (matcher = elementMatchers[j++]) {\n                  if (matcher(elem, context, xml)) {\n                    results.push(elem);\n                    break;\n                  }\n                }\n\n                if (outermost) {\n                  dirruns = dirrunsUnique;\n                }\n              } // Track unmatched elements for set filters\n\n\n              if (bySet) {\n                // They will have gone through all possible matchers\n                if (elem = !matcher && elem) {\n                  matchedCount--;\n                } // Lengthen the array for every element, matched or not\n\n\n                if (seed) {\n                  unmatched.push(elem);\n                }\n              }\n            } // Apply set filters to unmatched elements\n\n\n            matchedCount += i;\n\n            if (bySet && i !== matchedCount) {\n              j = 0;\n\n              while (matcher = setMatchers[j++]) {\n                matcher(unmatched, setMatched, context, xml);\n              }\n\n              if (seed) {\n                // Reintegrate element matches to eliminate the need for sorting\n                if (matchedCount > 0) {\n                  while (i--) {\n                    if (!(unmatched[i] || setMatched[i])) {\n                      setMatched[i] = pop.call(results);\n                    }\n                  }\n                } // Discard index placeholder values to get only actual matches\n\n\n                setMatched = condense(setMatched);\n              } // Add matches to results\n\n\n              push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n              if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n                Sizzle.uniqueSort(results);\n              }\n            } // Override manipulation of globals by nested matchers\n\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n              outermostContext = contextBackup;\n            }\n\n            return unmatched;\n          };\n\n          return bySet ? markFunction(superMatcher) : superMatcher;\n        }\n\n        compile = Sizzle.compile = function (selector, match\n        /* Internal Use Only */\n        ) {\n          var i,\n              setMatchers = [],\n              elementMatchers = [],\n              cached = compilerCache[selector + \" \"];\n\n          if (!cached) {\n            // Generate a function of recursive functions that can be used to check each element\n            if (!match) {\n              match = tokenize(selector);\n            }\n\n            i = match.length;\n\n            while (i--) {\n              cached = matcherFromTokens(match[i]);\n\n              if (cached[expando]) {\n                setMatchers.push(cached);\n              } else {\n                elementMatchers.push(cached);\n              }\n            } // Cache the compiled function\n\n\n            cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n            cached.selector = selector;\n          }\n\n          return cached;\n        };\n        /**\r\n         * A low-level selection function that works with Sizzle's compiled\r\n         *  selector functions\r\n         * @param {String|Function} selector A selector or a pre-compiled\r\n         *  selector function built with Sizzle.compile\r\n         * @param {Element} context\r\n         * @param {Array} [results]\r\n         * @param {Array} [seed] A set of elements to match against\r\n         */\n\n\n        select = Sizzle.select = function (selector, context, results, seed) {\n          var i,\n              tokens,\n              token,\n              type,\n              find,\n              compiled = typeof selector === \"function\" && selector,\n              match = !seed && tokenize(selector = compiled.selector || selector);\n          results = results || []; // Try to minimize operations if there is no seed and only one group\n\n          if (match.length === 1) {\n            // Take a shortcut and set the context if the root selector is an ID\n            tokens = match[0] = match[0].slice(0);\n\n            if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n              context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n              if (!context) {\n                return results; // Precompiled matchers will still verify ancestry, so step up a level\n              } else if (compiled) {\n                context = context.parentNode;\n              }\n\n              selector = selector.slice(tokens.shift().value.length);\n            } // Fetch a seed set for right-to-left matching\n\n\n            i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n            while (i--) {\n              token = tokens[i]; // Abort if we hit a combinator\n\n              if (Expr.relative[type = token.type]) {\n                break;\n              }\n\n              if (find = Expr.find[type]) {\n                // Search, expanding context for leading sibling combinators\n                if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n                  // If seed is empty or no tokens remain, we can return early\n                  tokens.splice(i, 1);\n                  selector = seed.length && toSelector(tokens);\n\n                  if (!selector) {\n                    push.apply(results, seed);\n                    return results;\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Compile and execute a filtering function if one is not provided\n          // Provide `match` to avoid retokenization if we modified the selector above\n\n\n          (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context);\n          return results;\n        }; // One-time assignments\n        // Sort stability\n\n\n        support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n        // Always assume duplicates if they aren't passed to the comparison function\n\n        support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n        setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n        // Detached nodes confoundingly follow *each other*\n\n        support.sortDetached = assert(function (div1) {\n          // Should return 1, but returns 4 (following)\n          return div1.compareDocumentPosition(document.createElement(\"div\")) & 1;\n        }); // Support: IE<8\n        // Prevent attribute/property \"interpolation\"\n        // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n        if (!assert(function (div) {\n          div.innerHTML = \"<a href='#'></a>\";\n          return div.firstChild.getAttribute(\"href\") === \"#\";\n        })) {\n          addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n            if (!isXML) {\n              return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n            }\n          });\n        } // Support: IE<9\n        // Use defaultValue in place of getAttribute(\"value\")\n\n\n        if (!support.attributes || !assert(function (div) {\n          div.innerHTML = \"<input/>\";\n          div.firstChild.setAttribute(\"value\", \"\");\n          return div.firstChild.getAttribute(\"value\") === \"\";\n        })) {\n          addHandle(\"value\", function (elem, name, isXML) {\n            if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n              return elem.defaultValue;\n            }\n          });\n        } // Support: IE<9\n        // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n        if (!assert(function (div) {\n          return div.getAttribute(\"disabled\") == null;\n        })) {\n          addHandle(booleans, function (elem, name, isXML) {\n            var val;\n\n            if (!isXML) {\n              return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n            }\n          });\n        }\n\n        return Sizzle;\n      }(window);\n\n      jQuery.find = Sizzle;\n      jQuery.expr = Sizzle.selectors;\n      jQuery.expr[\":\"] = jQuery.expr.pseudos;\n      jQuery.unique = Sizzle.uniqueSort;\n      jQuery.text = Sizzle.getText;\n      jQuery.isXMLDoc = Sizzle.isXML;\n      jQuery.contains = Sizzle.contains;\n      var rneedsContext = jQuery.expr.match.needsContext;\n      var rsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\n      var risSimple = /^.[^:#\\[\\.,]*$/; // Implement the identical functionality for filter and not\n\n      function winnow(elements, qualifier, not) {\n        if (jQuery.isFunction(qualifier)) {\n          return jQuery.grep(elements, function (elem, i) {\n            /* jshint -W018 */\n            return !!qualifier.call(elem, i, elem) !== not;\n          });\n        }\n\n        if (qualifier.nodeType) {\n          return jQuery.grep(elements, function (elem) {\n            return elem === qualifier !== not;\n          });\n        }\n\n        if (typeof qualifier === \"string\") {\n          if (risSimple.test(qualifier)) {\n            return jQuery.filter(qualifier, elements, not);\n          }\n\n          qualifier = jQuery.filter(qualifier, elements);\n        }\n\n        return jQuery.grep(elements, function (elem) {\n          return indexOf.call(qualifier, elem) >= 0 !== not;\n        });\n      }\n\n      jQuery.filter = function (expr, elems, not) {\n        var elem = elems[0];\n\n        if (not) {\n          expr = \":not(\" + expr + \")\";\n        }\n\n        return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n          return elem.nodeType === 1;\n        }));\n      };\n\n      jQuery.fn.extend({\n        find: function find(selector) {\n          var i,\n              len = this.length,\n              ret = [],\n              self = this;\n\n          if (typeof selector !== \"string\") {\n            return this.pushStack(jQuery(selector).filter(function () {\n              for (i = 0; i < len; i++) {\n                if (jQuery.contains(self[i], this)) {\n                  return true;\n                }\n              }\n            }));\n          }\n\n          for (i = 0; i < len; i++) {\n            jQuery.find(selector, self[i], ret);\n          } // Needed because $( selector, context ) becomes $( context ).find( selector )\n\n\n          ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);\n          ret.selector = this.selector ? this.selector + \" \" + selector : selector;\n          return ret;\n        },\n        filter: function filter(selector) {\n          return this.pushStack(winnow(this, selector || [], false));\n        },\n        not: function not(selector) {\n          return this.pushStack(winnow(this, selector || [], true));\n        },\n        is: function is(selector) {\n          return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n          // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n          typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n        }\n      }); // Initialize a jQuery object\n      // A central reference to the root jQuery(document)\n\n      var rootjQuery,\n          // A simple way to check for HTML strings\n      // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n      // Strict HTML recognition (#11290: must start with <)\n      rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n          init = jQuery.fn.init = function (selector, context) {\n        var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n        if (!selector) {\n          return this;\n        } // Handle HTML strings\n\n\n        if (typeof selector === \"string\") {\n          if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n            // Assume that strings that start and end with <> are HTML and skip the regex check\n            match = [null, selector, null];\n          } else {\n            match = rquickExpr.exec(selector);\n          } // Match html or make sure no context is specified for #id\n\n\n          if (match && (match[1] || !context)) {\n            // HANDLE: $(html) -> $(array)\n            if (match[1]) {\n              context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n              // Intentionally let the error be thrown if parseHTML is not present\n\n              jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n              if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n                for (match in context) {\n                  // Properties of context are called as methods if possible\n                  if (jQuery.isFunction(this[match])) {\n                    this[match](context[match]); // ...and otherwise set as attributes\n                  } else {\n                    this.attr(match, context[match]);\n                  }\n                }\n              }\n\n              return this; // HANDLE: $(#id)\n            } else {\n              elem = document.getElementById(match[2]); // Support: Blackberry 4.6\n              // gEBID returns nodes no longer in the document (#6963)\n\n              if (elem && elem.parentNode) {\n                // Inject the element directly into the jQuery object\n                this.length = 1;\n                this[0] = elem;\n              }\n\n              this.context = document;\n              this.selector = selector;\n              return this;\n            } // HANDLE: $(expr, $(...))\n\n          } else if (!context || context.jquery) {\n            return (context || rootjQuery).find(selector); // HANDLE: $(expr, context)\n            // (which is just equivalent to: $(context).find(expr)\n          } else {\n            return this.constructor(context).find(selector);\n          } // HANDLE: $(DOMElement)\n\n        } else if (selector.nodeType) {\n          this.context = this[0] = selector;\n          this.length = 1;\n          return this; // HANDLE: $(function)\n          // Shortcut for document ready\n        } else if (jQuery.isFunction(selector)) {\n          return typeof rootjQuery.ready !== \"undefined\" ? rootjQuery.ready(selector) : // Execute immediately if ready is not present\n          selector(jQuery);\n        }\n\n        if (selector.selector !== undefined) {\n          this.selector = selector.selector;\n          this.context = selector.context;\n        }\n\n        return jQuery.makeArray(selector, this);\n      }; // Give the init function the jQuery prototype for later instantiation\n\n\n      init.prototype = jQuery.fn; // Initialize central reference\n\n      rootjQuery = jQuery(document);\n      var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n          // Methods guaranteed to produce a unique set when starting from a unique set\n      guaranteedUnique = {\n        children: true,\n        contents: true,\n        next: true,\n        prev: true\n      };\n      jQuery.extend({\n        dir: function dir(elem, _dir, until) {\n          var matched = [],\n              truncate = until !== undefined;\n\n          while ((elem = elem[_dir]) && elem.nodeType !== 9) {\n            if (elem.nodeType === 1) {\n              if (truncate && jQuery(elem).is(until)) {\n                break;\n              }\n\n              matched.push(elem);\n            }\n          }\n\n          return matched;\n        },\n        sibling: function sibling(n, elem) {\n          var matched = [];\n\n          for (; n; n = n.nextSibling) {\n            if (n.nodeType === 1 && n !== elem) {\n              matched.push(n);\n            }\n          }\n\n          return matched;\n        }\n      });\n      jQuery.fn.extend({\n        has: function has(target) {\n          var targets = jQuery(target, this),\n              l = targets.length;\n          return this.filter(function () {\n            var i = 0;\n\n            for (; i < l; i++) {\n              if (jQuery.contains(this, targets[i])) {\n                return true;\n              }\n            }\n          });\n        },\n        closest: function closest(selectors, context) {\n          var cur,\n              i = 0,\n              l = this.length,\n              matched = [],\n              pos = rneedsContext.test(selectors) || typeof selectors !== \"string\" ? jQuery(selectors, context || this.context) : 0;\n\n          for (; i < l; i++) {\n            for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n              // Always skip document fragments\n              if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : // Don't pass non-elements to Sizzle\n              cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n                matched.push(cur);\n                break;\n              }\n            }\n          }\n\n          return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);\n        },\n        // Determine the position of an element within the set\n        index: function index(elem) {\n          // No argument, return index in parent\n          if (!elem) {\n            return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n          } // Index in selector\n\n\n          if (typeof elem === \"string\") {\n            return indexOf.call(jQuery(elem), this[0]);\n          } // Locate the position of the desired element\n\n\n          return indexOf.call(this, // If it receives a jQuery object, the first element is used\n          elem.jquery ? elem[0] : elem);\n        },\n        add: function add(selector, context) {\n          return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))));\n        },\n        addBack: function addBack(selector) {\n          return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n        }\n      });\n\n      function sibling(cur, dir) {\n        while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n        return cur;\n      }\n\n      jQuery.each({\n        parent: function parent(elem) {\n          var parent = elem.parentNode;\n          return parent && parent.nodeType !== 11 ? parent : null;\n        },\n        parents: function parents(elem) {\n          return jQuery.dir(elem, \"parentNode\");\n        },\n        parentsUntil: function parentsUntil(elem, i, until) {\n          return jQuery.dir(elem, \"parentNode\", until);\n        },\n        next: function next(elem) {\n          return sibling(elem, \"nextSibling\");\n        },\n        prev: function prev(elem) {\n          return sibling(elem, \"previousSibling\");\n        },\n        nextAll: function nextAll(elem) {\n          return jQuery.dir(elem, \"nextSibling\");\n        },\n        prevAll: function prevAll(elem) {\n          return jQuery.dir(elem, \"previousSibling\");\n        },\n        nextUntil: function nextUntil(elem, i, until) {\n          return jQuery.dir(elem, \"nextSibling\", until);\n        },\n        prevUntil: function prevUntil(elem, i, until) {\n          return jQuery.dir(elem, \"previousSibling\", until);\n        },\n        siblings: function siblings(elem) {\n          return jQuery.sibling((elem.parentNode || {}).firstChild, elem);\n        },\n        children: function children(elem) {\n          return jQuery.sibling(elem.firstChild);\n        },\n        contents: function contents(elem) {\n          return elem.contentDocument || jQuery.merge([], elem.childNodes);\n        }\n      }, function (name, fn) {\n        jQuery.fn[name] = function (until, selector) {\n          var matched = jQuery.map(this, fn, until);\n\n          if (name.slice(-5) !== \"Until\") {\n            selector = until;\n          }\n\n          if (selector && typeof selector === \"string\") {\n            matched = jQuery.filter(selector, matched);\n          }\n\n          if (this.length > 1) {\n            // Remove duplicates\n            if (!guaranteedUnique[name]) {\n              jQuery.unique(matched);\n            } // Reverse order for parents* and prev-derivatives\n\n\n            if (rparentsprev.test(name)) {\n              matched.reverse();\n            }\n          }\n\n          return this.pushStack(matched);\n        };\n      });\n      var rnotwhite = /\\S+/g; // String to Object options format cache\n\n      var optionsCache = {}; // Convert String-formatted options into Object-formatted ones and store in cache\n\n      function createOptions(options) {\n        var object = optionsCache[options] = {};\n        jQuery.each(options.match(rnotwhite) || [], function (_, flag) {\n          object[flag] = true;\n        });\n        return object;\n      }\n      /*\r\n       * Create a callback list using the following parameters:\r\n       *\r\n       *\toptions: an optional list of space-separated options that will change how\r\n       *\t\t\tthe callback list behaves or a more traditional option object\r\n       *\r\n       * By default a callback list will act like an event callback list and can be\r\n       * \"fired\" multiple times.\r\n       *\r\n       * Possible options:\r\n       *\r\n       *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n       *\r\n       *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n       *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n       *\t\t\t\t\tvalues (like a Deferred)\r\n       *\r\n       *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n       *\r\n       *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n       *\r\n       */\n\n\n      jQuery.Callbacks = function (options) {\n        // Convert options from String-formatted to Object-formatted if needed\n        // (we check in cache first)\n        options = typeof options === \"string\" ? optionsCache[options] || createOptions(options) : jQuery.extend({}, options);\n\n        var // Last fire value (for non-forgettable lists)\n        memory,\n            // Flag to know if list was already fired\n        _fired,\n            // Flag to know if list is currently firing\n        firing,\n            // First callback to fire (used internally by add and fireWith)\n        firingStart,\n            // End of the loop when firing\n        firingLength,\n            // Index of currently firing callback (modified by remove if needed)\n        firingIndex,\n            // Actual callback list\n        list = [],\n            // Stack of fire calls for repeatable lists\n        stack = !options.once && [],\n            // Fire callbacks\n        fire = function fire(data) {\n          memory = options.memory && data;\n          _fired = true;\n          firingIndex = firingStart || 0;\n          firingStart = 0;\n          firingLength = list.length;\n          firing = true;\n\n          for (; list && firingIndex < firingLength; firingIndex++) {\n            if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\n              memory = false; // To prevent further calls using add\n\n              break;\n            }\n          }\n\n          firing = false;\n\n          if (list) {\n            if (stack) {\n              if (stack.length) {\n                fire(stack.shift());\n              }\n            } else if (memory) {\n              list = [];\n            } else {\n              self.disable();\n            }\n          }\n        },\n            // Actual Callbacks object\n        self = {\n          // Add a callback or a collection of callbacks to the list\n          add: function add() {\n            if (list) {\n              // First, we save the current length\n              var start = list.length;\n\n              (function add(args) {\n                jQuery.each(args, function (_, arg) {\n                  var type = jQuery.type(arg);\n\n                  if (type === \"function\") {\n                    if (!options.unique || !self.has(arg)) {\n                      list.push(arg);\n                    }\n                  } else if (arg && arg.length && type !== \"string\") {\n                    // Inspect recursively\n                    add(arg);\n                  }\n                });\n              })(arguments); // Do we need to add the callbacks to the\n              // current firing batch?\n\n\n              if (firing) {\n                firingLength = list.length; // With memory, if we're not firing then\n                // we should call right away\n              } else if (memory) {\n                firingStart = start;\n                fire(memory);\n              }\n            }\n\n            return this;\n          },\n          // Remove a callback from the list\n          remove: function remove() {\n            if (list) {\n              jQuery.each(arguments, function (_, arg) {\n                var index;\n\n                while ((index = jQuery.inArray(arg, list, index)) > -1) {\n                  list.splice(index, 1); // Handle firing indexes\n\n                  if (firing) {\n                    if (index <= firingLength) {\n                      firingLength--;\n                    }\n\n                    if (index <= firingIndex) {\n                      firingIndex--;\n                    }\n                  }\n                }\n              });\n            }\n\n            return this;\n          },\n          // Check if a given callback is in the list.\n          // If no argument is given, return whether or not list has callbacks attached.\n          has: function has(fn) {\n            return fn ? jQuery.inArray(fn, list) > -1 : !!(list && list.length);\n          },\n          // Remove all callbacks from the list\n          empty: function empty() {\n            list = [];\n            firingLength = 0;\n            return this;\n          },\n          // Have the list do nothing anymore\n          disable: function disable() {\n            list = stack = memory = undefined;\n            return this;\n          },\n          // Is it disabled?\n          disabled: function disabled() {\n            return !list;\n          },\n          // Lock the list in its current state\n          lock: function lock() {\n            stack = undefined;\n\n            if (!memory) {\n              self.disable();\n            }\n\n            return this;\n          },\n          // Is it locked?\n          locked: function locked() {\n            return !stack;\n          },\n          // Call all callbacks with the given context and arguments\n          fireWith: function fireWith(context, args) {\n            if (list && (!_fired || stack)) {\n              args = args || [];\n              args = [context, args.slice ? args.slice() : args];\n\n              if (firing) {\n                stack.push(args);\n              } else {\n                fire(args);\n              }\n            }\n\n            return this;\n          },\n          // Call all the callbacks with the given arguments\n          fire: function fire() {\n            self.fireWith(this, arguments);\n            return this;\n          },\n          // To know if the callbacks have already been called at least once\n          fired: function fired() {\n            return !!_fired;\n          }\n        };\n\n        return self;\n      };\n\n      jQuery.extend({\n        Deferred: function Deferred(func) {\n          var tuples = [// action, add listener, listener list, final state\n          [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\"], [\"notify\", \"progress\", jQuery.Callbacks(\"memory\")]],\n              _state = \"pending\",\n              _promise = {\n            state: function state() {\n              return _state;\n            },\n            always: function always() {\n              deferred.done(arguments).fail(arguments);\n              return this;\n            },\n            then: function\n              /* fnDone, fnFail, fnProgress */\n            then() {\n              var fns = arguments;\n              return jQuery.Deferred(function (newDefer) {\n                jQuery.each(tuples, function (i, tuple) {\n                  var fn = jQuery.isFunction(fns[i]) && fns[i]; // deferred[ done | fail | progress ] for forwarding actions to newDefer\n\n                  deferred[tuple[1]](function () {\n                    var returned = fn && fn.apply(this, arguments);\n\n                    if (returned && jQuery.isFunction(returned.promise)) {\n                      returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n                    } else {\n                      newDefer[tuple[0] + \"With\"](this === _promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n                    }\n                  });\n                });\n                fns = null;\n              }).promise();\n            },\n            // Get a promise for this deferred\n            // If obj is provided, the promise aspect is added to the object\n            promise: function promise(obj) {\n              return obj != null ? jQuery.extend(obj, _promise) : _promise;\n            }\n          },\n              deferred = {}; // Keep pipe for back-compat\n\n          _promise.pipe = _promise.then; // Add list-specific methods\n\n          jQuery.each(tuples, function (i, tuple) {\n            var list = tuple[2],\n                stateString = tuple[3]; // promise[ done | fail | progress ] = list.add\n\n            _promise[tuple[1]] = list.add; // Handle state\n\n            if (stateString) {\n              list.add(function () {\n                // state = [ resolved | rejected ]\n                _state = stateString; // [ reject_list | resolve_list ].disable; progress_list.lock\n              }, tuples[i ^ 1][2].disable, tuples[2][2].lock);\n            } // deferred[ resolve | reject | notify ]\n\n\n            deferred[tuple[0]] = function () {\n              deferred[tuple[0] + \"With\"](this === deferred ? _promise : this, arguments);\n              return this;\n            };\n\n            deferred[tuple[0] + \"With\"] = list.fireWith;\n          }); // Make the deferred a promise\n\n          _promise.promise(deferred); // Call given func if any\n\n\n          if (func) {\n            func.call(deferred, deferred);\n          } // All done!\n\n\n          return deferred;\n        },\n        // Deferred helper\n        when: function when(subordinate\n        /* , ..., subordinateN */\n        ) {\n          var i = 0,\n              resolveValues = _slice.call(arguments),\n              length = resolveValues.length,\n              // the count of uncompleted subordinates\n          remaining = length !== 1 || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0,\n              // the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n          deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n              // Update function for both resolve and progress values\n          updateFunc = function updateFunc(i, contexts, values) {\n            return function (value) {\n              contexts[i] = this;\n              values[i] = arguments.length > 1 ? _slice.call(arguments) : value;\n\n              if (values === progressValues) {\n                deferred.notifyWith(contexts, values);\n              } else if (! --remaining) {\n                deferred.resolveWith(contexts, values);\n              }\n            };\n          },\n              progressValues,\n              progressContexts,\n              resolveContexts; // Add listeners to Deferred subordinates; treat others as resolved\n\n\n          if (length > 1) {\n            progressValues = new Array(length);\n            progressContexts = new Array(length);\n            resolveContexts = new Array(length);\n\n            for (; i < length; i++) {\n              if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {\n                resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues));\n              } else {\n                --remaining;\n              }\n            }\n          } // If we're not waiting on anything, resolve the master\n\n\n          if (!remaining) {\n            deferred.resolveWith(resolveContexts, resolveValues);\n          }\n\n          return deferred.promise();\n        }\n      }); // The deferred used on DOM ready\n\n      var readyList;\n\n      jQuery.fn.ready = function (fn) {\n        // Add the callback\n        jQuery.ready.promise().done(fn);\n        return this;\n      };\n\n      jQuery.extend({\n        // Is the DOM ready to be used? Set to true once it occurs.\n        isReady: false,\n        // A counter to track how many items to wait for before\n        // the ready event fires. See #6781\n        readyWait: 1,\n        // Hold (or release) the ready event\n        holdReady: function holdReady(hold) {\n          if (hold) {\n            jQuery.readyWait++;\n          } else {\n            jQuery.ready(true);\n          }\n        },\n        // Handle when the DOM is ready\n        ready: function ready(wait) {\n          // Abort if there are pending holds or we're already ready\n          if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n            return;\n          } // Remember that the DOM is ready\n\n\n          jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n          if (wait !== true && --jQuery.readyWait > 0) {\n            return;\n          } // If there are functions bound, to execute\n\n\n          readyList.resolveWith(document, [jQuery]); // Trigger any bound ready events\n\n          if (jQuery.fn.triggerHandler) {\n            jQuery(document).triggerHandler(\"ready\");\n            jQuery(document).off(\"ready\");\n          }\n        }\n      });\n      /**\r\n       * The ready event handler and self cleanup method\r\n       */\n\n      function completed() {\n        document.removeEventListener(\"DOMContentLoaded\", completed, false);\n        window.removeEventListener(\"load\", completed, false);\n        jQuery.ready();\n      }\n\n      jQuery.ready.promise = function (obj) {\n        if (!readyList) {\n          readyList = jQuery.Deferred(); // Catch cases where $(document).ready() is called after the browser event has already occurred.\n          // We once tried to use readyState \"interactive\" here, but it caused issues like the one\n          // discovered by ChrisS here: https://bugs.jquery.com/ticket/12282#comment:15\n\n          if (document.readyState === \"complete\") {\n            // Handle it asynchronously to allow scripts the opportunity to delay ready\n            setTimeout(jQuery.ready);\n          } else {\n            // Use the handy event callback\n            document.addEventListener(\"DOMContentLoaded\", completed, false); // A fallback to window.onload, that will always work\n\n            window.addEventListener(\"load\", completed, false);\n          }\n        }\n\n        return readyList.promise(obj);\n      }; // Kick off the DOM ready check even if the user does not\n\n\n      jQuery.ready.promise(); // Multifunctional method to get and set values of a collection\n      // The value/s can optionally be executed if it's a function\n\n      var access = jQuery.access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n        var i = 0,\n            len = elems.length,\n            bulk = key == null; // Sets many values\n\n        if (jQuery.type(key) === \"object\") {\n          chainable = true;\n\n          for (i in key) {\n            jQuery.access(elems, fn, i, key[i], true, emptyGet, raw);\n          } // Sets one value\n\n        } else if (value !== undefined) {\n          chainable = true;\n\n          if (!jQuery.isFunction(value)) {\n            raw = true;\n          }\n\n          if (bulk) {\n            // Bulk operations run against the entire set\n            if (raw) {\n              fn.call(elems, value);\n              fn = null; // ...except when executing function values\n            } else {\n              bulk = fn;\n\n              fn = function fn(elem, key, value) {\n                return bulk.call(jQuery(elem), value);\n              };\n            }\n          }\n\n          if (fn) {\n            for (; i < len; i++) {\n              fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n            }\n          }\n        }\n\n        return chainable ? elems : // Gets\n        bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;\n      };\n      /**\r\n       * Determines whether an object can have data\r\n       */\n\n\n      jQuery.acceptData = function (owner) {\n        // Accepts only:\n        //  - Node\n        //    - Node.ELEMENT_NODE\n        //    - Node.DOCUMENT_NODE\n        //  - Object\n        //    - Any\n\n        /* jshint -W018 */\n        return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n      };\n\n      function Data() {\n        // Support: Android<4,\n        // Old WebKit does not have Object.preventExtensions/freeze method,\n        // return new empty object instead with no [[set]] accessor\n        Object.defineProperty(this.cache = {}, 0, {\n          get: function get() {\n            return {};\n          }\n        });\n        this.expando = jQuery.expando + Data.uid++;\n      }\n\n      Data.uid = 1;\n      Data.accepts = jQuery.acceptData;\n      Data.prototype = {\n        key: function key(owner) {\n          // We can accept data for non-element nodes in modern browsers,\n          // but we should not, see #8335.\n          // Always return the key for a frozen object.\n          if (!Data.accepts(owner)) {\n            return 0;\n          }\n\n          var descriptor = {},\n              // Check if the owner object already has a cache key\n          unlock = owner[this.expando]; // If not, create one\n\n          if (!unlock) {\n            unlock = Data.uid++; // Secure it in a non-enumerable, non-writable property\n\n            try {\n              descriptor[this.expando] = {\n                value: unlock\n              };\n              Object.defineProperties(owner, descriptor); // Support: Android<4\n              // Fallback to a less secure definition\n            } catch (e) {\n              descriptor[this.expando] = unlock;\n              jQuery.extend(owner, descriptor);\n            }\n          } // Ensure the cache object\n\n\n          if (!this.cache[unlock]) {\n            this.cache[unlock] = {};\n          }\n\n          return unlock;\n        },\n        set: function set(owner, data, value) {\n          var prop,\n              // There may be an unlock assigned to this node,\n          // if there is no entry for this \"owner\", create one inline\n          // and set the unlock as though an owner entry had always existed\n          unlock = this.key(owner),\n              cache = this.cache[unlock]; // Handle: [ owner, key, value ] args\n\n          if (typeof data === \"string\") {\n            cache[data] = value; // Handle: [ owner, { properties } ] args\n          } else {\n            // Fresh assignments by object are shallow copied\n            if (jQuery.isEmptyObject(cache)) {\n              jQuery.extend(this.cache[unlock], data); // Otherwise, copy the properties one-by-one to the cache object\n            } else {\n              for (prop in data) {\n                cache[prop] = data[prop];\n              }\n            }\n          }\n\n          return cache;\n        },\n        get: function get(owner, key) {\n          // Either a valid cache is found, or will be created.\n          // New caches will be created and the unlock returned,\n          // allowing direct access to the newly created\n          // empty data object. A valid owner object must be provided.\n          var cache = this.cache[this.key(owner)];\n          return key === undefined ? cache : cache[key];\n        },\n        access: function access(owner, key, value) {\n          var stored; // In cases where either:\n          //\n          //   1. No key was specified\n          //   2. A string key was specified, but no value provided\n          //\n          // Take the \"read\" path and allow the get method to determine\n          // which value to return, respectively either:\n          //\n          //   1. The entire cache object\n          //   2. The data stored at the key\n          //\n\n          if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n            stored = this.get(owner, key);\n            return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key));\n          } // [*]When the key is not a string, or both a key and value\n          // are specified, set or extend (existing objects) with either:\n          //\n          //   1. An object of properties\n          //   2. A key and value\n          //\n\n\n          this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n          // return the expected data based on which path was taken[*]\n\n          return value !== undefined ? value : key;\n        },\n        remove: function remove(owner, key) {\n          var i,\n              name,\n              camel,\n              unlock = this.key(owner),\n              cache = this.cache[unlock];\n\n          if (key === undefined) {\n            this.cache[unlock] = {};\n          } else {\n            // Support array or space separated string of keys\n            if (jQuery.isArray(key)) {\n              // If \"name\" is an array of keys...\n              // When data is initially created, via (\"key\", \"val\") signature,\n              // keys will be converted to camelCase.\n              // Since there is no way to tell _how_ a key was added, remove\n              // both plain key and camelCase key. #12786\n              // This will only penalize the array argument path.\n              name = key.concat(key.map(jQuery.camelCase));\n            } else {\n              camel = jQuery.camelCase(key); // Try the string as a key before any manipulation\n\n              if (key in cache) {\n                name = [key, camel];\n              } else {\n                // If a key with the spaces exists, use it.\n                // Otherwise, create an array by matching non-whitespace\n                name = camel;\n                name = name in cache ? [name] : name.match(rnotwhite) || [];\n              }\n            }\n\n            i = name.length;\n\n            while (i--) {\n              delete cache[name[i]];\n            }\n          }\n        },\n        hasData: function hasData(owner) {\n          return !jQuery.isEmptyObject(this.cache[owner[this.expando]] || {});\n        },\n        discard: function discard(owner) {\n          if (owner[this.expando]) {\n            delete this.cache[owner[this.expando]];\n          }\n        }\n      };\n      var data_priv = new Data();\n      var data_user = new Data(); //\tImplementation Summary\n      //\n      //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n      //\t2. Improve the module's maintainability by reducing the storage\n      //\t\tpaths to a single mechanism.\n      //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n      //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n      //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n      //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n      var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n          rmultiDash = /([A-Z])/g;\n\n      function dataAttr(elem, key, data) {\n        var name; // If nothing was found internally, try to fetch any\n        // data from the HTML5 data-* attribute\n\n        if (data === undefined && elem.nodeType === 1) {\n          name = \"data-\" + key.replace(rmultiDash, \"-$1\").toLowerCase();\n          data = elem.getAttribute(name);\n\n          if (typeof data === \"string\") {\n            try {\n              data = data === \"true\" ? true : data === \"false\" ? false : data === \"null\" ? null : // Only convert to a number if it doesn't change the string\n              +data + \"\" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;\n            } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n            data_user.set(elem, key, data);\n          } else {\n            data = undefined;\n          }\n        }\n\n        return data;\n      }\n\n      jQuery.extend({\n        hasData: function hasData(elem) {\n          return data_user.hasData(elem) || data_priv.hasData(elem);\n        },\n        data: function data(elem, name, _data) {\n          return data_user.access(elem, name, _data);\n        },\n        removeData: function removeData(elem, name) {\n          data_user.remove(elem, name);\n        },\n        // TODO: Now that all calls to _data and _removeData have been replaced\n        // with direct calls to data_priv methods, these can be deprecated.\n        _data: function _data(elem, name, data) {\n          return data_priv.access(elem, name, data);\n        },\n        _removeData: function _removeData(elem, name) {\n          data_priv.remove(elem, name);\n        }\n      });\n      jQuery.fn.extend({\n        data: function data(key, value) {\n          var i,\n              name,\n              data,\n              elem = this[0],\n              attrs = elem && elem.attributes; // Gets all values\n\n          if (key === undefined) {\n            if (this.length) {\n              data = data_user.get(elem);\n\n              if (elem.nodeType === 1 && !data_priv.get(elem, \"hasDataAttrs\")) {\n                i = attrs.length;\n\n                while (i--) {\n                  // Support: IE11+\n                  // The attrs elements can be null (#14894)\n                  if (attrs[i]) {\n                    name = attrs[i].name;\n\n                    if (name.indexOf(\"data-\") === 0) {\n                      name = jQuery.camelCase(name.slice(5));\n                      dataAttr(elem, name, data[name]);\n                    }\n                  }\n                }\n\n                data_priv.set(elem, \"hasDataAttrs\", true);\n              }\n            }\n\n            return data;\n          } // Sets multiple values\n\n\n          if (_typeof2(key) === \"object\") {\n            return this.each(function () {\n              data_user.set(this, key);\n            });\n          }\n\n          return access(this, function (value) {\n            var data,\n                camelKey = jQuery.camelCase(key); // The calling jQuery object (element matches) is not empty\n            // (and therefore has an element appears at this[ 0 ]) and the\n            // `value` parameter was not undefined. An empty jQuery object\n            // will result in `undefined` for elem = this[ 0 ] which will\n            // throw an exception if an attempt to read a data cache is made.\n\n            if (elem && value === undefined) {\n              // Attempt to get data from the cache\n              // with the key as-is\n              data = data_user.get(elem, key);\n\n              if (data !== undefined) {\n                return data;\n              } // Attempt to get data from the cache\n              // with the key camelized\n\n\n              data = data_user.get(elem, camelKey);\n\n              if (data !== undefined) {\n                return data;\n              } // Attempt to \"discover\" the data in\n              // HTML5 custom data-* attrs\n\n\n              data = dataAttr(elem, camelKey, undefined);\n\n              if (data !== undefined) {\n                return data;\n              } // We tried really hard, but the data doesn't exist.\n\n\n              return;\n            } // Set the data...\n\n\n            this.each(function () {\n              // First, attempt to store a copy or reference of any\n              // data that might've been store with a camelCased key.\n              var data = data_user.get(this, camelKey); // For HTML5 data-* attribute interop, we have to\n              // store property names with dashes in a camelCase form.\n              // This might not apply to all properties...*\n\n              data_user.set(this, camelKey, value); // *... In the case of properties that might _actually_\n              // have dashes, we need to also store a copy of that\n              // unchanged property.\n\n              if (key.indexOf(\"-\") !== -1 && data !== undefined) {\n                data_user.set(this, key, value);\n              }\n            });\n          }, null, value, arguments.length > 1, null, true);\n        },\n        removeData: function removeData(key) {\n          return this.each(function () {\n            data_user.remove(this, key);\n          });\n        }\n      });\n      jQuery.extend({\n        queue: function queue(elem, type, data) {\n          var queue;\n\n          if (elem) {\n            type = (type || \"fx\") + \"queue\";\n            queue = data_priv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n            if (data) {\n              if (!queue || jQuery.isArray(data)) {\n                queue = data_priv.access(elem, type, jQuery.makeArray(data));\n              } else {\n                queue.push(data);\n              }\n            }\n\n            return queue || [];\n          }\n        },\n        dequeue: function dequeue(elem, type) {\n          type = type || \"fx\";\n\n          var queue = jQuery.queue(elem, type),\n              startLength = queue.length,\n              fn = queue.shift(),\n              hooks = jQuery._queueHooks(elem, type),\n              next = function next() {\n            jQuery.dequeue(elem, type);\n          }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n          if (fn === \"inprogress\") {\n            fn = queue.shift();\n            startLength--;\n          }\n\n          if (fn) {\n            // Add a progress sentinel to prevent the fx queue from being\n            // automatically dequeued\n            if (type === \"fx\") {\n              queue.unshift(\"inprogress\");\n            } // Clear up the last queue stop function\n\n\n            delete hooks.stop;\n            fn.call(elem, next, hooks);\n          }\n\n          if (!startLength && hooks) {\n            hooks.empty.fire();\n          }\n        },\n        // Not public - generate a queueHooks object, or return the current one\n        _queueHooks: function _queueHooks(elem, type) {\n          var key = type + \"queueHooks\";\n          return data_priv.get(elem, key) || data_priv.access(elem, key, {\n            empty: jQuery.Callbacks(\"once memory\").add(function () {\n              data_priv.remove(elem, [type + \"queue\", key]);\n            })\n          });\n        }\n      });\n      jQuery.fn.extend({\n        queue: function queue(type, data) {\n          var setter = 2;\n\n          if (typeof type !== \"string\") {\n            data = type;\n            type = \"fx\";\n            setter--;\n          }\n\n          if (arguments.length < setter) {\n            return jQuery.queue(this[0], type);\n          }\n\n          return data === undefined ? this : this.each(function () {\n            var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n            jQuery._queueHooks(this, type);\n\n            if (type === \"fx\" && queue[0] !== \"inprogress\") {\n              jQuery.dequeue(this, type);\n            }\n          });\n        },\n        dequeue: function dequeue(type) {\n          return this.each(function () {\n            jQuery.dequeue(this, type);\n          });\n        },\n        clearQueue: function clearQueue(type) {\n          return this.queue(type || \"fx\", []);\n        },\n        // Get a promise resolved when queues of a certain type\n        // are emptied (fx is the type by default)\n        promise: function promise(type, obj) {\n          var tmp,\n              count = 1,\n              defer = jQuery.Deferred(),\n              elements = this,\n              i = this.length,\n              resolve = function resolve() {\n            if (! --count) {\n              defer.resolveWith(elements, [elements]);\n            }\n          };\n\n          if (typeof type !== \"string\") {\n            obj = type;\n            type = undefined;\n          }\n\n          type = type || \"fx\";\n\n          while (i--) {\n            tmp = data_priv.get(elements[i], type + \"queueHooks\");\n\n            if (tmp && tmp.empty) {\n              count++;\n              tmp.empty.add(resolve);\n            }\n          }\n\n          resolve();\n          return defer.promise(obj);\n        }\n      });\n      var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n      var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n\n      var isHidden = function isHidden(elem, el) {\n        // isHidden might be called from jQuery#filter function;\n        // in that case, element will be second argument\n        elem = el || elem;\n        return jQuery.css(elem, \"display\") === \"none\" || !jQuery.contains(elem.ownerDocument, elem);\n      };\n\n      var rcheckableType = /^(?:checkbox|radio)$/i;\n\n      (function () {\n        var fragment = document.createDocumentFragment(),\n            div = fragment.appendChild(document.createElement(\"div\")),\n            input = document.createElement(\"input\"); // Support: Safari<=5.1\n        // Check state lost if the name is set (#11217)\n        // Support: Windows Web Apps (WWA)\n        // `name` and `type` must use .setAttribute for WWA (#14901)\n\n        input.setAttribute(\"type\", \"radio\");\n        input.setAttribute(\"checked\", \"checked\");\n        input.setAttribute(\"name\", \"t\");\n        div.appendChild(input); // Support: Safari<=5.1, Android<4.2\n        // Older WebKit doesn't clone checked state correctly in fragments\n\n        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE<=11+\n        // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n        div.innerHTML = \"<textarea>x</textarea>\";\n        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n      })();\n\n      var strundefined =  true ? \"undefined\" : undefined;\n      support.focusinBubbles = \"onfocusin\" in window;\n      var rkeyEvent = /^key/,\n          rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n          rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n          rtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\n      function returnTrue() {\n        return true;\n      }\n\n      function returnFalse() {\n        return false;\n      }\n\n      function safeActiveElement() {\n        try {\n          return document.activeElement;\n        } catch (err) {}\n      }\n      /*\r\n       * Helper functions for managing events -- not part of the public interface.\r\n       * Props to Dean Edwards' addEvent library for many of the ideas.\r\n       */\n\n\n      jQuery.event = {\n        global: {},\n        add: function add(elem, types, handler, data, selector) {\n          var handleObjIn,\n              eventHandle,\n              tmp,\n              events,\n              t,\n              handleObj,\n              special,\n              handlers,\n              type,\n              namespaces,\n              origType,\n              elemData = data_priv.get(elem); // Don't attach events to noData or text/comment nodes (but allow plain objects)\n\n          if (!elemData) {\n            return;\n          } // Caller can pass in an object of custom data in lieu of the handler\n\n\n          if (handler.handler) {\n            handleObjIn = handler;\n            handler = handleObjIn.handler;\n            selector = handleObjIn.selector;\n          } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n          if (!handler.guid) {\n            handler.guid = jQuery.guid++;\n          } // Init the element's event structure and main handler, if this is the first\n\n\n          if (!(events = elemData.events)) {\n            events = elemData.events = {};\n          }\n\n          if (!(eventHandle = elemData.handle)) {\n            eventHandle = elemData.handle = function (e) {\n              // Discard the second event of a jQuery.event.trigger() and\n              // when an event is called after a page has unloaded\n              return _typeof2(jQuery) !== strundefined && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n            };\n          } // Handle multiple events separated by a space\n\n\n          types = (types || \"\").match(rnotwhite) || [\"\"];\n          t = types.length;\n\n          while (t--) {\n            tmp = rtypenamespace.exec(types[t]) || [];\n            type = origType = tmp[1];\n            namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n            if (!type) {\n              continue;\n            } // If event changes its type, use the special event handlers for the changed type\n\n\n            special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n            type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n            special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n            handleObj = jQuery.extend({\n              type: type,\n              origType: origType,\n              data: data,\n              handler: handler,\n              guid: handler.guid,\n              selector: selector,\n              needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n              namespace: namespaces.join(\".\")\n            }, handleObjIn); // Init the event handler queue if we're the first\n\n            if (!(handlers = events[type])) {\n              handlers = events[type] = [];\n              handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n              if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n                if (elem.addEventListener) {\n                  elem.addEventListener(type, eventHandle, false);\n                }\n              }\n            }\n\n            if (special.add) {\n              special.add.call(elem, handleObj);\n\n              if (!handleObj.handler.guid) {\n                handleObj.handler.guid = handler.guid;\n              }\n            } // Add to the element's handler list, delegates in front\n\n\n            if (selector) {\n              handlers.splice(handlers.delegateCount++, 0, handleObj);\n            } else {\n              handlers.push(handleObj);\n            } // Keep track of which events have ever been used, for event optimization\n\n\n            jQuery.event.global[type] = true;\n          }\n        },\n        // Detach an event or set of events from an element\n        remove: function remove(elem, types, handler, selector, mappedTypes) {\n          var j,\n              origCount,\n              tmp,\n              events,\n              t,\n              handleObj,\n              special,\n              handlers,\n              type,\n              namespaces,\n              origType,\n              elemData = data_priv.hasData(elem) && data_priv.get(elem);\n\n          if (!elemData || !(events = elemData.events)) {\n            return;\n          } // Once for each type.namespace in types; type may be omitted\n\n\n          types = (types || \"\").match(rnotwhite) || [\"\"];\n          t = types.length;\n\n          while (t--) {\n            tmp = rtypenamespace.exec(types[t]) || [];\n            type = origType = tmp[1];\n            namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n            if (!type) {\n              for (type in events) {\n                jQuery.event.remove(elem, type + types[t], handler, selector, true);\n              }\n\n              continue;\n            }\n\n            special = jQuery.event.special[type] || {};\n            type = (selector ? special.delegateType : special.bindType) || type;\n            handlers = events[type] || [];\n            tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n            origCount = j = handlers.length;\n\n            while (j--) {\n              handleObj = handlers[j];\n\n              if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n                handlers.splice(j, 1);\n\n                if (handleObj.selector) {\n                  handlers.delegateCount--;\n                }\n\n                if (special.remove) {\n                  special.remove.call(elem, handleObj);\n                }\n              }\n            } // Remove generic event handler if we removed something and no more handlers exist\n            // (avoids potential for endless recursion during removal of special event handlers)\n\n\n            if (origCount && !handlers.length) {\n              if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n                jQuery.removeEvent(elem, type, elemData.handle);\n              }\n\n              delete events[type];\n            }\n          } // Remove the expando if it's no longer used\n\n\n          if (jQuery.isEmptyObject(events)) {\n            delete elemData.handle;\n            data_priv.remove(elem, \"events\");\n          }\n        },\n        trigger: function trigger(event, data, elem, onlyHandlers) {\n          var i,\n              cur,\n              tmp,\n              bubbleType,\n              ontype,\n              handle,\n              special,\n              eventPath = [elem || document],\n              type = hasOwn.call(event, \"type\") ? event.type : event,\n              namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n          cur = tmp = elem = elem || document; // Don't do events on text and comment nodes\n\n          if (elem.nodeType === 3 || elem.nodeType === 8) {\n            return;\n          } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n          if (rfocusMorph.test(type + jQuery.event.triggered)) {\n            return;\n          }\n\n          if (type.indexOf(\".\") >= 0) {\n            // Namespaced trigger; create a regexp to match event type in handle()\n            namespaces = type.split(\".\");\n            type = namespaces.shift();\n            namespaces.sort();\n          }\n\n          ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n          event = event[jQuery.expando] ? event : new jQuery.Event(type, _typeof2(event) === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n          event.isTrigger = onlyHandlers ? 2 : 3;\n          event.namespace = namespaces.join(\".\");\n          event.namespace_re = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n          event.result = undefined;\n\n          if (!event.target) {\n            event.target = elem;\n          } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n          data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n          special = jQuery.event.special[type] || {};\n\n          if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n            return;\n          } // Determine event propagation path in advance, per W3C events spec (#9951)\n          // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n          if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n            bubbleType = special.delegateType || type;\n\n            if (!rfocusMorph.test(bubbleType + type)) {\n              cur = cur.parentNode;\n            }\n\n            for (; cur; cur = cur.parentNode) {\n              eventPath.push(cur);\n              tmp = cur;\n            } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n            if (tmp === (elem.ownerDocument || document)) {\n              eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n            }\n          } // Fire handlers on the event path\n\n\n          i = 0;\n\n          while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n            event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n            handle = (data_priv.get(cur, \"events\") || {})[event.type] && data_priv.get(cur, \"handle\");\n\n            if (handle) {\n              handle.apply(cur, data);\n            } // Native handler\n\n\n            handle = ontype && cur[ontype];\n\n            if (handle && handle.apply && jQuery.acceptData(cur)) {\n              event.result = handle.apply(cur, data);\n\n              if (event.result === false) {\n                event.preventDefault();\n              }\n            }\n          }\n\n          event.type = type; // If nobody prevented the default action, do it now\n\n          if (!onlyHandlers && !event.isDefaultPrevented()) {\n            if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && jQuery.acceptData(elem)) {\n              // Call a native DOM method on the target with the same name name as the event.\n              // Don't do default actions on window, that's where global variables be (#6170)\n              if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\n                // Don't re-trigger an onFOO event when we call its FOO() method\n                tmp = elem[ontype];\n\n                if (tmp) {\n                  elem[ontype] = null;\n                } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n                jQuery.event.triggered = type;\n                elem[type]();\n                jQuery.event.triggered = undefined;\n\n                if (tmp) {\n                  elem[ontype] = tmp;\n                }\n              }\n            }\n          }\n\n          return event.result;\n        },\n        dispatch: function dispatch(event) {\n          // Make a writable jQuery.Event from the native event object\n          event = jQuery.event.fix(event);\n\n          var i,\n              j,\n              ret,\n              matched,\n              handleObj,\n              handlerQueue = [],\n              args = _slice.call(arguments),\n              handlers = (data_priv.get(this, \"events\") || {})[event.type] || [],\n              special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n\n          args[0] = event;\n          event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n          if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n            return;\n          } // Determine handlers\n\n\n          handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n          i = 0;\n\n          while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n            event.currentTarget = matched.elem;\n            j = 0;\n\n            while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n              // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n              // a subset or equal to those in the bound event (both can have no namespace).\n              if (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) {\n                event.handleObj = handleObj;\n                event.data = handleObj.data;\n                ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n                if (ret !== undefined) {\n                  if ((event.result = ret) === false) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                  }\n                }\n              }\n            }\n          } // Call the postDispatch hook for the mapped type\n\n\n          if (special.postDispatch) {\n            special.postDispatch.call(this, event);\n          }\n\n          return event.result;\n        },\n        handlers: function handlers(event, _handlers) {\n          var i,\n              matches,\n              sel,\n              handleObj,\n              handlerQueue = [],\n              delegateCount = _handlers.delegateCount,\n              cur = event.target; // Find delegate handlers\n          // Black-hole SVG <use> instance trees (#13180)\n          // Avoid non-left-click bubbling in Firefox (#3861)\n\n          if (delegateCount && cur.nodeType && (!event.button || event.type !== \"click\")) {\n            for (; cur !== this; cur = cur.parentNode || this) {\n              // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n              if (cur.disabled !== true || event.type !== \"click\") {\n                matches = [];\n\n                for (i = 0; i < delegateCount; i++) {\n                  handleObj = _handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n                  sel = handleObj.selector + \" \";\n\n                  if (matches[sel] === undefined) {\n                    matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length;\n                  }\n\n                  if (matches[sel]) {\n                    matches.push(handleObj);\n                  }\n                }\n\n                if (matches.length) {\n                  handlerQueue.push({\n                    elem: cur,\n                    handlers: matches\n                  });\n                }\n              }\n            }\n          } // Add the remaining (directly-bound) handlers\n\n\n          if (delegateCount < _handlers.length) {\n            handlerQueue.push({\n              elem: this,\n              handlers: _handlers.slice(delegateCount)\n            });\n          }\n\n          return handlerQueue;\n        },\n        // Includes some event props shared by KeyEvent and MouseEvent\n        props: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n        fixHooks: {},\n        keyHooks: {\n          props: \"char charCode key keyCode\".split(\" \"),\n          filter: function filter(event, original) {\n            // Add which for key events\n            if (event.which == null) {\n              event.which = original.charCode != null ? original.charCode : original.keyCode;\n            }\n\n            return event;\n          }\n        },\n        mouseHooks: {\n          props: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n          filter: function filter(event, original) {\n            var eventDoc,\n                doc,\n                body,\n                button = original.button; // Calculate pageX/Y if missing and clientX/Y available\n\n            if (event.pageX == null && original.clientX != null) {\n              eventDoc = event.target.ownerDocument || document;\n              doc = eventDoc.documentElement;\n              body = eventDoc.body;\n              event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n              event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n            } // Add which for click: 1 === left; 2 === middle; 3 === right\n            // Note: button is not normalized, so don't use it\n\n\n            if (!event.which && button !== undefined) {\n              event.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n            }\n\n            return event;\n          }\n        },\n        fix: function fix(event) {\n          if (event[jQuery.expando]) {\n            return event;\n          } // Create a writable copy of the event object and normalize some properties\n\n\n          var i,\n              prop,\n              copy,\n              type = event.type,\n              originalEvent = event,\n              fixHook = this.fixHooks[type];\n\n          if (!fixHook) {\n            this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};\n          }\n\n          copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;\n          event = new jQuery.Event(originalEvent);\n          i = copy.length;\n\n          while (i--) {\n            prop = copy[i];\n            event[prop] = originalEvent[prop];\n          } // Support: Cordova 2.5 (WebKit) (#13255)\n          // All events should have a target; Cordova deviceready doesn't\n\n\n          if (!event.target) {\n            event.target = document;\n          } // Support: Safari 6.0+, Chrome<28\n          // Target should not be a text node (#504, #13143)\n\n\n          if (event.target.nodeType === 3) {\n            event.target = event.target.parentNode;\n          }\n\n          return fixHook.filter ? fixHook.filter(event, originalEvent) : event;\n        },\n        special: {\n          load: {\n            // Prevent triggered image.load events from bubbling to window.load\n            noBubble: true\n          },\n          focus: {\n            // Fire native event if possible so blur/focus sequence is correct\n            trigger: function trigger() {\n              if (this !== safeActiveElement() && this.focus) {\n                this.focus();\n                return false;\n              }\n            },\n            delegateType: \"focusin\"\n          },\n          blur: {\n            trigger: function trigger() {\n              if (this === safeActiveElement() && this.blur) {\n                this.blur();\n                return false;\n              }\n            },\n            delegateType: \"focusout\"\n          },\n          click: {\n            // For checkbox, fire native event so checked state will be right\n            trigger: function trigger() {\n              if (this.type === \"checkbox\" && this.click && jQuery.nodeName(this, \"input\")) {\n                this.click();\n                return false;\n              }\n            },\n            // For cross-browser consistency, don't fire native .click() on links\n            _default: function _default(event) {\n              return jQuery.nodeName(event.target, \"a\");\n            }\n          },\n          beforeunload: {\n            postDispatch: function postDispatch(event) {\n              // Support: Firefox 20+\n              // Firefox doesn't alert if the returnValue field is not set.\n              if (event.result !== undefined && event.originalEvent) {\n                event.originalEvent.returnValue = event.result;\n              }\n            }\n          }\n        },\n        simulate: function simulate(type, elem, event, bubble) {\n          // Piggyback on a donor event to simulate a different one.\n          // Fake originalEvent to avoid donor's stopPropagation, but if the\n          // simulated event prevents default then we do the same on the donor.\n          var e = jQuery.extend(new jQuery.Event(), event, {\n            type: type,\n            isSimulated: true,\n            originalEvent: {}\n          });\n\n          if (bubble) {\n            jQuery.event.trigger(e, null, elem);\n          } else {\n            jQuery.event.dispatch.call(elem, e);\n          }\n\n          if (e.isDefaultPrevented()) {\n            event.preventDefault();\n          }\n        }\n      };\n\n      jQuery.removeEvent = function (elem, type, handle) {\n        if (elem.removeEventListener) {\n          elem.removeEventListener(type, handle, false);\n        }\n      };\n\n      jQuery.Event = function (src, props) {\n        // Allow instantiation without the 'new' keyword\n        if (!(this instanceof jQuery.Event)) {\n          return new jQuery.Event(src, props);\n        } // Event object\n\n\n        if (src && src.type) {\n          this.originalEvent = src;\n          this.type = src.type; // Events bubbling up the document may have been marked as prevented\n          // by a handler lower down the tree; reflect the correct value.\n\n          this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android<4.0\n          src.returnValue === false ? returnTrue : returnFalse; // Event type\n        } else {\n          this.type = src;\n        } // Put explicitly provided properties onto the event object\n\n\n        if (props) {\n          jQuery.extend(this, props);\n        } // Create a timestamp if incoming event doesn't have one\n\n\n        this.timeStamp = src && src.timeStamp || jQuery.now(); // Mark it as fixed\n\n        this[jQuery.expando] = true;\n      }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n      // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n      jQuery.Event.prototype = {\n        isDefaultPrevented: returnFalse,\n        isPropagationStopped: returnFalse,\n        isImmediatePropagationStopped: returnFalse,\n        preventDefault: function preventDefault() {\n          var e = this.originalEvent;\n          this.isDefaultPrevented = returnTrue;\n\n          if (e && e.preventDefault) {\n            e.preventDefault();\n          }\n        },\n        stopPropagation: function stopPropagation() {\n          var e = this.originalEvent;\n          this.isPropagationStopped = returnTrue;\n\n          if (e && e.stopPropagation) {\n            e.stopPropagation();\n          }\n        },\n        stopImmediatePropagation: function stopImmediatePropagation() {\n          var e = this.originalEvent;\n          this.isImmediatePropagationStopped = returnTrue;\n\n          if (e && e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n          }\n\n          this.stopPropagation();\n        }\n      }; // Create mouseenter/leave events using mouseover/out and event-time checks\n      // Support: Chrome 15+\n\n      jQuery.each({\n        mouseenter: \"mouseover\",\n        mouseleave: \"mouseout\",\n        pointerenter: \"pointerover\",\n        pointerleave: \"pointerout\"\n      }, function (orig, fix) {\n        jQuery.event.special[orig] = {\n          delegateType: fix,\n          bindType: fix,\n          handle: function handle(event) {\n            var ret,\n                target = this,\n                related = event.relatedTarget,\n                handleObj = event.handleObj; // For mousenter/leave call the handler if related is outside the target.\n            // NB: No relatedTarget if the mouse left/entered the browser window\n\n            if (!related || related !== target && !jQuery.contains(target, related)) {\n              event.type = handleObj.origType;\n              ret = handleObj.handler.apply(this, arguments);\n              event.type = fix;\n            }\n\n            return ret;\n          }\n        };\n      }); // Support: Firefox, Chrome, Safari\n      // Create \"bubbling\" focus and blur events\n\n      if (!support.focusinBubbles) {\n        jQuery.each({\n          focus: \"focusin\",\n          blur: \"focusout\"\n        }, function (orig, fix) {\n          // Attach a single capturing handler on the document while someone wants focusin/focusout\n          var handler = function handler(event) {\n            jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);\n          };\n\n          jQuery.event.special[fix] = {\n            setup: function setup() {\n              var doc = this.ownerDocument || this,\n                  attaches = data_priv.access(doc, fix);\n\n              if (!attaches) {\n                doc.addEventListener(orig, handler, true);\n              }\n\n              data_priv.access(doc, fix, (attaches || 0) + 1);\n            },\n            teardown: function teardown() {\n              var doc = this.ownerDocument || this,\n                  attaches = data_priv.access(doc, fix) - 1;\n\n              if (!attaches) {\n                doc.removeEventListener(orig, handler, true);\n                data_priv.remove(doc, fix);\n              } else {\n                data_priv.access(doc, fix, attaches);\n              }\n            }\n          };\n        });\n      }\n\n      jQuery.fn.extend({\n        on: function on(types, selector, data, fn,\n        /*INTERNAL*/\n        one) {\n          var origFn, type; // Types can be a map of types/handlers\n\n          if (_typeof2(types) === \"object\") {\n            // ( types-Object, selector, data )\n            if (typeof selector !== \"string\") {\n              // ( types-Object, data )\n              data = data || selector;\n              selector = undefined;\n            }\n\n            for (type in types) {\n              this.on(type, selector, data, types[type], one);\n            }\n\n            return this;\n          }\n\n          if (data == null && fn == null) {\n            // ( types, fn )\n            fn = selector;\n            data = selector = undefined;\n          } else if (fn == null) {\n            if (typeof selector === \"string\") {\n              // ( types, selector, fn )\n              fn = data;\n              data = undefined;\n            } else {\n              // ( types, data, fn )\n              fn = data;\n              data = selector;\n              selector = undefined;\n            }\n          }\n\n          if (fn === false) {\n            fn = returnFalse;\n          } else if (!fn) {\n            return this;\n          }\n\n          if (one === 1) {\n            origFn = fn;\n\n            fn = function fn(event) {\n              // Can use an empty set, since event contains the info\n              jQuery().off(event);\n              return origFn.apply(this, arguments);\n            }; // Use same guid so caller can remove using origFn\n\n\n            fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n          }\n\n          return this.each(function () {\n            jQuery.event.add(this, types, fn, data, selector);\n          });\n        },\n        one: function one(types, selector, data, fn) {\n          return this.on(types, selector, data, fn, 1);\n        },\n        off: function off(types, selector, fn) {\n          var handleObj, type;\n\n          if (types && types.preventDefault && types.handleObj) {\n            // ( event )  dispatched jQuery.Event\n            handleObj = types.handleObj;\n            jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n            return this;\n          }\n\n          if (_typeof2(types) === \"object\") {\n            // ( types-object [, selector] )\n            for (type in types) {\n              this.off(type, selector, types[type]);\n            }\n\n            return this;\n          }\n\n          if (selector === false || typeof selector === \"function\") {\n            // ( types [, fn] )\n            fn = selector;\n            selector = undefined;\n          }\n\n          if (fn === false) {\n            fn = returnFalse;\n          }\n\n          return this.each(function () {\n            jQuery.event.remove(this, types, fn, selector);\n          });\n        },\n        trigger: function trigger(type, data) {\n          return this.each(function () {\n            jQuery.event.trigger(type, data, this);\n          });\n        },\n        triggerHandler: function triggerHandler(type, data) {\n          var elem = this[0];\n\n          if (elem) {\n            return jQuery.event.trigger(type, data, elem, true);\n          }\n        }\n      });\n      var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n          rtagName = /<([\\w:]+)/,\n          rhtml = /<|&#?\\w+;/,\n          rnoInnerhtml = /<(?:script|style|link)/i,\n          // checked=\"checked\" or checked\n      rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n          rscriptType = /^$|\\/(?:java|ecma)script/i,\n          rscriptTypeMasked = /^true\\/(.*)/,\n          rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n          // We have to close these tags to support XHTML (#13200)\n      wrapMap = {\n        // Support: IE9\n        option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n        thead: [1, \"<table>\", \"</table>\"],\n        col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n        tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n        td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        _default: [0, \"\", \"\"]\n      }; // Support: IE9\n\n      wrapMap.optgroup = wrapMap.option;\n      wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n      wrapMap.th = wrapMap.td; // Support: 1.x compatibility\n      // Manipulating tables requires a tbody\n\n      function manipulationTarget(elem, content) {\n        return jQuery.nodeName(elem, \"table\") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\") ? elem.getElementsByTagName(\"tbody\")[0] || elem.appendChild(elem.ownerDocument.createElement(\"tbody\")) : elem;\n      } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n      function disableScript(elem) {\n        elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n        return elem;\n      }\n\n      function restoreScript(elem) {\n        var match = rscriptTypeMasked.exec(elem.type);\n\n        if (match) {\n          elem.type = match[1];\n        } else {\n          elem.removeAttribute(\"type\");\n        }\n\n        return elem;\n      } // Mark scripts as having already been evaluated\n\n\n      function setGlobalEval(elems, refElements) {\n        var i = 0,\n            l = elems.length;\n\n        for (; i < l; i++) {\n          data_priv.set(elems[i], \"globalEval\", !refElements || data_priv.get(refElements[i], \"globalEval\"));\n        }\n      }\n\n      function cloneCopyEvent(src, dest) {\n        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n        if (dest.nodeType !== 1) {\n          return;\n        } // 1. Copy private data: events, handlers, etc.\n\n\n        if (data_priv.hasData(src)) {\n          pdataOld = data_priv.access(src);\n          pdataCur = data_priv.set(dest, pdataOld);\n          events = pdataOld.events;\n\n          if (events) {\n            delete pdataCur.handle;\n            pdataCur.events = {};\n\n            for (type in events) {\n              for (i = 0, l = events[type].length; i < l; i++) {\n                jQuery.event.add(dest, type, events[type][i]);\n              }\n            }\n          }\n        } // 2. Copy user data\n\n\n        if (data_user.hasData(src)) {\n          udataOld = data_user.access(src);\n          udataCur = jQuery.extend({}, udataOld);\n          data_user.set(dest, udataCur);\n        }\n      }\n\n      function getAll(context, tag) {\n        var ret = context.getElementsByTagName ? context.getElementsByTagName(tag || \"*\") : context.querySelectorAll ? context.querySelectorAll(tag || \"*\") : [];\n        return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret;\n      } // Fix IE bugs, see support tests\n\n\n      function fixInput(src, dest) {\n        var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n        if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n          dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n        } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n          dest.defaultValue = src.defaultValue;\n        }\n      }\n\n      jQuery.extend({\n        clone: function clone(elem, dataAndEvents, deepDataAndEvents) {\n          var i,\n              l,\n              srcElements,\n              destElements,\n              clone = elem.cloneNode(true),\n              inPage = jQuery.contains(elem.ownerDocument, elem); // Fix IE cloning issues\n\n          if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n            // We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n            destElements = getAll(clone);\n            srcElements = getAll(elem);\n\n            for (i = 0, l = srcElements.length; i < l; i++) {\n              fixInput(srcElements[i], destElements[i]);\n            }\n          } // Copy the events from the original to the clone\n\n\n          if (dataAndEvents) {\n            if (deepDataAndEvents) {\n              srcElements = srcElements || getAll(elem);\n              destElements = destElements || getAll(clone);\n\n              for (i = 0, l = srcElements.length; i < l; i++) {\n                cloneCopyEvent(srcElements[i], destElements[i]);\n              }\n            } else {\n              cloneCopyEvent(elem, clone);\n            }\n          } // Preserve script evaluation history\n\n\n          destElements = getAll(clone, \"script\");\n\n          if (destElements.length > 0) {\n            setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n          } // Return the cloned set\n\n\n          return clone;\n        },\n        buildFragment: function buildFragment(elems, context, scripts, selection) {\n          var elem,\n              tmp,\n              tag,\n              wrap,\n              contains,\n              j,\n              fragment = context.createDocumentFragment(),\n              nodes = [],\n              i = 0,\n              l = elems.length;\n\n          for (; i < l; i++) {\n            elem = elems[i];\n\n            if (elem || elem === 0) {\n              // Add nodes directly\n              if (jQuery.type(elem) === \"object\") {\n                // Support: QtWebKit, PhantomJS\n                // push.apply(_, arraylike) throws on ancient WebKit\n                jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n              } else if (!rhtml.test(elem)) {\n                nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n              } else {\n                tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n                tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n                wrap = wrapMap[tag] || wrapMap._default;\n                tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, \"<$1></$2>\") + wrap[2]; // Descend through wrappers to the right content\n\n                j = wrap[0];\n\n                while (j--) {\n                  tmp = tmp.lastChild;\n                } // Support: QtWebKit, PhantomJS\n                // push.apply(_, arraylike) throws on ancient WebKit\n\n\n                jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n                tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n                tmp.textContent = \"\";\n              }\n            }\n          } // Remove wrapper from fragment\n\n\n          fragment.textContent = \"\";\n          i = 0;\n\n          while (elem = nodes[i++]) {\n            // #4087 - If origin and destination elements are the same, and this is\n            // that element, do not do anything\n            if (selection && jQuery.inArray(elem, selection) !== -1) {\n              continue;\n            }\n\n            contains = jQuery.contains(elem.ownerDocument, elem); // Append to fragment\n\n            tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n            if (contains) {\n              setGlobalEval(tmp);\n            } // Capture executables\n\n\n            if (scripts) {\n              j = 0;\n\n              while (elem = tmp[j++]) {\n                if (rscriptType.test(elem.type || \"\")) {\n                  scripts.push(elem);\n                }\n              }\n            }\n          }\n\n          return fragment;\n        },\n        cleanData: function cleanData(elems) {\n          var data,\n              elem,\n              type,\n              key,\n              special = jQuery.event.special,\n              i = 0;\n\n          for (; (elem = elems[i]) !== undefined; i++) {\n            if (jQuery.acceptData(elem)) {\n              key = elem[data_priv.expando];\n\n              if (key && (data = data_priv.cache[key])) {\n                if (data.events) {\n                  for (type in data.events) {\n                    if (special[type]) {\n                      jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n                    } else {\n                      jQuery.removeEvent(elem, type, data.handle);\n                    }\n                  }\n                }\n\n                if (data_priv.cache[key]) {\n                  // Discard any remaining `private` data\n                  delete data_priv.cache[key];\n                }\n              }\n            } // Discard any remaining `user` data\n\n\n            delete data_user.cache[elem[data_user.expando]];\n          }\n        }\n      });\n      jQuery.fn.extend({\n        text: function text(value) {\n          return access(this, function (value) {\n            return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n              if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                this.textContent = value;\n              }\n            });\n          }, null, value, arguments.length);\n        },\n        append: function append() {\n          return this.domManip(arguments, function (elem) {\n            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n              var target = manipulationTarget(this, elem);\n              target.appendChild(elem);\n            }\n          });\n        },\n        prepend: function prepend() {\n          return this.domManip(arguments, function (elem) {\n            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n              var target = manipulationTarget(this, elem);\n              target.insertBefore(elem, target.firstChild);\n            }\n          });\n        },\n        before: function before() {\n          return this.domManip(arguments, function (elem) {\n            if (this.parentNode) {\n              this.parentNode.insertBefore(elem, this);\n            }\n          });\n        },\n        after: function after() {\n          return this.domManip(arguments, function (elem) {\n            if (this.parentNode) {\n              this.parentNode.insertBefore(elem, this.nextSibling);\n            }\n          });\n        },\n        remove: function remove(selector, keepData\n        /* Internal Use Only */\n        ) {\n          var elem,\n              elems = selector ? jQuery.filter(selector, this) : this,\n              i = 0;\n\n          for (; (elem = elems[i]) != null; i++) {\n            if (!keepData && elem.nodeType === 1) {\n              jQuery.cleanData(getAll(elem));\n            }\n\n            if (elem.parentNode) {\n              if (keepData && jQuery.contains(elem.ownerDocument, elem)) {\n                setGlobalEval(getAll(elem, \"script\"));\n              }\n\n              elem.parentNode.removeChild(elem);\n            }\n          }\n\n          return this;\n        },\n        empty: function empty() {\n          var elem,\n              i = 0;\n\n          for (; (elem = this[i]) != null; i++) {\n            if (elem.nodeType === 1) {\n              // Prevent memory leaks\n              jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n              elem.textContent = \"\";\n            }\n          }\n\n          return this;\n        },\n        clone: function clone(dataAndEvents, deepDataAndEvents) {\n          dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n          deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n          return this.map(function () {\n            return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n          });\n        },\n        html: function html(value) {\n          return access(this, function (value) {\n            var elem = this[0] || {},\n                i = 0,\n                l = this.length;\n\n            if (value === undefined && elem.nodeType === 1) {\n              return elem.innerHTML;\n            } // See if we can take a shortcut and just use innerHTML\n\n\n            if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n              value = value.replace(rxhtmlTag, \"<$1></$2>\");\n\n              try {\n                for (; i < l; i++) {\n                  elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n                  if (elem.nodeType === 1) {\n                    jQuery.cleanData(getAll(elem, false));\n                    elem.innerHTML = value;\n                  }\n                }\n\n                elem = 0; // If using innerHTML throws an exception, use the fallback method\n              } catch (e) {}\n            }\n\n            if (elem) {\n              this.empty().append(value);\n            }\n          }, null, value, arguments.length);\n        },\n        replaceWith: function replaceWith() {\n          var arg = arguments[0]; // Make the changes, replacing each context element with the new content\n\n          this.domManip(arguments, function (elem) {\n            arg = this.parentNode;\n            jQuery.cleanData(getAll(this));\n\n            if (arg) {\n              arg.replaceChild(elem, this);\n            }\n          }); // Force removal if there was no new content (e.g., from empty arguments)\n\n          return arg && (arg.length || arg.nodeType) ? this : this.remove();\n        },\n        detach: function detach(selector) {\n          return this.remove(selector, true);\n        },\n        domManip: function domManip(args, callback) {\n          // Flatten any nested arrays\n          args = concat.apply([], args);\n          var fragment,\n              first,\n              scripts,\n              hasScripts,\n              node,\n              doc,\n              i = 0,\n              l = this.length,\n              set = this,\n              iNoClone = l - 1,\n              value = args[0],\n              isFunction = jQuery.isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n          if (isFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n            return this.each(function (index) {\n              var self = set.eq(index);\n\n              if (isFunction) {\n                args[0] = value.call(this, index, self.html());\n              }\n\n              self.domManip(args, callback);\n            });\n          }\n\n          if (l) {\n            fragment = jQuery.buildFragment(args, this[0].ownerDocument, false, this);\n            first = fragment.firstChild;\n\n            if (fragment.childNodes.length === 1) {\n              fragment = first;\n            }\n\n            if (first) {\n              scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n              hasScripts = scripts.length; // Use the original fragment for the last item instead of the first because it can end up\n              // being emptied incorrectly in certain situations (#8070).\n\n              for (; i < l; i++) {\n                node = fragment;\n\n                if (i !== iNoClone) {\n                  node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n                  if (hasScripts) {\n                    // Support: QtWebKit\n                    // jQuery.merge because push.apply(_, arraylike) throws\n                    jQuery.merge(scripts, getAll(node, \"script\"));\n                  }\n                }\n\n                callback.call(this[i], node, i);\n              }\n\n              if (hasScripts) {\n                doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n                jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n                for (i = 0; i < hasScripts; i++) {\n                  node = scripts[i];\n\n                  if (rscriptType.test(node.type || \"\") && !data_priv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n                    if (node.src) {\n                      // Optional AJAX dependency, but won't run scripts if not present\n                      if (jQuery._evalUrl) {\n                        jQuery._evalUrl(node.src);\n                      }\n                    } else {\n                      jQuery.globalEval(node.textContent.replace(rcleanScript, \"\"));\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          return this;\n        }\n      });\n      jQuery.each({\n        appendTo: \"append\",\n        prependTo: \"prepend\",\n        insertBefore: \"before\",\n        insertAfter: \"after\",\n        replaceAll: \"replaceWith\"\n      }, function (name, original) {\n        jQuery.fn[name] = function (selector) {\n          var elems,\n              ret = [],\n              insert = jQuery(selector),\n              last = insert.length - 1,\n              i = 0;\n\n          for (; i <= last; i++) {\n            elems = i === last ? this : this.clone(true);\n            jQuery(insert[i])[original](elems); // Support: QtWebKit\n            // .get() because push.apply(_, arraylike) throws\n\n            push.apply(ret, elems.get());\n          }\n\n          return this.pushStack(ret);\n        };\n      });\n      var iframe,\n          elemdisplay = {};\n      /**\r\n       * Retrieve the actual display of a element\r\n       * @param {String} name nodeName of the element\r\n       * @param {Object} doc Document object\r\n       */\n      // Called only from within defaultDisplay\n\n      function actualDisplay(name, doc) {\n        var style,\n            elem = jQuery(doc.createElement(name)).appendTo(doc.body),\n            // getDefaultComputedStyle might be reliably used only on attached element\n        display = window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0])) ? // Use of this method is a temporary fix (more like optimization) until something better comes along,\n        // since it was removed from specification and supported only in FF\n        style.display : jQuery.css(elem[0], \"display\"); // We don't have any data stored on the element,\n        // so use \"detach\" method as fast way to get rid of the element\n\n        elem.detach();\n        return display;\n      }\n      /**\r\n       * Try to determine the default display value of an element\r\n       * @param {String} nodeName\r\n       */\n\n\n      function defaultDisplay(nodeName) {\n        var doc = document,\n            display = elemdisplay[nodeName];\n\n        if (!display) {\n          display = actualDisplay(nodeName, doc); // If the simple way fails, read from inside an iframe\n\n          if (display === \"none\" || !display) {\n            // Use the already-created iframe if possible\n            iframe = (iframe || jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(doc.documentElement); // Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\n            doc = iframe[0].contentDocument; // Support: IE\n\n            doc.write();\n            doc.close();\n            display = actualDisplay(nodeName, doc);\n            iframe.detach();\n          } // Store the correct default display\n\n\n          elemdisplay[nodeName] = display;\n        }\n\n        return display;\n      }\n\n      var rmargin = /^margin/;\n      var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n      var getStyles = function getStyles(elem) {\n        // Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n        // IE throws on elements created in popups\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n        if (elem.ownerDocument.defaultView.opener) {\n          return elem.ownerDocument.defaultView.getComputedStyle(elem, null);\n        }\n\n        return window.getComputedStyle(elem, null);\n      };\n\n      function curCSS(elem, name, computed) {\n        var width,\n            minWidth,\n            maxWidth,\n            ret,\n            style = elem.style;\n        computed = computed || getStyles(elem); // Support: IE9\n        // getPropertyValue is only needed for .css('filter') (#12537)\n\n        if (computed) {\n          ret = computed.getPropertyValue(name) || computed[name];\n        }\n\n        if (computed) {\n          if (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n            ret = jQuery.style(elem, name);\n          } // Support: iOS < 6\n          // A tribute to the \"awesome hack by Dean Edwards\"\n          // iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n          // this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\n\n          if (rnumnonpx.test(ret) && rmargin.test(name)) {\n            // Remember the original values\n            width = style.width;\n            minWidth = style.minWidth;\n            maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n            style.minWidth = style.maxWidth = style.width = ret;\n            ret = computed.width; // Revert the changed values\n\n            style.width = width;\n            style.minWidth = minWidth;\n            style.maxWidth = maxWidth;\n          }\n        }\n\n        return ret !== undefined ? // Support: IE\n        // IE returns zIndex value as an integer.\n        ret + \"\" : ret;\n      }\n\n      function addGetHookIf(conditionFn, hookFn) {\n        // Define the hook, we'll check on the first run if it's really needed.\n        return {\n          get: function get() {\n            if (conditionFn()) {\n              // Hook not needed (or it's not possible to use it due\n              // to missing dependency), remove it.\n              delete this.get;\n              return;\n            } // Hook needed; redefine it so that the support test is not executed again.\n\n\n            return (this.get = hookFn).apply(this, arguments);\n          }\n        };\n      }\n\n      (function () {\n        var pixelPositionVal,\n            boxSizingReliableVal,\n            docElem = document.documentElement,\n            container = document.createElement(\"div\"),\n            div = document.createElement(\"div\");\n\n        if (!div.style) {\n          return;\n        } // Support: IE9-11+\n        // Style of cloned element affects source element cloned (#8908)\n\n\n        div.style.backgroundClip = \"content-box\";\n        div.cloneNode(true).style.backgroundClip = \"\";\n        support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n        container.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" + \"position:absolute\";\n        container.appendChild(div); // Executing both pixelPosition & boxSizingReliable tests require only one layout\n        // so they're executed at the same time to save the second computation.\n\n        function computePixelPositionAndBoxSizingReliable() {\n          div.style.cssText = // Support: Firefox<29, Android 2.3\n          // Vendor-prefix box-sizing\n          \"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" + \"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" + \"border:1px;padding:1px;width:4px;position:absolute\";\n          div.innerHTML = \"\";\n          docElem.appendChild(container);\n          var divStyle = window.getComputedStyle(div, null);\n          pixelPositionVal = divStyle.top !== \"1%\";\n          boxSizingReliableVal = divStyle.width === \"4px\";\n          docElem.removeChild(container);\n        } // Support: node.js jsdom\n        // Don't assume that getComputedStyle is a property of the global object\n\n\n        if (window.getComputedStyle) {\n          jQuery.extend(support, {\n            pixelPosition: function pixelPosition() {\n              // This test is executed only once but we still do memoizing\n              // since we can use the boxSizingReliable pre-computing.\n              // No need to check if the test was already performed, though.\n              computePixelPositionAndBoxSizingReliable();\n              return pixelPositionVal;\n            },\n            boxSizingReliable: function boxSizingReliable() {\n              if (boxSizingReliableVal == null) {\n                computePixelPositionAndBoxSizingReliable();\n              }\n\n              return boxSizingReliableVal;\n            },\n            reliableMarginRight: function reliableMarginRight() {\n              // Support: Android 2.3\n              // Check if div with explicit width and no margin-right incorrectly\n              // gets computed margin-right based on width of container. (#3333)\n              // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n              // This support function is only executed once so no memoizing is needed.\n              var ret,\n                  marginDiv = div.appendChild(document.createElement(\"div\")); // Reset CSS: box-sizing; display; margin; border; padding\n\n              marginDiv.style.cssText = div.style.cssText = // Support: Firefox<29, Android 2.3\n              // Vendor-prefix box-sizing\n              \"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" + \"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n              marginDiv.style.marginRight = marginDiv.style.width = \"0\";\n              div.style.width = \"1px\";\n              docElem.appendChild(container);\n              ret = !parseFloat(window.getComputedStyle(marginDiv, null).marginRight);\n              docElem.removeChild(container);\n              div.removeChild(marginDiv);\n              return ret;\n            }\n          });\n        }\n      })(); // A method for quickly swapping in/out CSS properties to get correct calculations.\n\n\n      jQuery.swap = function (elem, options, callback, args) {\n        var ret,\n            name,\n            old = {}; // Remember the old values, and insert the new ones\n\n        for (name in options) {\n          old[name] = elem.style[name];\n          elem.style[name] = options[name];\n        }\n\n        ret = callback.apply(elem, args || []); // Revert the old values\n\n        for (name in options) {\n          elem.style[name] = old[name];\n        }\n\n        return ret;\n      };\n\n      var // Swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n      // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n      rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n          rnumsplit = new RegExp(\"^(\" + pnum + \")(.*)$\", \"i\"),\n          rrelNum = new RegExp(\"^([+-])=(\" + pnum + \")\", \"i\"),\n          cssShow = {\n        position: \"absolute\",\n        visibility: \"hidden\",\n        display: \"block\"\n      },\n          cssNormalTransform = {\n        letterSpacing: \"0\",\n        fontWeight: \"400\"\n      },\n          cssPrefixes = [\"Webkit\", \"O\", \"Moz\", \"ms\"]; // Return a css property mapped to a potentially vendor prefixed property\n\n      function vendorPropName(style, name) {\n        // Shortcut for names that are not vendor prefixed\n        if (name in style) {\n          return name;\n        } // Check for vendor prefixed names\n\n\n        var capName = name[0].toUpperCase() + name.slice(1),\n            origName = name,\n            i = cssPrefixes.length;\n\n        while (i--) {\n          name = cssPrefixes[i] + capName;\n\n          if (name in style) {\n            return name;\n          }\n        }\n\n        return origName;\n      }\n\n      function setPositiveNumber(elem, value, subtract) {\n        var matches = rnumsplit.exec(value);\n        return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n        Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || \"px\") : value;\n      }\n\n      function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n        var i = extra === (isBorderBox ? \"border\" : \"content\") ? // If we already have the right measurement, avoid augmentation\n        4 : // Otherwise initialize for horizontal or vertical properties\n        name === \"width\" ? 1 : 0,\n            val = 0;\n\n        for (; i < 4; i += 2) {\n          // Both box models exclude margin, so add it if we want it\n          if (extra === \"margin\") {\n            val += jQuery.css(elem, extra + cssExpand[i], true, styles);\n          }\n\n          if (isBorderBox) {\n            // border-box includes padding, so remove it if we want content\n            if (extra === \"content\") {\n              val -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n            } // At this point, extra isn't border nor margin, so remove border\n\n\n            if (extra !== \"margin\") {\n              val -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n            }\n          } else {\n            // At this point, extra isn't content, so add padding\n            val += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // At this point, extra isn't content nor padding, so add border\n\n            if (extra !== \"padding\") {\n              val += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n            }\n          }\n        }\n\n        return val;\n      }\n\n      function getWidthOrHeight(elem, name, extra) {\n        // Start with offset property, which is equivalent to the border-box value\n        var valueIsBorderBox = true,\n            val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n            styles = getStyles(elem),\n            isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\"; // Some non-html elements return undefined for offsetWidth, so check for null/undefined\n        // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n        // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\n        if (val <= 0 || val == null) {\n          // Fall back to computed then uncomputed css if necessary\n          val = curCSS(elem, name, styles);\n\n          if (val < 0 || val == null) {\n            val = elem.style[name];\n          } // Computed unit is not pixels. Stop here and return.\n\n\n          if (rnumnonpx.test(val)) {\n            return val;\n          } // Check for style in case a browser which returns unreliable values\n          // for getComputedStyle silently falls back to the reliable elem.style\n\n\n          valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]); // Normalize \"\", auto, and prepare for extra\n\n          val = parseFloat(val) || 0;\n        } // Use the active box-sizing model to add/subtract irrelevant styles\n\n\n        return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles) + \"px\";\n      }\n\n      function showHide(elements, show) {\n        var display,\n            elem,\n            hidden,\n            values = [],\n            index = 0,\n            length = elements.length;\n\n        for (; index < length; index++) {\n          elem = elements[index];\n\n          if (!elem.style) {\n            continue;\n          }\n\n          values[index] = data_priv.get(elem, \"olddisplay\");\n          display = elem.style.display;\n\n          if (show) {\n            // Reset the inline display of this element to learn if it is\n            // being hidden by cascaded rules or not\n            if (!values[index] && display === \"none\") {\n              elem.style.display = \"\";\n            } // Set elements which have been overridden with display: none\n            // in a stylesheet to whatever the default browser style is\n            // for such an element\n\n\n            if (elem.style.display === \"\" && isHidden(elem)) {\n              values[index] = data_priv.access(elem, \"olddisplay\", defaultDisplay(elem.nodeName));\n            }\n          } else {\n            hidden = isHidden(elem);\n\n            if (display !== \"none\" || !hidden) {\n              data_priv.set(elem, \"olddisplay\", hidden ? display : jQuery.css(elem, \"display\"));\n            }\n          }\n        } // Set the display of most of the elements in a second loop\n        // to avoid the constant reflow\n\n\n        for (index = 0; index < length; index++) {\n          elem = elements[index];\n\n          if (!elem.style) {\n            continue;\n          }\n\n          if (!show || elem.style.display === \"none\" || elem.style.display === \"\") {\n            elem.style.display = show ? values[index] || \"\" : \"none\";\n          }\n        }\n\n        return elements;\n      }\n\n      jQuery.extend({\n        // Add in style property hooks for overriding the default\n        // behavior of getting and setting a style property\n        cssHooks: {\n          opacity: {\n            get: function get(elem, computed) {\n              if (computed) {\n                // We should always get a number back from opacity\n                var ret = curCSS(elem, \"opacity\");\n                return ret === \"\" ? \"1\" : ret;\n              }\n            }\n          }\n        },\n        // Don't automatically add \"px\" to these possibly-unitless properties\n        cssNumber: {\n          \"columnCount\": true,\n          \"fillOpacity\": true,\n          \"flexGrow\": true,\n          \"flexShrink\": true,\n          \"fontWeight\": true,\n          \"lineHeight\": true,\n          \"opacity\": true,\n          \"order\": true,\n          \"orphans\": true,\n          \"widows\": true,\n          \"zIndex\": true,\n          \"zoom\": true\n        },\n        // Add in properties whose names you wish to fix before\n        // setting or getting the value\n        cssProps: {\n          \"float\": \"cssFloat\"\n        },\n        // Get and set the style property on a DOM Node\n        style: function style(elem, name, value, extra) {\n          // Don't set styles on text and comment nodes\n          if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n            return;\n          } // Make sure that we're working with the right name\n\n\n          var ret,\n              type,\n              hooks,\n              origName = jQuery.camelCase(name),\n              style = elem.style;\n          name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName)); // Gets hook for the prefixed version, then unprefixed version\n\n          hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n          if (value !== undefined) {\n            type = _typeof2(value); // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n            if (type === \"string\" && (ret = rrelNum.exec(value))) {\n              value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name)); // Fixes bug #9237\n\n              type = \"number\";\n            } // Make sure that null and NaN values aren't set (#7116)\n\n\n            if (value == null || value !== value) {\n              return;\n            } // If a number, add 'px' to the (except for certain CSS properties)\n\n\n            if (type === \"number\" && !jQuery.cssNumber[origName]) {\n              value += \"px\";\n            } // Support: IE9-11+\n            // background-* props affect original clone's values\n\n\n            if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n              style[name] = \"inherit\";\n            } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n            if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n              style[name] = value;\n            }\n          } else {\n            // If a hook was provided get the non-computed value from there\n            if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n              return ret;\n            } // Otherwise just get the value from the style object\n\n\n            return style[name];\n          }\n        },\n        css: function css(elem, name, extra, styles) {\n          var val,\n              num,\n              hooks,\n              origName = jQuery.camelCase(name); // Make sure that we're working with the right name\n\n          name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName)); // Try prefixed name followed by the unprefixed name\n\n          hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n          if (hooks && \"get\" in hooks) {\n            val = hooks.get(elem, true, extra);\n          } // Otherwise, if a way to get the computed value exists, use that\n\n\n          if (val === undefined) {\n            val = curCSS(elem, name, styles);\n          } // Convert \"normal\" to computed value\n\n\n          if (val === \"normal\" && name in cssNormalTransform) {\n            val = cssNormalTransform[name];\n          } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n          if (extra === \"\" || extra) {\n            num = parseFloat(val);\n            return extra === true || jQuery.isNumeric(num) ? num || 0 : val;\n          }\n\n          return val;\n        }\n      });\n      jQuery.each([\"height\", \"width\"], function (i, name) {\n        jQuery.cssHooks[name] = {\n          get: function get(elem, computed, extra) {\n            if (computed) {\n              // Certain elements can have dimension info if we invisibly show them\n              // but it must have a current display style that would benefit\n              return rdisplayswap.test(jQuery.css(elem, \"display\")) && elem.offsetWidth === 0 ? jQuery.swap(elem, cssShow, function () {\n                return getWidthOrHeight(elem, name, extra);\n              }) : getWidthOrHeight(elem, name, extra);\n            }\n          },\n          set: function set(elem, value, extra) {\n            var styles = extra && getStyles(elem);\n            return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\", styles) : 0);\n          }\n        };\n      }); // Support: Android 2.3\n\n      jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function (elem, computed) {\n        if (computed) {\n          return jQuery.swap(elem, {\n            \"display\": \"inline-block\"\n          }, curCSS, [elem, \"marginRight\"]);\n        }\n      }); // These hooks are used by animate to expand properties\n\n      jQuery.each({\n        margin: \"\",\n        padding: \"\",\n        border: \"Width\"\n      }, function (prefix, suffix) {\n        jQuery.cssHooks[prefix + suffix] = {\n          expand: function expand(value) {\n            var i = 0,\n                expanded = {},\n                // Assumes a single number if not a string\n            parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n            for (; i < 4; i++) {\n              expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n            }\n\n            return expanded;\n          }\n        };\n\n        if (!rmargin.test(prefix)) {\n          jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n        }\n      });\n      jQuery.fn.extend({\n        css: function css(name, value) {\n          return access(this, function (elem, name, value) {\n            var styles,\n                len,\n                map = {},\n                i = 0;\n\n            if (jQuery.isArray(name)) {\n              styles = getStyles(elem);\n              len = name.length;\n\n              for (; i < len; i++) {\n                map[name[i]] = jQuery.css(elem, name[i], false, styles);\n              }\n\n              return map;\n            }\n\n            return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n          }, name, value, arguments.length > 1);\n        },\n        show: function show() {\n          return showHide(this, true);\n        },\n        hide: function hide() {\n          return showHide(this);\n        },\n        toggle: function toggle(state) {\n          if (typeof state === \"boolean\") {\n            return state ? this.show() : this.hide();\n          }\n\n          return this.each(function () {\n            if (isHidden(this)) {\n              jQuery(this).show();\n            } else {\n              jQuery(this).hide();\n            }\n          });\n        }\n      });\n\n      function Tween(elem, options, prop, end, easing) {\n        return new Tween.prototype.init(elem, options, prop, end, easing);\n      }\n\n      jQuery.Tween = Tween;\n      Tween.prototype = {\n        constructor: Tween,\n        init: function init(elem, options, prop, end, easing, unit) {\n          this.elem = elem;\n          this.prop = prop;\n          this.easing = easing || \"swing\";\n          this.options = options;\n          this.start = this.now = this.cur();\n          this.end = end;\n          this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n        },\n        cur: function cur() {\n          var hooks = Tween.propHooks[this.prop];\n          return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n        },\n        run: function run(percent) {\n          var eased,\n              hooks = Tween.propHooks[this.prop];\n\n          if (this.options.duration) {\n            this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n          } else {\n            this.pos = eased = percent;\n          }\n\n          this.now = (this.end - this.start) * eased + this.start;\n\n          if (this.options.step) {\n            this.options.step.call(this.elem, this.now, this);\n          }\n\n          if (hooks && hooks.set) {\n            hooks.set(this);\n          } else {\n            Tween.propHooks._default.set(this);\n          }\n\n          return this;\n        }\n      };\n      Tween.prototype.init.prototype = Tween.prototype;\n      Tween.propHooks = {\n        _default: {\n          get: function get(tween) {\n            var result;\n\n            if (tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)) {\n              return tween.elem[tween.prop];\n            } // Passing an empty string as a 3rd parameter to .css will automatically\n            // attempt a parseFloat and fallback to a string if the parse fails.\n            // Simple values such as \"10px\" are parsed to Float;\n            // complex values such as \"rotate(1rad)\" are returned as-is.\n\n\n            result = jQuery.css(tween.elem, tween.prop, \"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\n\n            return !result || result === \"auto\" ? 0 : result;\n          },\n          set: function set(tween) {\n            // Use step hook for back compat.\n            // Use cssHook if its there.\n            // Use .style if available and use plain properties where available.\n            if (jQuery.fx.step[tween.prop]) {\n              jQuery.fx.step[tween.prop](tween);\n            } else if (tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n              jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n            } else {\n              tween.elem[tween.prop] = tween.now;\n            }\n          }\n        }\n      }; // Support: IE9\n      // Panic based approach to setting things on disconnected nodes\n\n      Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n        set: function set(tween) {\n          if (tween.elem.nodeType && tween.elem.parentNode) {\n            tween.elem[tween.prop] = tween.now;\n          }\n        }\n      };\n      jQuery.easing = {\n        linear: function linear(p) {\n          return p;\n        },\n        swing: function swing(p) {\n          return 0.5 - Math.cos(p * Math.PI) / 2;\n        }\n      };\n      jQuery.fx = Tween.prototype.init; // Back Compat <1.8 extension point\n\n      jQuery.fx.step = {};\n      var fxNow,\n          timerId,\n          rfxtypes = /^(?:toggle|show|hide)$/,\n          rfxnum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\"),\n          rrun = /queueHooks$/,\n          animationPrefilters = [defaultPrefilter],\n          tweeners = {\n        \"*\": [function (prop, value) {\n          var tween = this.createTween(prop, value),\n              target = tween.cur(),\n              parts = rfxnum.exec(value),\n              unit = parts && parts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n              // Starting value computation is required for potential unit mismatches\n          start = (jQuery.cssNumber[prop] || unit !== \"px\" && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)),\n              scale = 1,\n              maxIterations = 20;\n\n          if (start && start[3] !== unit) {\n            // Trust units reported by jQuery.css\n            unit = unit || start[3]; // Make sure we update the tween properties later on\n\n            parts = parts || []; // Iteratively approximate from a nonzero starting point\n\n            start = +target || 1;\n\n            do {\n              // If previous iteration zeroed out, double until we get *something*.\n              // Use string for doubling so we don't accidentally see scale as unchanged below\n              scale = scale || \".5\"; // Adjust and apply\n\n              start = start / scale;\n              jQuery.style(tween.elem, prop, start + unit); // Update scale, tolerating zero or NaN from tween.cur(),\n              // break the loop if scale is unchanged or perfect, or if we've just had enough\n            } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);\n          } // Update tween properties\n\n\n          if (parts) {\n            start = tween.start = +start || +target || 0;\n            tween.unit = unit; // If a +=/-= token was provided, we're doing a relative animation\n\n            tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2];\n          }\n\n          return tween;\n        }]\n      }; // Animations created synchronously will run synchronously\n\n      function createFxNow() {\n        setTimeout(function () {\n          fxNow = undefined;\n        });\n        return fxNow = jQuery.now();\n      } // Generate parameters to create a standard animation\n\n\n      function genFx(type, includeWidth) {\n        var which,\n            i = 0,\n            attrs = {\n          height: type\n        }; // If we include width, step value is 1 to do all cssExpand values,\n        // otherwise step value is 2 to skip over Left and Right\n\n        includeWidth = includeWidth ? 1 : 0;\n\n        for (; i < 4; i += 2 - includeWidth) {\n          which = cssExpand[i];\n          attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n        }\n\n        if (includeWidth) {\n          attrs.opacity = attrs.width = type;\n        }\n\n        return attrs;\n      }\n\n      function createTween(value, prop, animation) {\n        var tween,\n            collection = (tweeners[prop] || []).concat(tweeners[\"*\"]),\n            index = 0,\n            length = collection.length;\n\n        for (; index < length; index++) {\n          if (tween = collection[index].call(animation, prop, value)) {\n            // We're done with this property\n            return tween;\n          }\n        }\n      }\n\n      function defaultPrefilter(elem, props, opts) {\n        /* jshint validthis: true */\n        var prop,\n            value,\n            toggle,\n            tween,\n            hooks,\n            oldfire,\n            display,\n            checkDisplay,\n            anim = this,\n            orig = {},\n            style = elem.style,\n            hidden = elem.nodeType && isHidden(elem),\n            dataShow = data_priv.get(elem, \"fxshow\"); // Handle queue: false promises\n\n        if (!opts.queue) {\n          hooks = jQuery._queueHooks(elem, \"fx\");\n\n          if (hooks.unqueued == null) {\n            hooks.unqueued = 0;\n            oldfire = hooks.empty.fire;\n\n            hooks.empty.fire = function () {\n              if (!hooks.unqueued) {\n                oldfire();\n              }\n            };\n          }\n\n          hooks.unqueued++;\n          anim.always(function () {\n            // Ensure the complete handler is called before this completes\n            anim.always(function () {\n              hooks.unqueued--;\n\n              if (!jQuery.queue(elem, \"fx\").length) {\n                hooks.empty.fire();\n              }\n            });\n          });\n        } // Height/width overflow pass\n\n\n        if (elem.nodeType === 1 && (\"height\" in props || \"width\" in props)) {\n          // Make sure that nothing sneaks out\n          // Record all 3 overflow attributes because IE9-10 do not\n          // change the overflow attribute when overflowX and\n          // overflowY are set to the same value\n          opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Set display property to inline-block for height/width\n          // animations on inline elements that are having width/height animated\n\n          display = jQuery.css(elem, \"display\"); // Test default display if display is currently \"none\"\n\n          checkDisplay = display === \"none\" ? data_priv.get(elem, \"olddisplay\") || defaultDisplay(elem.nodeName) : display;\n\n          if (checkDisplay === \"inline\" && jQuery.css(elem, \"float\") === \"none\") {\n            style.display = \"inline-block\";\n          }\n        }\n\n        if (opts.overflow) {\n          style.overflow = \"hidden\";\n          anim.always(function () {\n            style.overflow = opts.overflow[0];\n            style.overflowX = opts.overflow[1];\n            style.overflowY = opts.overflow[2];\n          });\n        } // show/hide pass\n\n\n        for (prop in props) {\n          value = props[prop];\n\n          if (rfxtypes.exec(value)) {\n            delete props[prop];\n            toggle = toggle || value === \"toggle\";\n\n            if (value === (hidden ? \"hide\" : \"show\")) {\n              // If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n              if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n                hidden = true;\n              } else {\n                continue;\n              }\n            }\n\n            orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop); // Any non-fx value stops us from restoring the original display value\n          } else {\n            display = undefined;\n          }\n        }\n\n        if (!jQuery.isEmptyObject(orig)) {\n          if (dataShow) {\n            if (\"hidden\" in dataShow) {\n              hidden = dataShow.hidden;\n            }\n          } else {\n            dataShow = data_priv.access(elem, \"fxshow\", {});\n          } // Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\n\n          if (toggle) {\n            dataShow.hidden = !hidden;\n          }\n\n          if (hidden) {\n            jQuery(elem).show();\n          } else {\n            anim.done(function () {\n              jQuery(elem).hide();\n            });\n          }\n\n          anim.done(function () {\n            var prop;\n            data_priv.remove(elem, \"fxshow\");\n\n            for (prop in orig) {\n              jQuery.style(elem, prop, orig[prop]);\n            }\n          });\n\n          for (prop in orig) {\n            tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n            if (!(prop in dataShow)) {\n              dataShow[prop] = tween.start;\n\n              if (hidden) {\n                tween.end = tween.start;\n                tween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n              }\n            }\n          } // If this is a noop like .hide().hide(), restore an overwritten display value\n\n        } else if ((display === \"none\" ? defaultDisplay(elem.nodeName) : display) === \"inline\") {\n          style.display = display;\n        }\n      }\n\n      function propFilter(props, specialEasing) {\n        var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n        for (index in props) {\n          name = jQuery.camelCase(index);\n          easing = specialEasing[name];\n          value = props[index];\n\n          if (jQuery.isArray(value)) {\n            easing = value[1];\n            value = props[index] = value[0];\n          }\n\n          if (index !== name) {\n            props[name] = value;\n            delete props[index];\n          }\n\n          hooks = jQuery.cssHooks[name];\n\n          if (hooks && \"expand\" in hooks) {\n            value = hooks.expand(value);\n            delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n            // Reusing 'index' because we have the correct \"name\"\n\n            for (index in value) {\n              if (!(index in props)) {\n                props[index] = value[index];\n                specialEasing[index] = easing;\n              }\n            }\n          } else {\n            specialEasing[name] = easing;\n          }\n        }\n      }\n\n      function Animation(elem, properties, options) {\n        var result,\n            stopped,\n            index = 0,\n            length = animationPrefilters.length,\n            deferred = jQuery.Deferred().always(function () {\n          // Don't match elem in the :animated selector\n          delete tick.elem;\n        }),\n            tick = function tick() {\n          if (stopped) {\n            return false;\n          }\n\n          var currentTime = fxNow || createFxNow(),\n              remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n              // Support: Android 2.3\n          // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n          temp = remaining / animation.duration || 0,\n              percent = 1 - temp,\n              index = 0,\n              length = animation.tweens.length;\n\n          for (; index < length; index++) {\n            animation.tweens[index].run(percent);\n          }\n\n          deferred.notifyWith(elem, [animation, percent, remaining]);\n\n          if (percent < 1 && length) {\n            return remaining;\n          } else {\n            deferred.resolveWith(elem, [animation]);\n            return false;\n          }\n        },\n            animation = deferred.promise({\n          elem: elem,\n          props: jQuery.extend({}, properties),\n          opts: jQuery.extend(true, {\n            specialEasing: {}\n          }, options),\n          originalProperties: properties,\n          originalOptions: options,\n          startTime: fxNow || createFxNow(),\n          duration: options.duration,\n          tweens: [],\n          createTween: function createTween(prop, end) {\n            var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n            animation.tweens.push(tween);\n            return tween;\n          },\n          stop: function stop(gotoEnd) {\n            var index = 0,\n                // If we are going to the end, we want to run all the tweens\n            // otherwise we skip this part\n            length = gotoEnd ? animation.tweens.length : 0;\n\n            if (stopped) {\n              return this;\n            }\n\n            stopped = true;\n\n            for (; index < length; index++) {\n              animation.tweens[index].run(1);\n            } // Resolve when we played the last frame; otherwise, reject\n\n\n            if (gotoEnd) {\n              deferred.resolveWith(elem, [animation, gotoEnd]);\n            } else {\n              deferred.rejectWith(elem, [animation, gotoEnd]);\n            }\n\n            return this;\n          }\n        }),\n            props = animation.props;\n\n        propFilter(props, animation.opts.specialEasing);\n\n        for (; index < length; index++) {\n          result = animationPrefilters[index].call(animation, elem, props, animation.opts);\n\n          if (result) {\n            return result;\n          }\n        }\n\n        jQuery.map(props, createTween, animation);\n\n        if (jQuery.isFunction(animation.opts.start)) {\n          animation.opts.start.call(elem, animation);\n        }\n\n        jQuery.fx.timer(jQuery.extend(tick, {\n          elem: elem,\n          anim: animation,\n          queue: animation.opts.queue\n        })); // attach callbacks from options\n\n        return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n      }\n\n      jQuery.Animation = jQuery.extend(Animation, {\n        tweener: function tweener(props, callback) {\n          if (jQuery.isFunction(props)) {\n            callback = props;\n            props = [\"*\"];\n          } else {\n            props = props.split(\" \");\n          }\n\n          var prop,\n              index = 0,\n              length = props.length;\n\n          for (; index < length; index++) {\n            prop = props[index];\n            tweeners[prop] = tweeners[prop] || [];\n            tweeners[prop].unshift(callback);\n          }\n        },\n        prefilter: function prefilter(callback, prepend) {\n          if (prepend) {\n            animationPrefilters.unshift(callback);\n          } else {\n            animationPrefilters.push(callback);\n          }\n        }\n      });\n\n      jQuery.speed = function (speed, easing, fn) {\n        var opt = speed && _typeof2(speed) === \"object\" ? jQuery.extend({}, speed) : {\n          complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,\n          duration: speed,\n          easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n        };\n        opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default; // Normalize opt.queue - true/undefined/null -> \"fx\"\n\n        if (opt.queue == null || opt.queue === true) {\n          opt.queue = \"fx\";\n        } // Queueing\n\n\n        opt.old = opt.complete;\n\n        opt.complete = function () {\n          if (jQuery.isFunction(opt.old)) {\n            opt.old.call(this);\n          }\n\n          if (opt.queue) {\n            jQuery.dequeue(this, opt.queue);\n          }\n        };\n\n        return opt;\n      };\n\n      jQuery.fn.extend({\n        fadeTo: function fadeTo(speed, to, easing, callback) {\n          // Show any hidden elements after setting opacity to 0\n          return this.filter(isHidden).css(\"opacity\", 0).show() // Animate to the value specified\n          .end().animate({\n            opacity: to\n          }, speed, easing, callback);\n        },\n        animate: function animate(prop, speed, easing, callback) {\n          var empty = jQuery.isEmptyObject(prop),\n              optall = jQuery.speed(speed, easing, callback),\n              doAnimation = function doAnimation() {\n            // Operate on a copy of prop so per-property easing won't be lost\n            var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n            if (empty || data_priv.get(this, \"finish\")) {\n              anim.stop(true);\n            }\n          };\n\n          doAnimation.finish = doAnimation;\n          return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n        },\n        stop: function stop(type, clearQueue, gotoEnd) {\n          var stopQueue = function stopQueue(hooks) {\n            var stop = hooks.stop;\n            delete hooks.stop;\n            stop(gotoEnd);\n          };\n\n          if (typeof type !== \"string\") {\n            gotoEnd = clearQueue;\n            clearQueue = type;\n            type = undefined;\n          }\n\n          if (clearQueue && type !== false) {\n            this.queue(type || \"fx\", []);\n          }\n\n          return this.each(function () {\n            var dequeue = true,\n                index = type != null && type + \"queueHooks\",\n                timers = jQuery.timers,\n                data = data_priv.get(this);\n\n            if (index) {\n              if (data[index] && data[index].stop) {\n                stopQueue(data[index]);\n              }\n            } else {\n              for (index in data) {\n                if (data[index] && data[index].stop && rrun.test(index)) {\n                  stopQueue(data[index]);\n                }\n              }\n            }\n\n            for (index = timers.length; index--;) {\n              if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n                timers[index].anim.stop(gotoEnd);\n                dequeue = false;\n                timers.splice(index, 1);\n              }\n            } // Start the next in the queue if the last step wasn't forced.\n            // Timers currently will call their complete callbacks, which\n            // will dequeue but only if they were gotoEnd.\n\n\n            if (dequeue || !gotoEnd) {\n              jQuery.dequeue(this, type);\n            }\n          });\n        },\n        finish: function finish(type) {\n          if (type !== false) {\n            type = type || \"fx\";\n          }\n\n          return this.each(function () {\n            var index,\n                data = data_priv.get(this),\n                queue = data[type + \"queue\"],\n                hooks = data[type + \"queueHooks\"],\n                timers = jQuery.timers,\n                length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n            data.finish = true; // Empty the queue first\n\n            jQuery.queue(this, type, []);\n\n            if (hooks && hooks.stop) {\n              hooks.stop.call(this, true);\n            } // Look for any active animations, and finish them\n\n\n            for (index = timers.length; index--;) {\n              if (timers[index].elem === this && timers[index].queue === type) {\n                timers[index].anim.stop(true);\n                timers.splice(index, 1);\n              }\n            } // Look for any animations in the old queue and finish them\n\n\n            for (index = 0; index < length; index++) {\n              if (queue[index] && queue[index].finish) {\n                queue[index].finish.call(this);\n              }\n            } // Turn off finishing flag\n\n\n            delete data.finish;\n          });\n        }\n      });\n      jQuery.each([\"toggle\", \"show\", \"hide\"], function (i, name) {\n        var cssFn = jQuery.fn[name];\n\n        jQuery.fn[name] = function (speed, easing, callback) {\n          return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n        };\n      }); // Generate shortcuts for custom animations\n\n      jQuery.each({\n        slideDown: genFx(\"show\"),\n        slideUp: genFx(\"hide\"),\n        slideToggle: genFx(\"toggle\"),\n        fadeIn: {\n          opacity: \"show\"\n        },\n        fadeOut: {\n          opacity: \"hide\"\n        },\n        fadeToggle: {\n          opacity: \"toggle\"\n        }\n      }, function (name, props) {\n        jQuery.fn[name] = function (speed, easing, callback) {\n          return this.animate(props, speed, easing, callback);\n        };\n      });\n      jQuery.timers = [];\n\n      jQuery.fx.tick = function () {\n        var timer,\n            i = 0,\n            timers = jQuery.timers;\n        fxNow = jQuery.now();\n\n        for (; i < timers.length; i++) {\n          timer = timers[i]; // Checks the timer has not already been removed\n\n          if (!timer() && timers[i] === timer) {\n            timers.splice(i--, 1);\n          }\n        }\n\n        if (!timers.length) {\n          jQuery.fx.stop();\n        }\n\n        fxNow = undefined;\n      };\n\n      jQuery.fx.timer = function (timer) {\n        jQuery.timers.push(timer);\n\n        if (timer()) {\n          jQuery.fx.start();\n        } else {\n          jQuery.timers.pop();\n        }\n      };\n\n      jQuery.fx.interval = 13;\n\n      jQuery.fx.start = function () {\n        if (!timerId) {\n          timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);\n        }\n      };\n\n      jQuery.fx.stop = function () {\n        clearInterval(timerId);\n        timerId = null;\n      };\n\n      jQuery.fx.speeds = {\n        slow: 600,\n        fast: 200,\n        // Default speed\n        _default: 400\n      }; // Based off of the plugin by Clint Helfers, with permission.\n      // http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n      jQuery.fn.delay = function (time, type) {\n        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n        type = type || \"fx\";\n        return this.queue(type, function (next, hooks) {\n          var timeout = setTimeout(next, time);\n\n          hooks.stop = function () {\n            clearTimeout(timeout);\n          };\n        });\n      };\n\n      (function () {\n        var input = document.createElement(\"input\"),\n            select = document.createElement(\"select\"),\n            opt = select.appendChild(document.createElement(\"option\"));\n        input.type = \"checkbox\"; // Support: iOS<=5.1, Android<=4.2+\n        // Default value for a checkbox should be \"on\"\n\n        support.checkOn = input.value !== \"\"; // Support: IE<=11+\n        // Must access selectedIndex to make default options select\n\n        support.optSelected = opt.selected; // Support: Android<=2.3\n        // Options inside disabled selects are incorrectly marked as disabled\n\n        select.disabled = true;\n        support.optDisabled = !opt.disabled; // Support: IE<=11+\n        // An input loses its value after becoming a radio\n\n        input = document.createElement(\"input\");\n        input.value = \"t\";\n        input.type = \"radio\";\n        support.radioValue = input.value === \"t\";\n      })();\n\n      var nodeHook,\n          boolHook,\n          attrHandle = jQuery.expr.attrHandle;\n      jQuery.fn.extend({\n        attr: function attr(name, value) {\n          return access(this, jQuery.attr, name, value, arguments.length > 1);\n        },\n        removeAttr: function removeAttr(name) {\n          return this.each(function () {\n            jQuery.removeAttr(this, name);\n          });\n        }\n      });\n      jQuery.extend({\n        attr: function attr(elem, name, value) {\n          var hooks,\n              ret,\n              nType = elem.nodeType; // don't get/set attributes on text, comment and attribute nodes\n\n          if (!elem || nType === 3 || nType === 8 || nType === 2) {\n            return;\n          } // Fallback to prop when attributes are not supported\n\n\n          if (_typeof2(elem.getAttribute) === strundefined) {\n            return jQuery.prop(elem, name, value);\n          } // All attributes are lowercase\n          // Grab necessary hook if one is defined\n\n\n          if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n            name = name.toLowerCase();\n            hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook);\n          }\n\n          if (value !== undefined) {\n            if (value === null) {\n              jQuery.removeAttr(elem, name);\n            } else if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n              return ret;\n            } else {\n              elem.setAttribute(name, value + \"\");\n              return value;\n            }\n          } else if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n            return ret;\n          } else {\n            ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n            return ret == null ? undefined : ret;\n          }\n        },\n        removeAttr: function removeAttr(elem, value) {\n          var name,\n              propName,\n              i = 0,\n              attrNames = value && value.match(rnotwhite);\n\n          if (attrNames && elem.nodeType === 1) {\n            while (name = attrNames[i++]) {\n              propName = jQuery.propFix[name] || name; // Boolean attributes get special treatment (#10870)\n\n              if (jQuery.expr.match.bool.test(name)) {\n                // Set corresponding property to false\n                elem[propName] = false;\n              }\n\n              elem.removeAttribute(name);\n            }\n          }\n        },\n        attrHooks: {\n          type: {\n            set: function set(elem, value) {\n              if (!support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\")) {\n                var val = elem.value;\n                elem.setAttribute(\"type\", value);\n\n                if (val) {\n                  elem.value = val;\n                }\n\n                return value;\n              }\n            }\n          }\n        }\n      }); // Hooks for boolean attributes\n\n      boolHook = {\n        set: function set(elem, value, name) {\n          if (value === false) {\n            // Remove boolean attributes when set to false\n            jQuery.removeAttr(elem, name);\n          } else {\n            elem.setAttribute(name, name);\n          }\n\n          return name;\n        }\n      };\n      jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n        var getter = attrHandle[name] || jQuery.find.attr;\n\n        attrHandle[name] = function (elem, name, isXML) {\n          var ret, handle;\n\n          if (!isXML) {\n            // Avoid an infinite loop by temporarily removing this function from the getter\n            handle = attrHandle[name];\n            attrHandle[name] = ret;\n            ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;\n            attrHandle[name] = handle;\n          }\n\n          return ret;\n        };\n      });\n      var rfocusable = /^(?:input|select|textarea|button)$/i;\n      jQuery.fn.extend({\n        prop: function prop(name, value) {\n          return access(this, jQuery.prop, name, value, arguments.length > 1);\n        },\n        removeProp: function removeProp(name) {\n          return this.each(function () {\n            delete this[jQuery.propFix[name] || name];\n          });\n        }\n      });\n      jQuery.extend({\n        propFix: {\n          \"for\": \"htmlFor\",\n          \"class\": \"className\"\n        },\n        prop: function prop(elem, name, value) {\n          var ret,\n              hooks,\n              notxml,\n              nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n          if (!elem || nType === 3 || nType === 8 || nType === 2) {\n            return;\n          }\n\n          notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\n\n          if (notxml) {\n            // Fix name and attach hooks\n            name = jQuery.propFix[name] || name;\n            hooks = jQuery.propHooks[name];\n          }\n\n          if (value !== undefined) {\n            return hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : elem[name] = value;\n          } else {\n            return hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null ? ret : elem[name];\n          }\n        },\n        propHooks: {\n          tabIndex: {\n            get: function get(elem) {\n              return elem.hasAttribute(\"tabindex\") || rfocusable.test(elem.nodeName) || elem.href ? elem.tabIndex : -1;\n            }\n          }\n        }\n      });\n\n      if (!support.optSelected) {\n        jQuery.propHooks.selected = {\n          get: function get(elem) {\n            var parent = elem.parentNode;\n\n            if (parent && parent.parentNode) {\n              parent.parentNode.selectedIndex;\n            }\n\n            return null;\n          }\n        };\n      }\n\n      jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n        jQuery.propFix[this.toLowerCase()] = this;\n      });\n      var rclass = /[\\t\\r\\n\\f]/g;\n      jQuery.fn.extend({\n        addClass: function addClass(value) {\n          var classes,\n              elem,\n              cur,\n              clazz,\n              j,\n              finalValue,\n              proceed = typeof value === \"string\" && value,\n              i = 0,\n              len = this.length;\n\n          if (jQuery.isFunction(value)) {\n            return this.each(function (j) {\n              jQuery(this).addClass(value.call(this, j, this.className));\n            });\n          }\n\n          if (proceed) {\n            // The disjunction here is for better compressibility (see removeClass)\n            classes = (value || \"\").match(rnotwhite) || [];\n\n            for (; i < len; i++) {\n              elem = this[i];\n              cur = elem.nodeType === 1 && (elem.className ? (\" \" + elem.className + \" \").replace(rclass, \" \") : \" \");\n\n              if (cur) {\n                j = 0;\n\n                while (clazz = classes[j++]) {\n                  if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                    cur += clazz + \" \";\n                  }\n                } // only assign if different to avoid unneeded rendering.\n\n\n                finalValue = jQuery.trim(cur);\n\n                if (elem.className !== finalValue) {\n                  elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(value) {\n          var classes,\n              elem,\n              cur,\n              clazz,\n              j,\n              finalValue,\n              proceed = arguments.length === 0 || typeof value === \"string\" && value,\n              i = 0,\n              len = this.length;\n\n          if (jQuery.isFunction(value)) {\n            return this.each(function (j) {\n              jQuery(this).removeClass(value.call(this, j, this.className));\n            });\n          }\n\n          if (proceed) {\n            classes = (value || \"\").match(rnotwhite) || [];\n\n            for (; i < len; i++) {\n              elem = this[i]; // This expression is here for better compressibility (see addClass)\n\n              cur = elem.nodeType === 1 && (elem.className ? (\" \" + elem.className + \" \").replace(rclass, \" \") : \"\");\n\n              if (cur) {\n                j = 0;\n\n                while (clazz = classes[j++]) {\n                  // Remove *all* instances\n                  while (cur.indexOf(\" \" + clazz + \" \") >= 0) {\n                    cur = cur.replace(\" \" + clazz + \" \", \" \");\n                  }\n                } // Only assign if different to avoid unneeded rendering.\n\n\n                finalValue = value ? jQuery.trim(cur) : \"\";\n\n                if (elem.className !== finalValue) {\n                  elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        toggleClass: function toggleClass(value, stateVal) {\n          var type = _typeof2(value);\n\n          if (typeof stateVal === \"boolean\" && type === \"string\") {\n            return stateVal ? this.addClass(value) : this.removeClass(value);\n          }\n\n          if (jQuery.isFunction(value)) {\n            return this.each(function (i) {\n              jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n            });\n          }\n\n          return this.each(function () {\n            if (type === \"string\") {\n              // Toggle individual class names\n              var className,\n                  i = 0,\n                  self = jQuery(this),\n                  classNames = value.match(rnotwhite) || [];\n\n              while (className = classNames[i++]) {\n                // Check each className given, space separated list\n                if (self.hasClass(className)) {\n                  self.removeClass(className);\n                } else {\n                  self.addClass(className);\n                }\n              } // Toggle whole class name\n\n            } else if (type === strundefined || type === \"boolean\") {\n              if (this.className) {\n                // store className if set\n                data_priv.set(this, \"__className__\", this.className);\n              } // If the element has a class name or if we're passed `false`,\n              // then remove the whole classname (if there was one, the above saved it).\n              // Otherwise bring back whatever was previously saved (if anything),\n              // falling back to the empty string if nothing was stored.\n\n\n              this.className = this.className || value === false ? \"\" : data_priv.get(this, \"__className__\") || \"\";\n            }\n          });\n        },\n        hasClass: function hasClass(selector) {\n          var className = \" \" + selector + \" \",\n              i = 0,\n              l = this.length;\n\n          for (; i < l; i++) {\n            if (this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf(className) >= 0) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n      });\n      var rreturn = /\\r/g;\n      jQuery.fn.extend({\n        val: function val(value) {\n          var hooks,\n              ret,\n              isFunction,\n              elem = this[0];\n\n          if (!arguments.length) {\n            if (elem) {\n              hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n              if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n                return ret;\n              }\n\n              ret = elem.value;\n              return typeof ret === \"string\" ? // Handle most common string cases\n              ret.replace(rreturn, \"\") : // Handle cases where value is null/undef or number\n              ret == null ? \"\" : ret;\n            }\n\n            return;\n          }\n\n          isFunction = jQuery.isFunction(value);\n          return this.each(function (i) {\n            var val;\n\n            if (this.nodeType !== 1) {\n              return;\n            }\n\n            if (isFunction) {\n              val = value.call(this, i, jQuery(this).val());\n            } else {\n              val = value;\n            } // Treat null/undefined as \"\"; convert numbers to string\n\n\n            if (val == null) {\n              val = \"\";\n            } else if (typeof val === \"number\") {\n              val += \"\";\n            } else if (jQuery.isArray(val)) {\n              val = jQuery.map(val, function (value) {\n                return value == null ? \"\" : value + \"\";\n              });\n            }\n\n            hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n            if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n              this.value = val;\n            }\n          });\n        }\n      });\n      jQuery.extend({\n        valHooks: {\n          option: {\n            get: function get(elem) {\n              var val = jQuery.find.attr(elem, \"value\");\n              return val != null ? val : // Support: IE10-11+\n              // option.text throws exceptions (#14686, #14858)\n              jQuery.trim(jQuery.text(elem));\n            }\n          },\n          select: {\n            get: function get(elem) {\n              var value,\n                  option,\n                  options = elem.options,\n                  index = elem.selectedIndex,\n                  one = elem.type === \"select-one\" || index < 0,\n                  values = one ? null : [],\n                  max = one ? index + 1 : options.length,\n                  i = index < 0 ? max : one ? index : 0; // Loop through all the selected options\n\n              for (; i < max; i++) {\n                option = options[i]; // IE6-9 doesn't update selected after form reset (#2551)\n\n                if ((option.selected || i === index) && ( // Don't return options that are disabled or in a disabled optgroup\n                support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, \"optgroup\"))) {\n                  // Get the specific value for the option\n                  value = jQuery(option).val(); // We don't need an array for one selects\n\n                  if (one) {\n                    return value;\n                  } // Multi-Selects return an array\n\n\n                  values.push(value);\n                }\n              }\n\n              return values;\n            },\n            set: function set(elem, value) {\n              var optionSet,\n                  option,\n                  options = elem.options,\n                  values = jQuery.makeArray(value),\n                  i = options.length;\n\n              while (i--) {\n                option = options[i];\n\n                if (option.selected = jQuery.inArray(option.value, values) >= 0) {\n                  optionSet = true;\n                }\n              } // Force browsers to behave consistently when non-matching value is set\n\n\n              if (!optionSet) {\n                elem.selectedIndex = -1;\n              }\n\n              return values;\n            }\n          }\n        }\n      }); // Radios and checkboxes getter/setter\n\n      jQuery.each([\"radio\", \"checkbox\"], function () {\n        jQuery.valHooks[this] = {\n          set: function set(elem, value) {\n            if (jQuery.isArray(value)) {\n              return elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0;\n            }\n          }\n        };\n\n        if (!support.checkOn) {\n          jQuery.valHooks[this].get = function (elem) {\n            return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n          };\n        }\n      }); // Return jQuery for attributes-only inclusion\n\n      jQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function (i, name) {\n        // Handle event binding\n        jQuery.fn[name] = function (data, fn) {\n          return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n        };\n      });\n      jQuery.fn.extend({\n        hover: function hover(fnOver, fnOut) {\n          return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n        },\n        bind: function bind(types, data, fn) {\n          return this.on(types, null, data, fn);\n        },\n        unbind: function unbind(types, fn) {\n          return this.off(types, null, fn);\n        },\n        delegate: function delegate(selector, types, data, fn) {\n          return this.on(types, selector, data, fn);\n        },\n        undelegate: function undelegate(selector, types, fn) {\n          // ( namespace ) or ( selector, types [, fn] )\n          return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n        }\n      });\n      var nonce = jQuery.now();\n      var rquery = /\\?/; // Support: Android 2.3\n      // Workaround failure to string-cast null input\n\n      jQuery.parseJSON = function (data) {\n        return JSON.parse(data + \"\");\n      }; // Cross-browser xml parsing\n\n\n      jQuery.parseXML = function (data) {\n        var xml, tmp;\n\n        if (!data || typeof data !== \"string\") {\n          return null;\n        } // Support: IE9\n\n\n        try {\n          tmp = new DOMParser();\n          xml = tmp.parseFromString(data, \"text/xml\");\n        } catch (e) {\n          xml = undefined;\n        }\n\n        if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n          jQuery.error(\"Invalid XML: \" + data);\n        }\n\n        return xml;\n      };\n\n      var rhash = /#.*$/,\n          rts = /([?&])_=[^&]*/,\n          rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n          // #7653, #8125, #8152: local protocol detection\n      rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n          rnoContent = /^(?:GET|HEAD)$/,\n          rprotocol = /^\\/\\//,\n          rurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n      /* Prefilters\r\n       * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n       * 2) These are called:\r\n       *    - BEFORE asking for a transport\r\n       *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n       * 3) key is the dataType\r\n       * 4) the catchall symbol \"*\" can be used\r\n       * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n       */\n      prefilters = {},\n\n      /* Transports bindings\r\n       * 1) key is the dataType\r\n       * 2) the catchall symbol \"*\" can be used\r\n       * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n       */\n      transports = {},\n          // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n      allTypes = \"*/\".concat(\"*\"),\n          // Document location\n      ajaxLocation = window.location.href,\n          // Segment location into parts\n      ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || []; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n      function addToPrefiltersOrTransports(structure) {\n        // dataTypeExpression is optional and defaults to \"*\"\n        return function (dataTypeExpression, func) {\n          if (typeof dataTypeExpression !== \"string\") {\n            func = dataTypeExpression;\n            dataTypeExpression = \"*\";\n          }\n\n          var dataType,\n              i = 0,\n              dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\n\n          if (jQuery.isFunction(func)) {\n            // For each dataType in the dataTypeExpression\n            while (dataType = dataTypes[i++]) {\n              // Prepend if requested\n              if (dataType[0] === \"+\") {\n                dataType = dataType.slice(1) || \"*\";\n                (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n              } else {\n                (structure[dataType] = structure[dataType] || []).push(func);\n              }\n            }\n          }\n        };\n      } // Base inspection function for prefilters and transports\n\n\n      function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n        var inspected = {},\n            seekingTransport = structure === transports;\n\n        function inspect(dataType) {\n          var selected;\n          inspected[dataType] = true;\n          jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n            var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n            if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n              options.dataTypes.unshift(dataTypeOrTransport);\n              inspect(dataTypeOrTransport);\n              return false;\n            } else if (seekingTransport) {\n              return !(selected = dataTypeOrTransport);\n            }\n          });\n          return selected;\n        }\n\n        return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n      } // A special extend for ajax options\n      // that takes \"flat\" options (not to be deep extended)\n      // Fixes #9887\n\n\n      function ajaxExtend(target, src) {\n        var key,\n            deep,\n            flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n        for (key in src) {\n          if (src[key] !== undefined) {\n            (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n          }\n        }\n\n        if (deep) {\n          jQuery.extend(true, target, deep);\n        }\n\n        return target;\n      }\n      /* Handles responses to an ajax request:\r\n       * - finds the right dataType (mediates between content-type and expected dataType)\r\n       * - returns the corresponding response\r\n       */\n\n\n      function ajaxHandleResponses(s, jqXHR, responses) {\n        var ct,\n            type,\n            finalDataType,\n            firstDataType,\n            contents = s.contents,\n            dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n        while (dataTypes[0] === \"*\") {\n          dataTypes.shift();\n\n          if (ct === undefined) {\n            ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n          }\n        } // Check if we're dealing with a known content-type\n\n\n        if (ct) {\n          for (type in contents) {\n            if (contents[type] && contents[type].test(ct)) {\n              dataTypes.unshift(type);\n              break;\n            }\n          }\n        } // Check to see if we have a response for the expected dataType\n\n\n        if (dataTypes[0] in responses) {\n          finalDataType = dataTypes[0];\n        } else {\n          // Try convertible dataTypes\n          for (type in responses) {\n            if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n              finalDataType = type;\n              break;\n            }\n\n            if (!firstDataType) {\n              firstDataType = type;\n            }\n          } // Or just use first one\n\n\n          finalDataType = finalDataType || firstDataType;\n        } // If we found a dataType\n        // We add the dataType to the list if needed\n        // and return the corresponding response\n\n\n        if (finalDataType) {\n          if (finalDataType !== dataTypes[0]) {\n            dataTypes.unshift(finalDataType);\n          }\n\n          return responses[finalDataType];\n        }\n      }\n      /* Chain conversions given the request and the original response\r\n       * Also sets the responseXXX fields on the jqXHR instance\r\n       */\n\n\n      function ajaxConvert(s, response, jqXHR, isSuccess) {\n        var conv2,\n            current,\n            conv,\n            tmp,\n            prev,\n            converters = {},\n            // Work with a copy of dataTypes in case we need to modify it for conversion\n        dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n        if (dataTypes[1]) {\n          for (conv in s.converters) {\n            converters[conv.toLowerCase()] = s.converters[conv];\n          }\n        }\n\n        current = dataTypes.shift(); // Convert to each sequential dataType\n\n        while (current) {\n          if (s.responseFields[current]) {\n            jqXHR[s.responseFields[current]] = response;\n          } // Apply the dataFilter if provided\n\n\n          if (!prev && isSuccess && s.dataFilter) {\n            response = s.dataFilter(response, s.dataType);\n          }\n\n          prev = current;\n          current = dataTypes.shift();\n\n          if (current) {\n            // There's only work to do if current dataType is non-auto\n            if (current === \"*\") {\n              current = prev; // Convert response if prev dataType is non-auto and differs from current\n            } else if (prev !== \"*\" && prev !== current) {\n              // Seek a direct converter\n              conv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\n\n              if (!conv) {\n                for (conv2 in converters) {\n                  // If conv2 outputs current\n                  tmp = conv2.split(\" \");\n\n                  if (tmp[1] === current) {\n                    // If prev can be converted to accepted input\n                    conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\n                    if (conv) {\n                      // Condense equivalence converters\n                      if (conv === true) {\n                        conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                      } else if (converters[conv2] !== true) {\n                        current = tmp[0];\n                        dataTypes.unshift(tmp[1]);\n                      }\n\n                      break;\n                    }\n                  }\n                }\n              } // Apply converter (if not an equivalence)\n\n\n              if (conv !== true) {\n                // Unless errors are allowed to bubble, catch and return them\n                if (conv && s[\"throws\"]) {\n                  response = conv(response);\n                } else {\n                  try {\n                    response = conv(response);\n                  } catch (e) {\n                    return {\n                      state: \"parsererror\",\n                      error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                    };\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        return {\n          state: \"success\",\n          data: response\n        };\n      }\n\n      jQuery.extend({\n        // Counter for holding the number of active queries\n        active: 0,\n        // Last-Modified header cache for next request\n        lastModified: {},\n        etag: {},\n        ajaxSettings: {\n          url: ajaxLocation,\n          type: \"GET\",\n          isLocal: rlocalProtocol.test(ajaxLocParts[1]),\n          global: true,\n          processData: true,\n          async: true,\n          contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n          /*\r\n          timeout: 0,\r\n          data: null,\r\n          dataType: null,\r\n          username: null,\r\n          password: null,\r\n          cache: null,\r\n          throws: false,\r\n          traditional: false,\r\n          headers: {},\r\n          */\n          accepts: {\n            \"*\": allTypes,\n            text: \"text/plain\",\n            html: \"text/html\",\n            xml: \"application/xml, text/xml\",\n            json: \"application/json, text/javascript\"\n          },\n          contents: {\n            xml: /xml/,\n            html: /html/,\n            json: /json/\n          },\n          responseFields: {\n            xml: \"responseXML\",\n            text: \"responseText\",\n            json: \"responseJSON\"\n          },\n          // Data converters\n          // Keys separate source (or catchall \"*\") and destination types with a single space\n          converters: {\n            // Convert anything to text\n            \"* text\": String,\n            // Text to html (true = no transformation)\n            \"text html\": true,\n            // Evaluate text as a json expression\n            \"text json\": jQuery.parseJSON,\n            // Parse text as xml\n            \"text xml\": jQuery.parseXML\n          },\n          // For options that shouldn't be deep extended:\n          // you can add your own custom options here if\n          // and when you create one that shouldn't be\n          // deep extended (see ajaxExtend)\n          flatOptions: {\n            url: true,\n            context: true\n          }\n        },\n        // Creates a full fledged settings object into target\n        // with both ajaxSettings and settings fields.\n        // If target is omitted, writes into ajaxSettings.\n        ajaxSetup: function ajaxSetup(target, settings) {\n          return settings ? // Building a settings object\n          ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n          ajaxExtend(jQuery.ajaxSettings, target);\n        },\n        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n        ajaxTransport: addToPrefiltersOrTransports(transports),\n        // Main method\n        ajax: function ajax(url, options) {\n          // If url is an object, simulate pre-1.5 signature\n          if (_typeof2(url) === \"object\") {\n            options = url;\n            url = undefined;\n          } // Force options to be an object\n\n\n          options = options || {};\n\n          var transport,\n              // URL without anti-cache param\n          cacheURL,\n              // Response headers\n          responseHeadersString,\n              responseHeaders,\n              // timeout handle\n          timeoutTimer,\n              // Cross-domain detection vars\n          parts,\n              // To know if global events are to be dispatched\n          fireGlobals,\n              // Loop variable\n          i,\n              // Create the final options object\n          s = jQuery.ajaxSetup({}, options),\n              // Callbacks context\n          callbackContext = s.context || s,\n              // Context for global events is callbackContext if it is a DOM node or jQuery collection\n          globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n              // Deferreds\n          deferred = jQuery.Deferred(),\n              completeDeferred = jQuery.Callbacks(\"once memory\"),\n              // Status-dependent callbacks\n          _statusCode = s.statusCode || {},\n              // Headers (they are sent all at once)\n          requestHeaders = {},\n              requestHeadersNames = {},\n              // The jqXHR state\n          state = 0,\n              // Default abort message\n          strAbort = \"canceled\",\n              // Fake xhr\n          jqXHR = {\n            readyState: 0,\n            // Builds headers hashtable if needed\n            getResponseHeader: function getResponseHeader(key) {\n              var match;\n\n              if (state === 2) {\n                if (!responseHeaders) {\n                  responseHeaders = {};\n\n                  while (match = rheaders.exec(responseHeadersString)) {\n                    responseHeaders[match[1].toLowerCase()] = match[2];\n                  }\n                }\n\n                match = responseHeaders[key.toLowerCase()];\n              }\n\n              return match == null ? null : match;\n            },\n            // Raw string\n            getAllResponseHeaders: function getAllResponseHeaders() {\n              return state === 2 ? responseHeadersString : null;\n            },\n            // Caches the header\n            setRequestHeader: function setRequestHeader(name, value) {\n              var lname = name.toLowerCase();\n\n              if (!state) {\n                name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;\n                requestHeaders[name] = value;\n              }\n\n              return this;\n            },\n            // Overrides response content-type header\n            overrideMimeType: function overrideMimeType(type) {\n              if (!state) {\n                s.mimeType = type;\n              }\n\n              return this;\n            },\n            // Status-dependent callbacks\n            statusCode: function statusCode(map) {\n              var code;\n\n              if (map) {\n                if (state < 2) {\n                  for (code in map) {\n                    // Lazy-add the new callback in a way that preserves old ones\n                    _statusCode[code] = [_statusCode[code], map[code]];\n                  }\n                } else {\n                  // Execute the appropriate callbacks\n                  jqXHR.always(map[jqXHR.status]);\n                }\n              }\n\n              return this;\n            },\n            // Cancel the request\n            abort: function abort(statusText) {\n              var finalText = statusText || strAbort;\n\n              if (transport) {\n                transport.abort(finalText);\n              }\n\n              done(0, finalText);\n              return this;\n            }\n          }; // Attach deferreds\n\n\n          deferred.promise(jqXHR).complete = completeDeferred.add;\n          jqXHR.success = jqXHR.done;\n          jqXHR.error = jqXHR.fail; // Remove hash character (#7531: and string promotion)\n          // Add protocol if not provided (prefilters might expect it)\n          // Handle falsy url in the settings object (#10093: consistency with old signature)\n          // We also use the url parameter if available\n\n          s.url = ((url || s.url || ajaxLocation) + \"\").replace(rhash, \"\").replace(rprotocol, ajaxLocParts[1] + \"//\"); // Alias method option to type as per ticket #12004\n\n          s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n          s.dataTypes = jQuery.trim(s.dataType || \"*\").toLowerCase().match(rnotwhite) || [\"\"]; // A cross-domain request is in order when we have a protocol:host:port mismatch\n\n          if (s.crossDomain == null) {\n            parts = rurl.exec(s.url.toLowerCase());\n            s.crossDomain = !!(parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === \"http:\" ? \"80\" : \"443\")) !== (ajaxLocParts[3] || (ajaxLocParts[1] === \"http:\" ? \"80\" : \"443\"))));\n          } // Convert data if not already a string\n\n\n          if (s.data && s.processData && typeof s.data !== \"string\") {\n            s.data = jQuery.param(s.data, s.traditional);\n          } // Apply prefilters\n\n\n          inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n          if (state === 2) {\n            return jqXHR;\n          } // We can fire global events as of now if asked to\n          // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n          fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n          if (fireGlobals && jQuery.active++ === 0) {\n            jQuery.event.trigger(\"ajaxStart\");\n          } // Uppercase the type\n\n\n          s.type = s.type.toUpperCase(); // Determine if request has content\n\n          s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n          // and/or If-None-Match header later on\n\n          cacheURL = s.url; // More options handling for requests with no content\n\n          if (!s.hasContent) {\n            // If data is available, append data to url\n            if (s.data) {\n              cacheURL = s.url += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\n\n              delete s.data;\n            } // Add anti-cache in url if needed\n\n\n            if (s.cache === false) {\n              s.url = rts.test(cacheURL) ? // If there is already a '_' parameter, set its value\n              cacheURL.replace(rts, \"$1_=\" + nonce++) : // Otherwise add one to the end\n              cacheURL + (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce++;\n            }\n          } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n          if (s.ifModified) {\n            if (jQuery.lastModified[cacheURL]) {\n              jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n            }\n\n            if (jQuery.etag[cacheURL]) {\n              jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n            }\n          } // Set the correct header, if data is being sent\n\n\n          if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n            jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n          } // Set the Accepts header for the server, depending on the dataType\n\n\n          jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]); // Check for headers option\n\n          for (i in s.headers) {\n            jqXHR.setRequestHeader(i, s.headers[i]);\n          } // Allow custom headers/mimetypes and early abort\n\n\n          if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {\n            // Abort if not done already and return\n            return jqXHR.abort();\n          } // Aborting is no longer a cancellation\n\n\n          strAbort = \"abort\"; // Install callbacks on deferreds\n\n          for (i in {\n            success: 1,\n            error: 1,\n            complete: 1\n          }) {\n            jqXHR[i](s[i]);\n          } // Get transport\n\n\n          transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n          if (!transport) {\n            done(-1, \"No Transport\");\n          } else {\n            jqXHR.readyState = 1; // Send global event\n\n            if (fireGlobals) {\n              globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n            } // Timeout\n\n\n            if (s.async && s.timeout > 0) {\n              timeoutTimer = setTimeout(function () {\n                jqXHR.abort(\"timeout\");\n              }, s.timeout);\n            }\n\n            try {\n              state = 1;\n              transport.send(requestHeaders, done);\n            } catch (e) {\n              // Propagate exception as error if not done\n              if (state < 2) {\n                done(-1, e); // Simply rethrow otherwise\n              } else {\n                throw e;\n              }\n            }\n          } // Callback for when everything is done\n\n\n          function done(status, nativeStatusText, responses, headers) {\n            var isSuccess,\n                success,\n                error,\n                response,\n                modified,\n                statusText = nativeStatusText; // Called once\n\n            if (state === 2) {\n              return;\n            } // State is \"done\" now\n\n\n            state = 2; // Clear timeout if it exists\n\n            if (timeoutTimer) {\n              clearTimeout(timeoutTimer);\n            } // Dereference transport for early garbage collection\n            // (no matter how long the jqXHR object will be used)\n\n\n            transport = undefined; // Cache response headers\n\n            responseHeadersString = headers || \"\"; // Set readyState\n\n            jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n            isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n            if (responses) {\n              response = ajaxHandleResponses(s, jqXHR, responses);\n            } // Convert no matter what (that way responseXXX fields are always set)\n\n\n            response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n            if (isSuccess) {\n              // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n              if (s.ifModified) {\n                modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\n                if (modified) {\n                  jQuery.lastModified[cacheURL] = modified;\n                }\n\n                modified = jqXHR.getResponseHeader(\"etag\");\n\n                if (modified) {\n                  jQuery.etag[cacheURL] = modified;\n                }\n              } // if no content\n\n\n              if (status === 204 || s.type === \"HEAD\") {\n                statusText = \"nocontent\"; // if not modified\n              } else if (status === 304) {\n                statusText = \"notmodified\"; // If we have data, let's convert it\n              } else {\n                statusText = response.state;\n                success = response.data;\n                error = response.error;\n                isSuccess = !error;\n              }\n            } else {\n              // Extract error from statusText and normalize for non-aborts\n              error = statusText;\n\n              if (status || !statusText) {\n                statusText = \"error\";\n\n                if (status < 0) {\n                  status = 0;\n                }\n              }\n            } // Set data for the fake xhr object\n\n\n            jqXHR.status = status;\n            jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\n\n            if (isSuccess) {\n              deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n            } else {\n              deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n            } // Status-dependent callbacks\n\n\n            jqXHR.statusCode(_statusCode);\n            _statusCode = undefined;\n\n            if (fireGlobals) {\n              globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n            } // Complete\n\n\n            completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n            if (fireGlobals) {\n              globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]); // Handle the global AJAX counter\n\n              if (! --jQuery.active) {\n                jQuery.event.trigger(\"ajaxStop\");\n              }\n            }\n          }\n\n          return jqXHR;\n        },\n        getJSON: function getJSON(url, data, callback) {\n          return jQuery.get(url, data, callback, \"json\");\n        },\n        getScript: function getScript(url, callback) {\n          return jQuery.get(url, undefined, callback, \"script\");\n        }\n      });\n      jQuery.each([\"get\", \"post\"], function (i, method) {\n        jQuery[method] = function (url, data, callback, type) {\n          // Shift arguments if data argument was omitted\n          if (jQuery.isFunction(data)) {\n            type = type || callback;\n            callback = data;\n            data = undefined;\n          }\n\n          return jQuery.ajax({\n            url: url,\n            type: method,\n            dataType: type,\n            data: data,\n            success: callback\n          });\n        };\n      });\n\n      jQuery._evalUrl = function (url) {\n        return jQuery.ajax({\n          url: url,\n          type: \"GET\",\n          dataType: \"script\",\n          async: false,\n          global: false,\n          \"throws\": true\n        });\n      };\n\n      jQuery.fn.extend({\n        wrapAll: function wrapAll(html) {\n          var wrap;\n\n          if (jQuery.isFunction(html)) {\n            return this.each(function (i) {\n              jQuery(this).wrapAll(html.call(this, i));\n            });\n          }\n\n          if (this[0]) {\n            // The elements to wrap the target around\n            wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n            if (this[0].parentNode) {\n              wrap.insertBefore(this[0]);\n            }\n\n            wrap.map(function () {\n              var elem = this;\n\n              while (elem.firstElementChild) {\n                elem = elem.firstElementChild;\n              }\n\n              return elem;\n            }).append(this);\n          }\n\n          return this;\n        },\n        wrapInner: function wrapInner(html) {\n          if (jQuery.isFunction(html)) {\n            return this.each(function (i) {\n              jQuery(this).wrapInner(html.call(this, i));\n            });\n          }\n\n          return this.each(function () {\n            var self = jQuery(this),\n                contents = self.contents();\n\n            if (contents.length) {\n              contents.wrapAll(html);\n            } else {\n              self.append(html);\n            }\n          });\n        },\n        wrap: function wrap(html) {\n          var isFunction = jQuery.isFunction(html);\n          return this.each(function (i) {\n            jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n          });\n        },\n        unwrap: function unwrap() {\n          return this.parent().each(function () {\n            if (!jQuery.nodeName(this, \"body\")) {\n              jQuery(this).replaceWith(this.childNodes);\n            }\n          }).end();\n        }\n      });\n\n      jQuery.expr.filters.hidden = function (elem) {\n        // Support: Opera <= 12.12\n        // Opera reports offsetWidths and offsetHeights less than zero on some elements\n        return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n      };\n\n      jQuery.expr.filters.visible = function (elem) {\n        return !jQuery.expr.filters.hidden(elem);\n      };\n\n      var r20 = /%20/g,\n          rbracket = /\\[\\]$/,\n          rCRLF = /\\r?\\n/g,\n          rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n          rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n      function buildParams(prefix, obj, traditional, add) {\n        var name;\n\n        if (jQuery.isArray(obj)) {\n          // Serialize array item.\n          jQuery.each(obj, function (i, v) {\n            if (traditional || rbracket.test(prefix)) {\n              // Treat each array item as a scalar.\n              add(prefix, v);\n            } else {\n              // Item is non-scalar (array or object), encode its numeric index.\n              buildParams(prefix + \"[\" + (_typeof2(v) === \"object\" ? i : \"\") + \"]\", v, traditional, add);\n            }\n          });\n        } else if (!traditional && jQuery.type(obj) === \"object\") {\n          // Serialize object item.\n          for (name in obj) {\n            buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n          }\n        } else {\n          // Serialize scalar item.\n          add(prefix, obj);\n        }\n      } // Serialize an array of form elements or a set of\n      // key/values into a query string\n\n\n      jQuery.param = function (a, traditional) {\n        var prefix,\n            s = [],\n            add = function add(key, value) {\n          // If value is a function, invoke it and return its value\n          value = jQuery.isFunction(value) ? value() : value == null ? \"\" : value;\n          s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n        }; // Set traditional to true for jQuery <= 1.3.2 behavior.\n\n\n        if (traditional === undefined) {\n          traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n        } // If an array was passed in, assume that it is an array of form elements.\n\n\n        if (jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n          // Serialize the form elements\n          jQuery.each(a, function () {\n            add(this.name, this.value);\n          });\n        } else {\n          // If traditional, encode the \"old\" way (the way 1.3.2 or older\n          // did it), otherwise encode params recursively.\n          for (prefix in a) {\n            buildParams(prefix, a[prefix], traditional, add);\n          }\n        } // Return the resulting serialization\n\n\n        return s.join(\"&\").replace(r20, \"+\");\n      };\n\n      jQuery.fn.extend({\n        serialize: function serialize() {\n          return jQuery.param(this.serializeArray());\n        },\n        serializeArray: function serializeArray() {\n          return this.map(function () {\n            // Can add propHook for \"elements\" to filter or add form elements\n            var elements = jQuery.prop(this, \"elements\");\n            return elements ? jQuery.makeArray(elements) : this;\n          }).filter(function () {\n            var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n            return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n          }).map(function (i, elem) {\n            var val = jQuery(this).val();\n            return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {\n              return {\n                name: elem.name,\n                value: val.replace(rCRLF, \"\\r\\n\")\n              };\n            }) : {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          }).get();\n        }\n      });\n\n      jQuery.ajaxSettings.xhr = function () {\n        try {\n          return new XMLHttpRequest();\n        } catch (e) {}\n      };\n\n      var xhrId = 0,\n          xhrCallbacks = {},\n          xhrSuccessStatus = {\n        // file protocol always yields status code 0, assume 200\n        0: 200,\n        // Support: IE9\n        // #1450: sometimes IE returns 1223 when it should be 204\n        1223: 204\n      },\n          xhrSupported = jQuery.ajaxSettings.xhr(); // Support: IE9\n      // Open requests must be manually aborted on unload (#5280)\n      // See https://support.microsoft.com/kb/2856746 for more info\n\n      if (window.attachEvent) {\n        window.attachEvent(\"onunload\", function () {\n          for (var key in xhrCallbacks) {\n            xhrCallbacks[key]();\n          }\n        });\n      }\n\n      support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n      support.ajax = xhrSupported = !!xhrSupported;\n      jQuery.ajaxTransport(function (options) {\n        var _callback; // Cross domain only allowed if supported through XMLHttpRequest\n\n\n        if (support.cors || xhrSupported && !options.crossDomain) {\n          return {\n            send: function send(headers, complete) {\n              var i,\n                  xhr = options.xhr(),\n                  id = ++xhrId;\n              xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n              if (options.xhrFields) {\n                for (i in options.xhrFields) {\n                  xhr[i] = options.xhrFields[i];\n                }\n              } // Override mime type if needed\n\n\n              if (options.mimeType && xhr.overrideMimeType) {\n                xhr.overrideMimeType(options.mimeType);\n              } // X-Requested-With header\n              // For cross-domain requests, seeing as conditions for a preflight are\n              // akin to a jigsaw puzzle, we simply never set it to be sure.\n              // (it can always be set on a per-request basis or even using ajaxSetup)\n              // For same-domain requests, won't change header if already provided.\n\n\n              if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n                headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n              } // Set headers\n\n\n              for (i in headers) {\n                xhr.setRequestHeader(i, headers[i]);\n              } // Callback\n\n\n              _callback = function callback(type) {\n                return function () {\n                  if (_callback) {\n                    delete xhrCallbacks[id];\n                    _callback = xhr.onload = xhr.onerror = null;\n\n                    if (type === \"abort\") {\n                      xhr.abort();\n                    } else if (type === \"error\") {\n                      complete( // file: protocol always yields status 0; see #8605, #14207\n                      xhr.status, xhr.statusText);\n                    } else {\n                      complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE9\n                      // Accessing binary-data responseText throws an exception\n                      // (#11426)\n                      typeof xhr.responseText === \"string\" ? {\n                        text: xhr.responseText\n                      } : undefined, xhr.getAllResponseHeaders());\n                    }\n                  }\n                };\n              }; // Listen to events\n\n\n              xhr.onload = _callback();\n              xhr.onerror = _callback(\"error\"); // Create the abort callback\n\n              _callback = xhrCallbacks[id] = _callback(\"abort\");\n\n              try {\n                // Do send the request (this may raise an exception)\n                xhr.send(options.hasContent && options.data || null);\n              } catch (e) {\n                // #14683: Only rethrow if this hasn't been notified as an error yet\n                if (_callback) {\n                  throw e;\n                }\n              }\n            },\n            abort: function abort() {\n              if (_callback) {\n                _callback();\n              }\n            }\n          };\n        }\n      }); // Install script dataType\n\n      jQuery.ajaxSetup({\n        accepts: {\n          script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n        },\n        contents: {\n          script: /(?:java|ecma)script/\n        },\n        converters: {\n          \"text script\": function textScript(text) {\n            jQuery.globalEval(text);\n            return text;\n          }\n        }\n      }); // Handle cache's special case and crossDomain\n\n      jQuery.ajaxPrefilter(\"script\", function (s) {\n        if (s.cache === undefined) {\n          s.cache = false;\n        }\n\n        if (s.crossDomain) {\n          s.type = \"GET\";\n        }\n      }); // Bind script tag hack transport\n\n      jQuery.ajaxTransport(\"script\", function (s) {\n        // This transport only deals with cross domain requests\n        if (s.crossDomain) {\n          var script, _callback2;\n\n          return {\n            send: function send(_, complete) {\n              script = jQuery(\"<script>\").prop({\n                async: true,\n                charset: s.scriptCharset,\n                src: s.url\n              }).on(\"load error\", _callback2 = function callback(evt) {\n                script.remove();\n                _callback2 = null;\n\n                if (evt) {\n                  complete(evt.type === \"error\" ? 404 : 200, evt.type);\n                }\n              });\n              document.head.appendChild(script[0]);\n            },\n            abort: function abort() {\n              if (_callback2) {\n                _callback2();\n              }\n            }\n          };\n        }\n      });\n      var oldCallbacks = [],\n          rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n      jQuery.ajaxSetup({\n        jsonp: \"callback\",\n        jsonpCallback: function jsonpCallback() {\n          var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce++;\n          this[callback] = true;\n          return callback;\n        }\n      }); // Detect, normalize options and install callbacks for jsonp requests\n\n      jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n        var callbackName,\n            overwritten,\n            responseContainer,\n            jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && !(s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\n        if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n          // Get callback name, remembering preexisting value associated with it\n          callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n          if (jsonProp) {\n            s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n          } else if (s.jsonp !== false) {\n            s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n          } // Use data converter to retrieve json after script execution\n\n\n          s.converters[\"script json\"] = function () {\n            if (!responseContainer) {\n              jQuery.error(callbackName + \" was not called\");\n            }\n\n            return responseContainer[0];\n          }; // force json dataType\n\n\n          s.dataTypes[0] = \"json\"; // Install callback\n\n          overwritten = window[callbackName];\n\n          window[callbackName] = function () {\n            responseContainer = arguments;\n          }; // Clean-up function (fires after converters)\n\n\n          jqXHR.always(function () {\n            // Restore preexisting value\n            window[callbackName] = overwritten; // Save back as free\n\n            if (s[callbackName]) {\n              // make sure that re-using the options doesn't screw things around\n              s.jsonpCallback = originalSettings.jsonpCallback; // save the callback name for future use\n\n              oldCallbacks.push(callbackName);\n            } // Call if it was a function and we have a response\n\n\n            if (responseContainer && jQuery.isFunction(overwritten)) {\n              overwritten(responseContainer[0]);\n            }\n\n            responseContainer = overwritten = undefined;\n          }); // Delegate to script\n\n          return \"script\";\n        }\n      }); // data: string of html\n      // context (optional): If specified, the fragment will be created in this context, defaults to document\n      // keepScripts (optional): If true, will include scripts passed in the html string\n\n      jQuery.parseHTML = function (data, context, keepScripts) {\n        if (!data || typeof data !== \"string\") {\n          return null;\n        }\n\n        if (typeof context === \"boolean\") {\n          keepScripts = context;\n          context = false;\n        }\n\n        context = context || document;\n        var parsed = rsingleTag.exec(data),\n            scripts = !keepScripts && []; // Single tag\n\n        if (parsed) {\n          return [context.createElement(parsed[1])];\n        }\n\n        parsed = jQuery.buildFragment([data], context, scripts);\n\n        if (scripts && scripts.length) {\n          jQuery(scripts).remove();\n        }\n\n        return jQuery.merge([], parsed.childNodes);\n      }; // Keep a copy of the old load method\n\n\n      var _load = jQuery.fn.load;\n      /**\r\n       * Load a url into a page\r\n       */\n\n      jQuery.fn.load = function (url, params, callback) {\n        if (typeof url !== \"string\" && _load) {\n          return _load.apply(this, arguments);\n        }\n\n        var selector,\n            type,\n            response,\n            self = this,\n            off = url.indexOf(\" \");\n\n        if (off >= 0) {\n          selector = jQuery.trim(url.slice(off));\n          url = url.slice(0, off);\n        } // If it's a function\n\n\n        if (jQuery.isFunction(params)) {\n          // We assume that it's the callback\n          callback = params;\n          params = undefined; // Otherwise, build a param string\n        } else if (params && _typeof2(params) === \"object\") {\n          type = \"POST\";\n        } // If we have elements to modify, make the request\n\n\n        if (self.length > 0) {\n          jQuery.ajax({\n            url: url,\n            // if \"type\" variable is undefined, then \"GET\" method will be used\n            type: type,\n            dataType: \"html\",\n            data: params\n          }).done(function (responseText) {\n            // Save response for use in complete callback\n            response = arguments;\n            self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n            // Exclude scripts to avoid IE 'Permission Denied' errors\n            jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n            responseText);\n          }).complete(callback && function (jqXHR, status) {\n            self.each(callback, response || [jqXHR.responseText, status, jqXHR]);\n          });\n        }\n\n        return this;\n      }; // Attach a bunch of functions for handling common AJAX events\n\n\n      jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (i, type) {\n        jQuery.fn[type] = function (fn) {\n          return this.on(type, fn);\n        };\n      });\n\n      jQuery.expr.filters.animated = function (elem) {\n        return jQuery.grep(jQuery.timers, function (fn) {\n          return elem === fn.elem;\n        }).length;\n      };\n\n      var docElem = window.document.documentElement;\n      /**\r\n       * Gets a window from an element\r\n       */\n\n      function getWindow(elem) {\n        return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;\n      }\n\n      jQuery.offset = {\n        setOffset: function setOffset(elem, options, i) {\n          var curPosition,\n              curLeft,\n              curCSSTop,\n              curTop,\n              curOffset,\n              curCSSLeft,\n              calculatePosition,\n              position = jQuery.css(elem, \"position\"),\n              curElem = jQuery(elem),\n              props = {}; // Set position first, in-case top/left are set even on static elem\n\n          if (position === \"static\") {\n            elem.style.position = \"relative\";\n          }\n\n          curOffset = curElem.offset();\n          curCSSTop = jQuery.css(elem, \"top\");\n          curCSSLeft = jQuery.css(elem, \"left\");\n          calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n          // top or left is auto and position is either absolute or fixed\n\n          if (calculatePosition) {\n            curPosition = curElem.position();\n            curTop = curPosition.top;\n            curLeft = curPosition.left;\n          } else {\n            curTop = parseFloat(curCSSTop) || 0;\n            curLeft = parseFloat(curCSSLeft) || 0;\n          }\n\n          if (jQuery.isFunction(options)) {\n            options = options.call(elem, i, curOffset);\n          }\n\n          if (options.top != null) {\n            props.top = options.top - curOffset.top + curTop;\n          }\n\n          if (options.left != null) {\n            props.left = options.left - curOffset.left + curLeft;\n          }\n\n          if (\"using\" in options) {\n            options.using.call(elem, props);\n          } else {\n            curElem.css(props);\n          }\n        }\n      };\n      jQuery.fn.extend({\n        offset: function offset(options) {\n          if (arguments.length) {\n            return options === undefined ? this : this.each(function (i) {\n              jQuery.offset.setOffset(this, options, i);\n            });\n          }\n\n          var docElem,\n              win,\n              elem = this[0],\n              box = {\n            top: 0,\n            left: 0\n          },\n              doc = elem && elem.ownerDocument;\n\n          if (!doc) {\n            return;\n          }\n\n          docElem = doc.documentElement; // Make sure it's not a disconnected DOM node\n\n          if (!jQuery.contains(docElem, elem)) {\n            return box;\n          } // Support: BlackBerry 5, iOS 3 (original iPhone)\n          // If we don't have gBCR, just use 0,0 rather than error\n\n\n          if (_typeof2(elem.getBoundingClientRect) !== strundefined) {\n            box = elem.getBoundingClientRect();\n          }\n\n          win = getWindow(doc);\n          return {\n            top: box.top + win.pageYOffset - docElem.clientTop,\n            left: box.left + win.pageXOffset - docElem.clientLeft\n          };\n        },\n        position: function position() {\n          if (!this[0]) {\n            return;\n          }\n\n          var offsetParent,\n              offset,\n              elem = this[0],\n              parentOffset = {\n            top: 0,\n            left: 0\n          }; // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\n\n          if (jQuery.css(elem, \"position\") === \"fixed\") {\n            // Assume getBoundingClientRect is there when computed position is fixed\n            offset = elem.getBoundingClientRect();\n          } else {\n            // Get *real* offsetParent\n            offsetParent = this.offsetParent(); // Get correct offsets\n\n            offset = this.offset();\n\n            if (!jQuery.nodeName(offsetParent[0], \"html\")) {\n              parentOffset = offsetParent.offset();\n            } // Add offsetParent borders\n\n\n            parentOffset.top += jQuery.css(offsetParent[0], \"borderTopWidth\", true);\n            parentOffset.left += jQuery.css(offsetParent[0], \"borderLeftWidth\", true);\n          } // Subtract parent offsets and element margins\n\n\n          return {\n            top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n            left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n          };\n        },\n        offsetParent: function offsetParent() {\n          return this.map(function () {\n            var offsetParent = this.offsetParent || docElem;\n\n            while (offsetParent && !jQuery.nodeName(offsetParent, \"html\") && jQuery.css(offsetParent, \"position\") === \"static\") {\n              offsetParent = offsetParent.offsetParent;\n            }\n\n            return offsetParent || docElem;\n          });\n        }\n      }); // Create scrollLeft and scrollTop methods\n\n      jQuery.each({\n        scrollLeft: \"pageXOffset\",\n        scrollTop: \"pageYOffset\"\n      }, function (method, prop) {\n        var top = \"pageYOffset\" === prop;\n\n        jQuery.fn[method] = function (val) {\n          return access(this, function (elem, method, val) {\n            var win = getWindow(elem);\n\n            if (val === undefined) {\n              return win ? win[prop] : elem[method];\n            }\n\n            if (win) {\n              win.scrollTo(!top ? val : window.pageXOffset, top ? val : window.pageYOffset);\n            } else {\n              elem[method] = val;\n            }\n          }, method, val, arguments.length, null);\n        };\n      }); // Support: Safari<7+, Chrome<37+\n      // Add the top/left cssHooks using jQuery.fn.position\n      // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n      // Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n      // getComputedStyle returns percent when specified for top/left/bottom/right;\n      // rather than make the css module depend on the offset module, just check for it here\n\n      jQuery.each([\"top\", \"left\"], function (i, prop) {\n        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n          if (computed) {\n            computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n            return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n          }\n        });\n      }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n      jQuery.each({\n        Height: \"height\",\n        Width: \"width\"\n      }, function (name, type) {\n        jQuery.each({\n          padding: \"inner\" + name,\n          content: type,\n          \"\": \"outer\" + name\n        }, function (defaultExtra, funcName) {\n          // Margin is only for outerHeight, outerWidth\n          jQuery.fn[funcName] = function (margin, value) {\n            var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n                extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n            return access(this, function (elem, type, value) {\n              var doc;\n\n              if (jQuery.isWindow(elem)) {\n                // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n                // isn't a whole lot we can do. See pull request at this URL for discussion:\n                // https://github.com/jquery/jquery/pull/764\n                return elem.document.documentElement[\"client\" + name];\n              } // Get document width or height\n\n\n              if (elem.nodeType === 9) {\n                doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n                // whichever is greatest\n\n                return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n              }\n\n              return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n              jQuery.css(elem, type, extra) : // Set width or height on the element\n              jQuery.style(elem, type, value, extra);\n            }, type, chainable ? margin : undefined, chainable, null);\n          };\n        });\n      }); // The number of elements contained in the matched element set\n\n      jQuery.fn.size = function () {\n        return this.length;\n      };\n\n      jQuery.fn.andSelf = jQuery.fn.addBack; // Register as a named AMD module, since jQuery can be concatenated with other\n      // files that may use define, but not via a proper concatenation script that\n      // understands anonymous AMD modules. A named AMD is safest and most robust\n      // way to register. Lowercase jquery is used because AMD module names are\n      // derived from file names, and jQuery is normally delivered in a lowercase\n      // file name. Do this after creating the global so that if an AMD module wants\n      // to call noConflict to hide this version of jQuery, it will work.\n      // Note that for maximum portability, libraries that are not jQuery should\n      // declare themselves as anonymous modules, and avoid setting a global if an\n      // AMD loader is present. jQuery is a special case. For more information, see\n      // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n      if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n          return jQuery;\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n      }\n\n      var // Map over jQuery in case of overwrite\n      _jQuery = window.jQuery,\n          // Map over the $ in case of overwrite\n      _$ = window.$;\n\n      jQuery.noConflict = function (deep) {\n        if (window.$ === jQuery) {\n          window.$ = _$;\n        }\n\n        if (deep && window.jQuery === jQuery) {\n          window.jQuery = _jQuery;\n        }\n\n        return jQuery;\n      }; // Expose jQuery and $ identifiers, even in AMD\n      // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n      // and CommonJS for browser emulators (#13566)\n\n\n      if (_typeof2(noGlobal) === strundefined) {\n        window.jQuery = window.$ = jQuery;\n      }\n\n      return jQuery;\n    });\n  }, {}]\n}, {}, [1]);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./src/js/tictactoe.js?");

/***/ })

/******/ });